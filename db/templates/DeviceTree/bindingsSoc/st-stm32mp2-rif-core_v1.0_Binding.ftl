
[#ftl]
[#assign Tabulation=dts_get_tabs(pDtLevel)]
[#assign TABnode = Tabulation.TABN]
[#assign TABprop = Tabulation.TABP]
[#assign index = 0]
[#assign FeatureIDUIIndex = index][#assign index += 1]
[#assign MasterCidUIIndex = index][#assign index += 1]
[#assign SecUIIndex = index][#assign index += 1]
[#assign PrivUIIndex = index][#assign index += 1]
[#assign LockUIIndex = index][#assign index += 1]
[#assign SystemModeUIIndex = index]
[#assign RifAwarePrefix = "RIFAware_"]
[#assign RifAwareExtraTablePrefix = "RIFAwareExtraTable_"]
[#assign RifAwareIPName=""]
[#assign RifAwareIPsWithSpeceficProp=["TAMP","HSEM","EXTI1","EXTI2"]]
[#assign RifAwareIPsWithNoAccess= ["FMC", "PWR", "RCC", "GPIO", "DSIHOST", "LTDC", "ETHSW", "HPDMA1", "HPDMA2", "HPDMA3","GPDMA1"]]
[#list mx_RIF_Params.entrySet() as RIF_Params]
	[#if (RIF_Params.key)?? && RIF_Params.key?matches("^"+RifAwarePrefix+".+")]
		[#compress]
			[#assign RifAwareIPName=RIF_Params.key?keep_after(RifAwarePrefix)]
			[#assign RifAwareIPFeatures = RIF_Params.value]
			[#assign FeatureNamesList=[]]
			[#assign FeatureIDList=[]]
			[#assign MasterCIDList=[]]
			[#assign SecureList=[]]
			[#assign PrivilegeList=[]]
			[#assign SCIDList=[]]
			[#assign SemList=[]]
			[#assign FilteringCIDList=[]]
			[#assign LockList=[]]
			[#assign SystemModeList=[]]
			[#list RifAwareIPFeatures.entrySet() as RifAwareIPFeatureList]
				[#assign isCIDmatchesInt = RifAwareIPFeatureList.value[MasterCidUIIndex]?matches("[123456789]")]
				[#assign isCIDZero = RifAwareIPFeatureList.value[MasterCidUIIndex]=="-"]
				[#-- Populate FeatureNamesList --]
				[#assign FeatureNamesList+=[RifAwareIPFeatureList.key]]
				[#-- Populate FeatureIDList --]
				[#assign FeatureIDList+=[(RifAwareIPFeatureList.value[FeatureIDUIIndex])?matches("[0-9]\\d{0,9}")?then("("+RifAwareIPFeatureList.value[FeatureIDUIIndex]+")","_"+RifAwareIPFeatureList.value[FeatureIDUIIndex]?substring(0, 3)+"("+RifAwareIPFeatureList.value[FeatureIDUIIndex]?substring(3)+")")]]
				[#-- Populate MasterCIDList with formatted Master CIDs --]
				[#if isCIDmatchesInt]
					[#if RifAwareIPFeatureList.value[SystemModeUIIndex]?? && (RifAwareIPFeatureList.value[SystemModeUIIndex] == "true")]
						[#assign MasterCIDList+=["RIF_CID"+RifAwareIPFeatureList.value[MasterCidUIIndex]+"_BF"]]
					[#else]
						[#assign MasterCIDList+=["RIF_UNUSED"]]
					[/#if]
				[#elseif isCIDZero ]
					[#if RifAwareIPsWithNoAccess?seq_contains(RifAwareIPName)]
						[#assign MasterCIDList+=["EMPTY_SEMWL"]]
					[#else]
						[#assign MasterCIDList+=["RIF_UNUSED"]]
					[/#if]
				[#elseif RifAwareIPFeatureList.value[MasterCidUIIndex]?contains("&")]
					[#assign MasterCID = ""]
					[#list RifAwareIPFeatureList.value[MasterCidUIIndex]?split("&") as CIDx]
						[#assign MasterCID +=  "RIF_CID"+ CIDx +"_BF|"]
					[/#list]
					[#assign MasterCIDList+=[MasterCID]]
				[/#if]
				[#-- Populate SecureList --]
				[#if isCIDZero]
					[#assign SecureList+= ["RIF_NSEC"]]
				[#else]
					[#assign SecureList+= [(RifAwareIPFeatureList.value[SecUIIndex]=="true")?then("RIF_SEC","RIF_NSEC")]]
				[/#if]
				[#-- Populate SecureList --]
				[#assign PrivilegeList+= [(RifAwareIPFeatureList.value[PrivUIIndex]=="true")?then("RIF_PRIV","RIF_NPRIV")] ]
				[#-- Populate PrivilegeList --]
				[#assign SCIDList+= [isCIDmatchesInt?then("RIF_CID"+RifAwareIPFeatureList.value[MasterCidUIIndex],"RIF_UNUSED")] ]
				[#-- Populate SemList --]
				[#if isCIDZero && RifAwareIPsWithNoAccess?seq_contains(RifAwareIPName)]
					[#assign SemList+= ["RIF_SEM_EN"]]
				[#else]
					[#assign SemList+= [(RifAwareIPFeatureList.value[MasterCidUIIndex]?contains("&"))?then("RIF_SEM_EN","RIF_SEM_DIS")] ]
				[/#if]
				[#-- Populate FilteringCIDList --]
				[#if RifAwareIPsWithNoAccess?seq_contains(RifAwareIPName) && isCIDZero]
					[#assign FilteringCIDList+=["RIF_CFEN"]]
				[#else]
					[#assign FilteringCIDList+= [(RifAwareIPFeatureList.value[MasterCidUIIndex] == "-")?then("RIF_CFDIS","RIF_CFEN")] ]
				[/#if]

				[#if RifAwareIPName=="RCC"]
					[#assign LockList+= [(RifAwareIPFeatureList.value[LockUIIndex] == "true")?then("RIF_LOCK","RIF_UNLOCK")] ]
					[#assign  SystemModeList+= [(RifAwareIPFeatureList.value[SystemModeUIIndex] == "true")?then("true","false")] ]
				[/#if]
			[/#list]
		[/#compress]
		[#if RifAwareIPName=="GPIO" ]
			[#assign PortsList=[]]
			[#list FeatureNamesList as PortName]
				[#if PortName?matches("P[ABCDEFGHIJKLMNOPQRSTUVWXYZ]\\d{0,99}")&& (!PortsList?seq_contains(PortName[1..<2]))]
				[#assign PortsList+=[PortName[1..<2]]]
				[/#if]
			[/#list]
			[#list PortsList as Port]
#n
&${RifAwareIPName?lower_case}${Port?lower_case}{
#n
${TABnode}st,protreg = <
				[#list FeatureNamesList as FeatureName]
					[#if FeatureName?matches("P"+Port+"\\d{0,99}")]
					[#assign ParamPrefix="_IOPORT_PIN"]
${TABprop}RIFPROT(RIF${ParamPrefix}${FeatureIDList[FeatureName?index]}, ${MasterCIDList[FeatureName?index]?keep_before_last("|")},  RIF_UNLOCK, ${SecureList[FeatureName?index]}, ${PrivilegeList[FeatureName?index]}, ${SCIDList[FeatureName?index]}, ${SemList[FeatureName?index]}, ${FilteringCIDList[FeatureName?index]}) /* ${FeatureName} */
					[/#if]
				[/#list]
${TABnode}>;
[#--here to add specefic property : RifAwareIPName==HSEM?... --]
};
			[/#list]
		[#else]
#n
&${RifAwareIPName?lower_case}{
#n
${TABnode}st,protreg = <
			[#list FeatureNamesList as FeatureName]
				[#assign ParamPrefix="_RESOURCE"]
				[#assign MasterCIDListSystemMode=""]
				[#if RifAwareIPName=="FMC"]
					[#assign ParamPrefix="_CTRL"]
				[/#if]
				[#if RifAwareIPName?starts_with("IPCC")]
					[#assign ParamPrefix="_"+FeatureName?substring(0,12)?upper_case?replace(" ","_")]
					[#assign RifAwareIPName="IPCC"]
				[/#if]
				[#if RifAwareIPName?starts_with("HPDMA")]
					[#assign ParamPrefix="_CHANNEL"]
					[#assign RifAwareIPName="HPDMA"]
				[/#if]
				[#if RifAwareIPName?starts_with("RCC") && SystemModeList[FeatureName?index]=="true"]
					[#if mx_tdcidContext?starts_with("A35")]
						[#assign MasterCIDListSystemMode=MasterCIDList[FeatureName?index]?split('|')[0]]
					[/#if]
					[#if mx_tdcidContext?starts_with("M33")]
						[#assign MasterCIDListSystemMode=MasterCIDList[FeatureName?index]?split('|')[1]]
					[/#if]
				[/#if]
${TABprop}RIFPROT(RIF_${RifAwareIPName?upper_case}${ParamPrefix}${(RifAwareIPName==("IPCC"))?then("("+FeatureName?substring(13)+")",FeatureIDList[FeatureName?index])}, ${(MasterCIDListSystemMode?has_content)?then(MasterCIDListSystemMode,MasterCIDList[FeatureName?index]?keep_before_last("|"))}, ${(RifAwareIPName == "RCC")?then(LockList[FeatureName?index], "RIF_UNLOCK")}, ${SecureList[FeatureName?index]}, ${PrivilegeList[FeatureName?index]}, ${(MasterCIDListSystemMode?has_content)?then("RIF_UNUSED", SCIDList[FeatureName?index])}, ${(MasterCIDListSystemMode?has_content)?then("RIF_SEM_EN",SemList[FeatureName?index])}, ${(MasterCIDListSystemMode?has_content)?then("RIF_CFEN",FilteringCIDList[FeatureName?index])}) /* Feature = ${FeatureName} */
			[/#list]
${TABnode}>;
[#--here to add specefic property : RifAwareIPName==TAMP,HSEM,EXTI?... --]
[#if RifAwareIPsWithSpeceficProp?seq_contains(RifAwareIPName)]
	[#list mx_RIF_Params.entrySet() as RIF_Params]
		[#if (RIF_Params.key)?? && RIF_Params.key?matches("^"+RifAwareExtraTablePrefix+RifAwareIPName)]
			[#compress]
				[#assign RifAwareExtraTable = RIF_Params.value]
				[#assign NbBackupRegistres=[]]
				[#list RifAwareExtraTable.entrySet() as RifAwareExtraTableList]
					[#assign NbBackupRegistres+=RifAwareExtraTableList.value]
				[/#list]
			[/#compress]
		[/#if]
	[/#list]
	[#assign RifAware_values =""]
		[#list NbBackupRegistres as nbreBackupRegistres]
			[#if RifAwareIPName=="TAMP"]
				[#assign RifAware_values += nbreBackupRegistres + " "]
			[#else]
				[#assign RifAware_values += "<"+nbreBackupRegistres + " RIF_CID"+nbreBackupRegistres + ">, "]
			[/#if]
		[/#list]
${TABnode}${(RifAwareIPName=="TAMP")?then("st,backup-zones = <"+RifAware_values?substring(0,RifAware_values?length-1)+">;","st,proccid = "+RifAware_values?substring(0,RifAware_values?length-2-" <3 RIF_CID3>,"?length)+";")}[#-- <3 RIF_CID3> not supported for Beta3 --]
[/#if]
[#if mx_isAhbErrata && supportAhbErrataList?seq_contains(RifAwareIPName)]
${TABnode}st,errata-ahbrisab;
[/#if]
};
		[/#if]
	[/#if]
[/#list]
#n
[#if !mx_socPtCPN?starts_with("stm32mp23")]
&ipcc2 {
	st,protreg = <
		RIFPROT(RIF_IPCC_CPU1_CHANNEL(1), RIF_UNUSED, RIF_UNLOCK, RIF_NSEC, RIF_NPRIV, RIF_CID3, RIF_SEM_DIS, RIF_CFEN) /* Feature = CPU1 channel 1 */
		RIFPROT(RIF_IPCC_CPU2_CHANNEL(1), RIF_UNUSED, RIF_UNLOCK, RIF_NSEC, RIF_NPRIV, RIF_CID1, RIF_SEM_DIS, RIF_CFEN) /* Feature = CPU2 channel 1 */
		RIFPROT(RIF_IPCC_CPU1_CHANNEL(2), RIF_UNUSED, RIF_UNLOCK, RIF_NSEC, RIF_NPRIV, RIF_CID3, RIF_SEM_DIS, RIF_CFEN) /* Feature = CPU1 channel 2 */
		RIFPROT(RIF_IPCC_CPU2_CHANNEL(2), RIF_UNUSED, RIF_UNLOCK, RIF_NSEC, RIF_NPRIV, RIF_CID1, RIF_SEM_DIS, RIF_CFEN) /* Feature = CPU2 channel 2 */
		RIFPROT(RIF_IPCC_CPU1_CHANNEL(3), RIF_UNUSED, RIF_UNLOCK, RIF_NSEC, RIF_NPRIV, RIF_CID3, RIF_SEM_DIS, RIF_CFEN) /* Feature = CPU1 channel 3 */
		RIFPROT(RIF_IPCC_CPU2_CHANNEL(3), RIF_UNUSED, RIF_UNLOCK, RIF_NSEC, RIF_NPRIV, RIF_CID1, RIF_SEM_DIS, RIF_CFEN) /* Feature = CPU2 channel 3 */
		RIFPROT(RIF_IPCC_CPU1_CHANNEL(4), RIF_UNUSED, RIF_UNLOCK, RIF_NSEC, RIF_NPRIV, RIF_CID3, RIF_SEM_DIS, RIF_CFEN) /* Feature = CPU1 channel 4 */
		RIFPROT(RIF_IPCC_CPU2_CHANNEL(4), RIF_UNUSED, RIF_UNLOCK, RIF_NSEC, RIF_NPRIV, RIF_CID1, RIF_SEM_DIS, RIF_CFEN) /* Feature = CPU2 channel 4 */
	>;
};
[/#if]


