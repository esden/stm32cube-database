/dts-v1/;
#include <dt-bindings/pinctrl/stm32-pinfunc.h>
#include <dt-bindings/clock/stm32mp1-clksrc.h>
#include "stm32mp15-mx.dtsi"
#include "stm32mp157.dtsi"
#include "stm32mp15xa.dtsi"
#include "stm32mp15xxac-pinctrl.dtsi"
#include "stm32mp15-ddr.dtsi"

/* USER CODE BEGIN includes */
/* USER CODE END includes */

/{
	model = "STMicroelectronics STM32MP157A-DK1 STM32CubeMX board - openstlinux-5.15-yocto-kirkstone-mp1-v22.11.23";
	compatible = "st,stm32mp157a-board_157a-dk1-mx", "st,stm32mp157a-dk1", "st,stm32mp157";

	/* USER CODE BEGIN root */

	vin:vin{
		compatible = "regulator-fixed";
		regulator-name = "vin";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};

	aliases{
		serial0 = &uart4;
		serial1 = &usart3;
		serial2 = &uart7;
	};

	chosen{
		stdout-path = "serial0:115200n8";
	};
	/* USER CODE END root */

	memory@c0000000{
		device_type = "memory";
		reg = <0xc0000000 0x20000000>;
	};

	clocks{

		clk_hsi:clk-hsi{
			clock-frequency = <64000000>;
		};

		clk_lse:clk-lse{
			clock-frequency = <32768>;
			st,drive = < LSEDRV_MEDIUM_HIGH >;
		};

		clk_hse:clk-hse{
			clock-frequency = <24000000>;
			st,digbypass;
		};
	};
};

&pinctrl{

	sdmmc1_pins_mx:sdmmc1_mx-0{

		pins1{
			pinmux = <STM32_PINMUX('C', 8, AF12)>,
					<STM32_PINMUX('C', 9, AF12)>,
					<STM32_PINMUX('C', 10, AF12)>,
					<STM32_PINMUX('C', 11, AF12)>,
					<STM32_PINMUX('D', 2, AF12)>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};

		pins2{
			pinmux = <STM32_PINMUX('C', 12, AF12)>;
			bias-disable;
			drive-push-pull;
			slew-rate = <2>;
		};
	};

	uart4_pins_mx:uart4_mx-0{

		pins1{
			pinmux = <STM32_PINMUX('B', 2, AF8)>;
			bias-disable;
		};

		pins2{
			pinmux = <STM32_PINMUX('G', 11, AF6)>;
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};
};

&pinctrl_z{

	i2c4_pins_z_mx:i2c4_mx-0{

		pins{
			pinmux = <STM32_PINMUX('Z', 4, AF6)>,
					<STM32_PINMUX('Z', 5, AF6)>;
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};
};

&hash1{
	status = "okay";
};

&i2c4{
	pinctrl-names = "default";
	pinctrl-0 = <&i2c4_pins_z_mx>;
	status = "okay";

	/* USER CODE BEGIN i2c4 */
	i2c-scl-rising-time-ns = <185>;
	i2c-scl-falling-time-ns = <20>;
	clock-frequency = <400000>;

	pmic:stpmic@33{
		compatible = "st,stpmic1";
		reg = <0x33>;
		interrupts-extended = <&exti_pwr 55 IRQ_TYPE_EDGE_FALLING>;
		interrupt-controller;
		#interrupt-cells = <2>;
		status = "okay";

		regulators{
			compatible = "st,stpmic1-regulators";
			buck1-supply = <&vin>;
			buck2-supply = <&vin>;
			buck3-supply = <&vin>;
			buck4-supply = <&vin>;
			ldo1-supply = <&v3v3>;
			ldo2-supply = <&vin>;
			ldo3-supply = <&vdd_ddr>;
			ldo4-supply = <&vin>;
			ldo5-supply = <&vin>;
			ldo6-supply = <&v3v3>;
			vref_ddr-supply = <&vin>;
			boost-supply = <&vin>;
			pwr_sw1-supply = <&bst_out>;
			pwr_sw2-supply = <&bst_out>;

			vddcore:buck1{
				regulator-name = "vddcore";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1350000>;
				regulator-always-on;
				regulator-initial-mode = <0>;
				regulator-over-current-protection;
			};

			vdd_ddr:buck2{
				regulator-name = "vdd_ddr";
				regulator-min-microvolt = <1350000>;
				regulator-max-microvolt = <1350000>;
				regulator-always-on;
				regulator-initial-mode = <0>;
				regulator-over-current-protection;
			};

			vdd:buck3{
				regulator-name = "vdd";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				st,mask-reset;
				regulator-initial-mode = <0>;
				regulator-over-current-protection;
			};

			v3v3:buck4{
				regulator-name = "v3v3";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				regulator-over-current-protection;
				regulator-initial-mode = <0>;
			};

			v1v8_audio:ldo1{
				regulator-name = "v1v8_audio";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
			};

			v3v3_hdmi:ldo2{
				regulator-name = "v3v3_hdmi";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vtt_ddr:ldo3{
				regulator-name = "vtt_ddr";
				regulator-always-on;
				regulator-over-current-protection;
				st,regulator-sink-source;
			};

			vdd_usb:ldo4{
				regulator-name = "vdd_usb";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
			};

			vdda:ldo5{
				regulator-name = "vdda";
				regulator-min-microvolt = <2900000>;
				regulator-max-microvolt = <2900000>;
				regulator-boot-on;
			};

			v1v2_hdmi:ldo6{
				regulator-name = "v1v2_hdmi";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-always-on;
			};

			vref_ddr:vref_ddr{
				regulator-name = "vref_ddr";
				regulator-always-on;
			};

			bst_out:boost{
				regulator-name = "bst_out";
			};

			vbus_otg:pwr_sw1{
				regulator-name = "vbus_otg";
			};

			vbus_sw:pwr_sw2{
				regulator-name = "vbus_sw";
				regulator-active-discharge = <1>;
			};
		};
	};
	/* USER CODE END i2c4 */
};

&iwdg1{
	status = "okay";

	/* USER CODE BEGIN iwdg1 */
	timeout-sec = <32>;
	/* USER CODE END iwdg1 */
};

&rcc{
	status = "okay";
	st,clksrc = <
		CLK_CKPER_HSE
		CLK_SDMMC12_PLL4P
		CLK_STGEN_HSE
		CLK_I2C46_HSI
		CLK_USBO_USBPHY
		CLK_UART24_HSI
		CLK_MPU_PLL1P
		CLK_AXI_PLL2P
		CLK_MCU_PLL3P
	>;
	st,clkdiv = <
		DIV(DIV_MPU, 1)
		DIV(DIV_AXI, 0)
		DIV(DIV_MCU, 0)
		DIV(DIV_APB1, 1)
		DIV(DIV_APB2, 1)
		DIV(DIV_APB3, 1)
		DIV(DIV_APB4, 1)
		DIV(DIV_APB5, 2)
		DIV(DIV_RTC, 23)
		DIV(DIV_MCO1, 0)
		DIV(DIV_MCO2, 0)
	>;

	/* USER CODE BEGIN rcc */
	compatible = "st,stm32mp1-rcc-secure", "st,stm32mp1-rcc", "syscon";
	/* USER CODE END rcc */

	st,pll_vco{

		/* USER CODE BEGIN rcc_st-pll_vco */

		pll1_vco_1300Mhz:pll1-vco-1300Mhz{
			src = < CLK_PLL12_HSE >;
			divmn = < 2 80 >;
			frac = < 0x800 >;
		};

		pll3_vco_417_8Mhz:pll3-vco-417_8Mhz{
			src = < CLK_PLL3_HSE >;
			divmn = < 1 33 >;
			frac = < 0x1a04 >;
		};
		/* USER CODE END rcc_st-pll_vco */

		pll2_vco_1066Mhz:pll2-vco-1066Mhz{
			src = < CLK_PLL12_HSE >;
			divmn = < 2 65 >;
			frac = < 0x1400 >;
		};

		pll3_vco_417Mhz:pll3-vco-417Mhz{
			src = < CLK_PLL3_HSE >;
			divmn = < 1 33 >;
			frac = < 0x1a04 >;
		};

		pll4_vco_594Mhz:pll4-vco-594Mhz{
			src = < CLK_PLL4_HSE >;
			divmn = < 3 98 >;
		};
	};

	pll2:st,pll@1{
		compatible = "st,stm32mp1-pll";
		reg = <1>;
		st,pll = < &pll2_cfg1 >;

		pll2_cfg1:pll2_cfg1{
			st,pll_vco = < &pll2_vco_1066Mhz >;
			st,pll_div_pqr = < 1 0 0 >;
		};
	};

	pll3:st,pll@2{
		compatible = "st,stm32mp1-pll";
		reg = <2>;
		st,pll = < &pll3_cfg1 >;

		pll3_cfg1:pll3_cfg1{
			st,pll_vco = < &pll3_vco_417Mhz >;
			st,pll_div_pqr = < 1 16 36 >;
		};
	};

	pll4:st,pll@3{
		compatible = "st,stm32mp1-pll";
		reg = <3>;
		st,pll = < &pll4_cfg1 >;

		pll4_cfg1:pll4_cfg1{
			st,pll_vco = < &pll4_vco_594Mhz >;
			st,pll_div_pqr = < 5 7 7 >;
		};
	};
};

&sdmmc1{
	pinctrl-names = "default";
	pinctrl-0 = <&sdmmc1_pins_mx>;
	status = "okay";

	/* USER CODE BEGIN sdmmc1 */
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	/* USER CODE END sdmmc1 */
};

&uart4{
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins_mx>;
	status = "okay";
};

&usbotg_hs{
	status = "okay";

	/* USER CODE BEGIN usbotg_hs */
	phys = <&usbphyc_port1 0>;
	phy-names = "usb2-phy";
	usb-role-switch;
	/* USER CODE END usbotg_hs */
};

&usbphyc{
	status = "okay";
};

&usbphyc_port0{
	status = "okay";

	/* USER CODE BEGIN usbphyc_port0 */
	phy-supply = <&vdd_usb>;
	/* USER CODE END usbphyc_port0 */
};

&usbphyc_port1{
	status = "okay";

	/* USER CODE BEGIN usbphyc_port1 */
	phy-supply = <&vdd_usb>;
	/* USER CODE END usbphyc_port1 */
};

/* USER CODE BEGIN addons */

&bsec{

	board_id:board_id@ec{
		reg = <0xec 0x4>;
		st,non-secure-otp;
	};
};

&cpu0{
	cpu-supply = <&vddcore>;
};

&cpu1{
	cpu-supply = <&vddcore>;
};

&pwr_regulators{
	vdd-supply = <&vdd>;
	vdd_3v3_usbfs-supply = <&vdd_usb>;
};

&rng1{
	status = "okay";
};

&rtc{
	status = "okay";
};
/* USER CODE END addons */
