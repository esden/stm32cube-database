[#ftl]
/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file    DTM_cmd_db.h
  * @author  AMS - RF Application team
  * @date    12 May 2022
  * @brief   Autogenerated files, do not edit!!
  ******************************************************************************
[@common.optinclude name=mxTmpFolder+"/license.tmp"/][#--include License text --]
  ******************************************************************************
  */
/* USER CODE END Header */

#ifndef _DTM_CMD_DB_H_
#define _DTM_CMD_DB_H_
#include <stdint.h>
#include "ble_stack.h"
#include "miscutil.h"

typedef uint16_t (*hci_command_process_and_response_type)(uint8_t *buffer_in, uint16_t buffer_in_length, uint8_t *buffer_out, uint16_t buffer_out_max_length) ;
typedef struct hci_command_table_type_s {
  uint16_t opcode;
  hci_command_process_and_response_type execute;
} hci_command_table_type;

extern const hci_command_table_type hci_command_table[];

tBleStatus aci_hal_get_firmware_details(uint8_t *DTM_version_major,uint8_t *DTM_version_minor,uint8_t *DTM_version_patch,uint8_t *DTM_variant,uint16_t *DTM_Build_Number,uint8_t *BTLE_Stack_version_major,uint8_t *BTLE_Stack_version_minor,uint8_t *BTLE_Stack_version_patch,uint8_t *BTLE_Stack_development,uint16_t *BTLE_Stack_variant,uint16_t *BTLE_Stack_Build_Number);
tBleStatus aci_hal_get_firmware_details_v2(uint8_t *DTM_version_major,uint8_t *DTM_version_minor,uint8_t *DTM_version_patch,uint8_t *DTM_variant,uint16_t *DTM_Build_Number,uint8_t *BTLE_Stack_version_major,uint8_t *BTLE_Stack_version_minor,uint8_t *BTLE_Stack_version_patch,uint8_t *BTLE_Stack_development,uint32_t *BTLE_Stack_variant,uint16_t *BTLE_Stack_Build_Number);
tBleStatus aci_hal_transmitter_test_packets(uint8_t TX_Frequency,uint8_t Length_Of_Test_Data, uint8_t Packet_Payload, uint16_t Number_Of_Packets, uint8_t PHY);
tBleStatus aci_hal_transmitter_test_packets_v2(uint8_t TX_Channel,uint8_t Test_Data_Length,uint8_t Packet_Payload,uint16_t Number_Of_Packets,uint8_t PHY,uint8_t CTE_Length,uint8_t CTE_Type,uint8_t Switching_Pattern_Length, uint8_t Antenna_IDs[]);
tBleStatus aci_hal_write_radio_reg(uint32_t Start_Address, uint8_t Num_Bytes, uint8_t Data[]);
tBleStatus aci_hal_read_radio_reg(uint32_t Start_Address, uint8_t Num_Bytes, uint8_t *Data_Length, uint8_t Data[]);
tBleStatus hci_le_read_maximum_advertising_data_length(uint16_t *Maximum_Advertising_Data_Length);
tBleStatus aci_test_tx_notification_start(uint16_t Connection_Handle, uint16_t Service_Handle, uint16_t Char_Handle, uint16_t Value_Length);
tBleStatus aci_test_tx_write_command_start(uint16_t Connection_Handle, uint16_t Attr_Handle, uint16_t Value_Length);
tBleStatus aci_test_rx_start(uint16_t Connection_Handle, uint16_t Attribute_Handle, uint8_t Notifications_WriteCmds);
tBleStatus aci_test_stop(uint8_t TX_RX);
tBleStatus aci_test_report(uint32_t *TX_Notifications, uint32_t *RX_Notifications, uint16_t *RX_Data_Length, uint32_t *RX_Sequence_Errors);

void aci_blue_initialized_event(uint8_t Reason_Code);
void aci_blue_crash_info_event(uint8_t Crash_Type,
                               uint32_t SP,
                               uint32_t R0,
                               uint32_t R1,
                               uint32_t R2,
                               uint32_t R3,
                               uint32_t R12,
                               uint32_t LR,
                               uint32_t PC,
                               uint32_t xPSR,
                               uint8_t Debug_Data_Length,
                               uint8_t Debug_Data[]);
void aci_hal_le_test_end_event(uint16_t Number_Of_Packets);
void aci_l2cap_sdu_data_tx_nwk_event(uint16_t Connection_Handle,
                                     uint16_t CID,
                                     uint16_t SDU_Length,
                                     uint16_t TX_Credit_Balance);
void aci_l2cap_sdu_data_rx_nwk_event(uint16_t Connection_Handle,
                                     uint16_t CID,
                                     uint16_t RX_Credit_Balance,
                                     uint16_t SDU_Length,
                                     uint8_t SDU_Data[]);
void aci_gatt_srv_authorize_nwk_event(uint16_t Conn_Handle,
                                      uint16_t CID,
                                      uint16_t Attr_Handle,
                                      uint8_t Operation_Type,
                                      uint16_t Attr_Val_Offset,
                                      uint8_t Data_Length,
                                      uint8_t Data[]);
void aci_gatt_srv_attribute_modified_event(uint16_t Connection_Handle,
                                           uint16_t CID,
                                           uint16_t Attr_Handle,
                                           uint16_t Attr_Data_Length,
                                           uint8_t Attr_Data[]);
#endif /* _DTM_CMD_DB_H_ */
