[#ftl]
/**
  ******************************************************************************
  * @file    radio_board_if.h
  * @author  MCD Application Team
  * @brief   Header for Radio interface configuration
  ******************************************************************************
[@common.optinclude name=mxTmpFolder+ "/license.tmp"/][#--include License text --]
  ******************************************************************************
  */

[#assign useBsp=false]
[#assign myBoardName=""]
[#assign RF_WAKEUP_TIME=""]
[#assign IS_TCXO_SUPPORTED="0"]
[#assign IS_DCDC_SUPPORTED="0"]
[#--
********************************
BSP IP Datas:
[#if BspIpDatas??]
  [#list BspIpDatas as SWIP]
    [#if SWIP.defines??]
Defines:
      [#list SWIP.defines as defines]
        ${defines.name}: ${defines.value}
      [/#list]
    [/#if]
    [#if SWIP.variables??]
Variables:
      [#list SWIP.variables as variables]
        ${variables.name}: ${variables.value}
      [/#list]
    [/#if]
  [/#list]
[/#if]
********************************
SWIP Datas:
[#if SWIPdatas??]
  [#list SWIPdatas as SWIP]
    [#if SWIP.defines??]
Defines:
      [#list SWIP.defines as definition]
        ${definition.name}: ${definition.value}
      [/#list]
    [/#if]
  [/#list]
[/#if]
********************************
--]
[#if SWIPdatas??]
  [#list SWIPdatas as SWIP]
    [#if SWIP.defines??]
      [#list SWIP.defines as definition]
        [#assign value = definition.value]
        [#if definition.name == "Activate_RADIO_BOARD_INTERFACE"]
          [#if value == "true"]
            [#assign useBsp=true]
              [#if Board_RPN??]
                [#assign myBoardName=Board_RPN?upper_case?replace("-","_")]
              [/#if]
          [/#if]
        [/#if]
        [#if definition.name == "RF_WAKEUP_TIME"]
          [#assign RF_WAKEUP_TIME = definition.value]
        [/#if]
        [#if definition.name == "IS_TCXO_SUPPORTED"]
                [#if definition.value == "true"]
          [#assign IS_TCXO_SUPPORTED = "1"]
        [/#if]
        [/#if]
        [#if definition.name == "IS_DCDC_SUPPORTED"]
                [#if definition.value == "true"]
          [#assign IS_DCDC_SUPPORTED = "1"]
        [/#if]
        [/#if]
        [/#list]
    [/#if]
  [/#list]
[#else]
  [#assign useBsp=true]
    [#if Board_RPN??]
      [#assign myBoardName=Board_RPN?upper_case?replace("-","_")]
    [/#if]
[/#if]
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef RADIO_BOARD_IF_H
#define RADIO_BOARD_IF_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "platform.h"
/* USER CODE BEGIN include */

/* USER CODE END include */

/* Exported defines ----------------------------------------------------------*/
[#if useBsp]
#ifdef MX_BOARD_PSEUDODRIVER
#define MX_${myBoardName}
#endif /* MX_BOARD_PSEUDODRIVER */
[/#if]
[#-- LOW LEVEL CONIFG FOR BSP DRIVER --]
#if defined(USE_BSP_DRIVER)
/* code generated by MX does not support BSP */
/* In order to use BSP driver, add the correspondent files in the IDE workspace */
/* and define USE_BSP_DRIVER in the preprocessor definitions  or in platform.h */
#define RBI_CONF_RFO_LP_HP  RADIO_CONF_RFO_LP_HP
#define RBI_CONF_RFO_LP     RADIO_CONF_RFO_LP
#define RBI_CONF_RFO_HP     RADIO_CONF_RFO_HP
[#if useBsp]
[#-- LOW LEVEL CONIFG FOR PLATFROM SETTINGS --]
#elif defined(MX_${myBoardName})
#define RBI_CONF_RFO_LP_HP  0
#define RBI_CONF_RFO_LP     1
#define RBI_CONF_RFO_HP     2
[/#if]
[#-- LOW LEVEL CONIFG FOR USER BOARD DEFINITION --]
#else
/* USER CODE BEGIN Board Definition */
#error user to provide its board definitions
/* USER CODE END Board Definition */
#endif  /* USE_BSP_DRIVER [#if useBsp] || MX_${myBoardName} [/#if] */

[#-- LOW LEVEL CONIFG FOR BSP DRIVER --]
#if defined(USE_BSP_DRIVER)
/* code generated by MX does not support BSP */
/* In order to use BSP driver, add the correspondent files in the IDE workspace */
/* and define USE_BSP_DRIVER in the preprocessor definitions  or in platform.h */

[#if useBsp]
[#-- LOW LEVEL CONIFG FOR FOR PLATFROM SETTINGS --]
#elif defined(MX_${myBoardName})

/* Indicates the type of switch between the ones proposed by CONFIG Constants
 */
#define RBI_CONF_RFO                        RBI_CONF_RFO_LP_HP

/* Radio maximum wakeup time (in ms) */
#define RF_WAKEUP_TIME                     ${RF_WAKEUP_TIME}U

/* Indicates whether or not TCXO is supported by the board
 * 0: TCXO not supported
 * 1: TCXO supported
 */
#define IS_TCXO_SUPPORTED                   ${IS_TCXO_SUPPORTED}U

/* Indicates whether or not DCDC is supported by the board
 * 0: DCDC not supported
 * 1: DCDC supported
 */
#define IS_DCDC_SUPPORTED                   ${IS_DCDC_SUPPORTED}U

[/#if]
[#-- LOW LEVEL CONIFG FOR USER BOARD DEFINITION --]
#else
/* USER CODE BEGIN Exported Parameters */
#error user to provide its board definitions
/* USER CODE END Exported Parameters */
#endif  /* USE_BSP_DRIVER [#if useBsp] || MX_${myBoardName} [/#if] */

[#-- PIN MAPPING FOR BSP DRIVER --]
#if defined(USE_BSP_DRIVER)
/* code generated by MX does not support BSP */
/* In order to use BSP driver, add the correspondent files in the IDE workspace */
/* and define USE_BSP_DRIVER in the preprocessor definitions  or in platform.h */

[#-- PIN MAPPING FOR PLATFROM SETTINGS --]
#elif defined(MX_${myBoardName})
[#if BspIpDatas??]
[#if useBsp]
[#assign REF_1_PORT = ""]
[#assign REF_1_PIN = ""]
[#assign REF_2_PORT = ""]
[#assign REF_2_PIN = ""]
[#assign REF_3_PORT = ""]
[#assign REF_3_PIN = ""]
  [#list BspIpDatas as SWIP]
    [#if SWIP.variables??]
      [#list SWIP.variables as variables]
        [#if variables.name?contains("IpInstance")]
          [#assign IpInstance = variables.value]
        [/#if]
        [#if variables.name?contains("IpName")]
          [#assign IpName = variables.value]
        [/#if]
        [#if variables.value?contains("RF SW CTRL 1")]
          [#assign REF_1_PORT = IpName]
          [#assign REF_1_PIN = IpInstance]
#define RF_SW_CTRL1_PIN                          ${REF_1_PIN}
#define RF_SW_CTRL1_GPIO_PORT                    ${REF_1_PORT}
#define RF_SW_CTRL1_GPIO_CLK_ENABLE()            __HAL_RCC_${REF_1_PORT}_CLK_ENABLE()
#define RF_SW_RX_GPIO_CLK_DISABLE()              __HAL_RCC_${REF_1_PORT}_CLK_DISABLE()

        [/#if]
        [#if variables.value?contains("RF SW CTRL 2")]
          [#assign REF_2_PORT = IpName]
          [#assign REF_2_PIN = IpInstance]
#define RF_SW_CTRL2_PIN                          ${REF_2_PIN}
#define RF_SW_CTRL2_GPIO_PORT                    ${REF_2_PORT}
#define RF_SW_CTRL2_GPIO_CLK_ENABLE()            __HAL_RCC_${REF_2_PORT}_CLK_ENABLE()
#define RF_SW_CTRL2_GPIO_CLK_DISABLE()           __HAL_RCC_${REF_2_PORT}_CLK_DISABLE()

        [/#if]
        [#if variables.value?contains("RF SW CTRL 3")]
          [#assign REF_3_PORT = IpName]
          [#assign REF_3_PIN = IpInstance]
#define RF_SW_CTRL3_PIN                          ${REF_3_PIN}
#define RF_SW_CTRL3_GPIO_PORT                    ${REF_3_PORT}
#define RF_SW_CTRL3_GPIO_CLK_ENABLE()            __HAL_RCC_${REF_3_PORT}_CLK_ENABLE()
#define RF_SW_CTRL3_GPIO_CLK_DISABLE()           __HAL_RCC_${REF_3_PORT}_CLK_DISABLE()

        [/#if]
      [/#list]
    [/#if]
  [/#list]
[/#if]
/* To be checked vs TCXO management in RCC config */
#define RF_TCXO_VCC_PIN                          GPIO_PIN_0
#define RF_TCXO_VCC_GPIO_PORT                    GPIOB
#define RF_TCXO_VCC_CLK_ENABLE()                 __HAL_RCC_GPIOB_CLK_ENABLE()
#define RF_TCXO_VCC_CLK_DISABLE()                __HAL_RCC_GPIOB_CLK_DISABLE()
[/#if]
[#-- PIN MAPPING FOR USER BOARD --]
#else
/* USER CODE BEGIN Exported PinMapping */
#error user to provide its board definitions
/* USER CODE END Exported PinMapping */
#endif  /* USE_BSP_DRIVER [#if useBsp]|| MX_${myBoardName} [/#if] */

/* USER CODE BEGIN Exported_Defines */

/* USER CODE END Exported_Defines */

/* Exported types ------------------------------------------------------------*/

[#-- EXPORTED TYPES FOR BSP DRIVER --]
#if defined(USE_BSP_DRIVER)
/* code generated by MX does not support BSP */
/* In order to use BSP driver, add the correspondent files in the IDE workspace */
/* and define USE_BSP_DRIVER in the preprocessor definitions  or in platform.h */
typedef enum
{
  RBI_SWITCH_OFF    = RADIO_SWITCH_OFF,
  RBI_SWITCH_RX     = RADIO_SWITCH_RX,
  RBI_SWITCH_RFO_LP = RADIO_SWITCH_RFO_LP,
  RBI_SWITCH_RFO_HP = RADIO_SWITCH_RFO_HP,
} RBI_Switch_TypeDef;
[#-- EXPORTED TYPES FOR PLATFORM SETTINGS --]
[#if useBsp]
#elif defined(MX_${myBoardName})
typedef enum
{
  RBI_SWITCH_OFF    = 0,
  RBI_SWITCH_RX     = 1,
  RBI_SWITCH_RFO_LP = 2,
  RBI_SWITCH_RFO_HP = 3,
} RBI_Switch_TypeDef;
[/#if]
[#-- EXPORTED TYPES FOR USER BOARD --]
#else
/* USER CODE BEGIN Exported Types */
#error user to provide its board definitions
/* USER CODE END Exported Types */
#endif  /* USE_BSP_DRIVER [#if useBsp] || MX_${myBoardName} [/#if]*/

/* USER CODE BEGIN ET */

/* USER CODE END ET */

/* Exported constants --------------------------------------------------------*/
/* USER CODE BEGIN EC */

/* USER CODE END EC */

/* External variables --------------------------------------------------------*/
/* USER CODE BEGIN EV */

/* USER CODE END EV */

/* Exported macro ------------------------------------------------------------*/
/* USER CODE BEGIN EM */

/* USER CODE END EM */

/* Exported functions ------------------------------------------------------- */
/**
  * @brief  Init Radio Switch
  * @return BSP status
  */
int32_t RBI_Init(void);

/**
  * @brief  DeInit Radio Switch
  * @return BSP status
  */
int32_t RBI_DeInit(void);

/**
  * @brief  Configure Radio Switch.
  * @param  Config: Specifies the Radio RF switch path to be set.
  *         This parameter can be one of following parameters:
  *           @arg RADIO_SWITCH_OFF
  *           @arg RADIO_SWITCH_RX
  *           @arg RADIO_SWITCH_RFO_LP
  *           @arg RADIO_SWITCH_RFO_HP
  * @return BSP status
  */
int32_t RBI_ConfigRFSwitch(RBI_Switch_TypeDef Config);

/**
  * @brief  Return Board Configuration
  * @retval RBI_CONF_RFO_LP_HP
  * @retval RBI_CONF_RFO_LP
  * @retval RBI_CONF_RFO_HP
  */
int32_t RBI_GetTxConfig(void);

/**
  * @brief  Get Radio Wake Time
  * @return the wake upt time in ms
  */
int32_t RBI_GetWakeUpTime(void);

/**
  * @brief  Get If TCXO is to be present on board
  * @note   never remove called by MW,
  * @retval return 1 if present, 0 if not present
  */
int32_t RBI_IsTCXO(void);

/**
  * @brief  Get If DCDC is to be present on board
  * @note   never remove called by MW,
  * @retval return 1 if present, 0 if not present
  */
int32_t RBI_IsDCDC(void);

/* USER CODE BEGIN EFP */

/* USER CODE END EFP */

#ifdef __cplusplus
}
#endif

#endif /* RADIO_BOARD_IF_H */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
