<?xml version="1.0" encoding="utf-8" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="RCC" Version="STM32Cube_FW_H7RS_V0.1.0" IncludeFile="stm32h7rsxx_ll_rcc.h;stm32h7rsxx_ll_crs.h;stm32h7rsxx_ll_bus.h;stm32h7rsxx_ll_system.h;stm32h7rsxx_ll_exti.h;stm32h7rsxx_ll_cortex.h;stm32h7rsxx_ll_utils.h;stm32h7rsxx_ll_pwr.h;stm32h7rsxx_ll_dma.h" 
    xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">

    <RefConfig Name="RCC_OSCConfig">
      
        <!--flash latency configuration-->

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_FLASH_SetLatency">
                <MethodArg Name="Latency" ParameterName="FLatency"/>           
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_0">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_0)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_1">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_1)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_2">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_2)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_3">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_3)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_4">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_4)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_5">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_5)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_6">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_6)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>

        <!--voltage scaling configuration-->
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_PWR_SetRegulVoltageScaling">
                <MethodArg Name="VoltageScaling" ParameterName="PWR_Regulator_Voltage_Scale"/>           
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile (LL_PWR_IsActiveFlag_VOSRDY() == 0)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
		
        <!--Clock source activation-->
        <IFCondition Expression ="HSEUsed=1 &amp; HSEByPass ">
            <CallLibMethod Name="LL_RCC_HSE_EnableBypass" />
        </IFCondition>     		
        <IFCondition Expression ="HSEUsed=1">
            <CallLibMethod Name="LL_RCC_HSE_Enable"/>  
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSE is ready */#n#twhile(LL_RCC_HSE_IsReady() != 1)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>  
		
        <IFCondition Expression ="HSIUsed=1">
            <CallLibMethod Name="LL_RCC_HSI_Enable"/>    
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSI is ready */#n#twhile(LL_RCC_HSI_IsReady() != 1)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="HSIUsed=1">
            <CallLibMethod Name="LL_RCC_HSI_SetCalibTrimming">
                <MethodArg Name="Value" ParameterName="HSICalibrationValue"/>
            </CallLibMethod>      
            <CallLibMethod Name="LL_RCC_HSI_SetDivider">
                <MethodArg Name="hsidiv" ParameterName="HSIDivState"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="CSIUsed=1">
            <CallLibMethod Name="LL_RCC_CSI_Enable"/>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSI is ready */#n#twhile(LL_RCC_CSI_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="HSI48Used=1">
            <CallLibMethod Name="LL_RCC_HSI48_Enable"/>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSI48 is ready */#n#twhile(LL_RCC_HSI48_IsReady() != 1)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>
				
        <IFCondition Expression ="LSIUsed=1">
            <CallLibMethod Name="LL_RCC_LSI_Enable"/>

            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSI is ready */#n#twhile(LL_RCC_LSI_IsReady() != 1)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="RTCUsed_ForRCC|(LSEUsed=1)">
            <CallLibMethod Name="LL_PWR_EnableBkUpAccess">
            </CallLibMethod>
        </IFCondition> 	 
		
        <IFCondition Expression ="LSEUsed=1 &amp; (LSEByPass|LSEDIGByPass)">
            <CallLibMethod Name="LL_RCC_LSE_EnableBypass"/>
        </IFCondition>
        <IFCondition Expression ="LSEUsed=1 &amp; LSEOscillator">
            <CallLibMethod Name="LL_RCC_LSE_SetDriveCapability">
                <MethodArg Name="LSEDrive" ParameterName="LSE_Drive_Capability"/>
            </CallLibMethod>        
        </IFCondition> 
        <IFCondition Expression ="LSEUsed=1">
            <CallLibMethod Name="LL_RCC_LSE_Enable"/>
         
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSE is ready */#n#twhile(LL_RCC_LSE_IsReady() != 1)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition> 
		
        <!--PLL configuration-->
        <IFCondition Expression ="PLL1Used=1 | PLL2Used=1 | PLL3Used=1">
            <CallLibMethod Name="LL_RCC_PLL_SetSource">
                <MethodArg Name="Source" ParameterName="PLLSourceVirtual"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="PLL1Used=1">
            <CallLibMethod Name="LL_RCC_PLL1_SetVCOInputRange">
                <MethodArg Name="VCI_Range" ParameterName="PLL1_VCI_Range"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL1_SetVCOOutputRange">
                <MethodArg Name="Range" ParameterName="PLL1_VCO_SEL"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL1_SetM">
                <MethodArg Name="div" ParameterName="DIVM1"/>
            </CallLibMethod>           
            <CallLibMethod Name="LL_RCC_PLL1_SetN">
                <MethodArg Name="div" ParameterName="DIVN1"/>
            </CallLibMethod>           
            <CallLibMethod Name="LL_RCC_PLL1_SetP">
                <MethodArg Name="div" ParameterName="DIVP1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL1_SetQ">
                <MethodArg Name="div" ParameterName="DIVQ1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL1_SetR">
                <MethodArg Name="div" ParameterName="DIVR1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL1_SetS">
                <MethodArg Name="div" ParameterName="DIVS1"/>
            </CallLibMethod>           
        </IFCondition>
        <IFCondition Expression ="PLL1Used=1 &amp; !(PLLFRACN=0)">
            <CallLibMethod Name="LL_RCC_PLL1_SetFRACN">
                <MethodArg Name="div" ParameterName="PLLFRACN"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL1FRACN_Enable"/>
        </IFCondition>
        <IFCondition Expression ="PLL1Used=1">
            <CallLibMethod Name="LL_RCC_PLL1_Enable"/>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till PLL is ready */#n#twhile(LL_RCC_PLL1_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="PLL1PUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1P_Enable"/>
        </IFCondition>
        <IFCondition Expression ="PLL1QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1Q_Enable"/>	
        </IFCondition>

        <IFCondition Expression ="PLL2Used=1">            
            <CallLibMethod Name="LL_RCC_PLL2_SetVCOInputRange">
                <MethodArg Name="VCI_Range" ParameterName="PLL2_VCI_Range"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL2_SetVCOOutputRange">
                <MethodArg Name="Range" ParameterName="PLL2_VCO_SEL"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL2_SetM">
                <MethodArg Name="div" ParameterName="DIVM2"/>
            </CallLibMethod>           
            <CallLibMethod Name="LL_RCC_PLL2_SetN">
                <MethodArg Name="div" ParameterName="DIVN2"/>
            </CallLibMethod>           
            <CallLibMethod Name="LL_RCC_PLL2_SetP">
                <MethodArg Name="div" ParameterName="DIVP2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL2_SetQ">
                <MethodArg Name="div" ParameterName="DIVQ2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL2_SetR">
                <MethodArg Name="div" ParameterName="DIVR2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL2_SetS">
                <MethodArg Name="div" ParameterName="DIVS2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL2_SetT">
                <MethodArg Name="div" ParameterName="DIVT2"/>
            </CallLibMethod>
        </IFCondition>       
        <IFCondition Expression ="PLL2Used=1 &amp; !(PLL2FRACN=0)">
            <CallLibMethod Name="LL_RCC_PLL2_SetFRACN">
                <MethodArg Name="div" ParameterName="PLL2FRACN"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL2FRACN_Enable"/>
        </IFCondition>
        <IFCondition Expression ="PLL2Used=1">
            <CallLibMethod Name="LL_RCC_PLL2_Enable"/>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till PLL is ready */#n#twhile(LL_RCC_PLL2_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="PLL2PUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2P_Enable"/>	
        </IFCondition>
        <IFCondition Expression ="PLL2QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2Q_Enable"/>	
        </IFCondition>
        <IFCondition Expression ="PLL2RUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2R_Enable"/>	
        </IFCondition>
        <IFCondition Expression ="PLL2SUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2S_Enable"/>	
        </IFCondition>
        <IFCondition Expression ="PLL2TUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2T_Enable"/>	
        </IFCondition>
        
        <IFCondition Expression ="PLL3Used=1">            
            <CallLibMethod Name="LL_RCC_PLL3_SetVCOInputRange">
                <MethodArg Name="VCI_Range" ParameterName="PLL3_VCI_Range"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL3_SetVCOOutputRange">
                <MethodArg Name="Range" ParameterName="PLL3_VCO_SEL"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL3_SetM">
                <MethodArg Name="div" ParameterName="DIVM3"/>
            </CallLibMethod>           
            <CallLibMethod Name="LL_RCC_PLL3_SetN">
                <MethodArg Name="div" ParameterName="DIVN3"/>
            </CallLibMethod>           
            <CallLibMethod Name="LL_RCC_PLL3_SetP">
                <MethodArg Name="div" ParameterName="DIVP3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL3_SetQ">
                <MethodArg Name="div" ParameterName="DIVQ3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL3_SetR">
                <MethodArg Name="div" ParameterName="DIVR3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL3_SetS">
                <MethodArg Name="div" ParameterName="DIVS3"/>
            </CallLibMethod>
		</IFCondition>
        <IFCondition Expression ="PLL3Used=1 &amp; (!PLL3FRACN=0)">
            <CallLibMethod Name="LL_RCC_PLL3_SetFRACN">
                <MethodArg Name="div" ParameterName="PLL3FRACN"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_PLL3FRACN_Enable"/>
        </IFCondition>
        <IFCondition Expression ="PLL3Used=1">
            <CallLibMethod Name="LL_RCC_PLL3_Enable"/>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till PLL is ready */#n#twhile(LL_RCC_PLL3_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="PLL3PUsed=1">
            <CallLibMethod Name="LL_RCC_PLL3P_Enable"/>	
        </IFCondition>
        <IFCondition Expression ="PLL3QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL3Q_Enable"/>	
        </IFCondition>
        <IFCondition Expression ="PLL3RUsed=1">
            <CallLibMethod Name="LL_RCC_PLL3R_Enable"/>	
        </IFCondition>
        <IFCondition Expression ="PLL3SUsed=1">
            <CallLibMethod Name="LL_RCC_PLL3S_Enable"/>	
        </IFCondition>

        <IFCondition Expression ="SYSCLKSOURCE_HSE">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSE)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="SYSCLKSOURCE_HSI">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSI)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="SYSCLKSOURCE_CSI">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_CSI)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetSysPrescaler">
                <MethodArg Name="Prescaler" ParameterName="CPRE"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAHBPrescaler">
                <MethodArg Name="Prescaler" ParameterName="BMPRE"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB1Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB1CLKDividerARG"/>
            </CallLibMethod>
        </IFCondition>
     
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB2Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB2CLKDividerARG"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB4Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB4CLKDividerARG"/>
            </CallLibMethod>
        </IFCondition>
     
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB5Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB5CLKDividerARG"/>
            </CallLibMethod>
        </IFCondition>
	
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetSysClkSource">
                <MethodArg Name="Source" ParameterName="SYSCLKSource"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="SYSCLKSOURCE_PLLCLK">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL1)#n#t{#n#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>

        <!--system core frequency set,systick init,systick priority configuration-->
        <IFCondition Expression ="USE_FULL_LL_DRIVER">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_Init1msTick">
                <MethodArg Name="HCLKFrequency" ParameterName="CortexFreq_Value"/>
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_SetSystemCoreClock">
                <MethodArg Name="HCLKFrequency" ParameterName="CpuClockFreq_Value"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="!USE_FULL_LL_DRIVER">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Update the time base */"/>
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#tif (HAL_InitTick (TICK_INT_PRIORITY) != HAL_OK)#n#t{#n#t#tError_Handler();#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        
		<!--CRS PARAM -->		
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_CRS_SetSyncDivider">
                <MethodArg Name="Divider" ParameterName="Prescaler"/>
            </CallLibMethod>
        </IFCondition>		
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_CRS_SetSyncPolarity">
                <MethodArg Name="Divider" ParameterName="Polarity"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_CRS_SetSyncSignalSource">
                <MethodArg Name="Source" ParameterName="Source"/>
            </CallLibMethod>
        </IFCondition>		
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_CRS_SetReloadCounter">
                <MethodArg Name="Value" ParameterName="ReloadValueARGLL"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_CRS_SetFreqErrorLimit">
                <MethodArg Name="Value" ParameterName="ErrorLimitValue"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_CRS_SetHSI48SmoothTrimming">
                <MethodArg Name="Value" ParameterName="HSI48CalibrationValue"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_MCO1Config">
        <IFCondition Expression ="MCO1Config">
            <CallLibMethod Name="LL_RCC_ConfigMCO">
                <MethodArg Name="MCOxPrescaler" ParameterName="RCC_MCODiv1"/>
                <MethodArg Name="MCOxSource" ParameterName="RCC_MCO1Source"/>
            </CallLibMethod>
        </IFCondition> 
    </RefConfig>
    <RefConfig Name="RCC_MCO2Config">
        <IFCondition Expression ="MCO2Config">
            <CallLibMethod Name="LL_RCC_ConfigMCO">
                <MethodArg Name="MCOxPrescaler" ParameterName="RCC_MCODiv2"/>
                <MethodArg Name="MCOxSource" ParameterName="RCC_MCO2Source"/>
            </CallLibMethod>
        </IFCondition> 
    </RefConfig>

    <RefConfig Name="RCC_PeriphClockConfig">
        <!--peripheral clock source configuration -->
        <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCClockSelection=RCC_RTCCLKSOURCE_LSI">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSI)#n#t{"/>
            </CallLibMethod>
            <Else>
                <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCClockSelection=RCC_RTCCLKSOURCE_LSE">                    
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSE)#n#t{"/>
                    </CallLibMethod>                    
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tif (LL_PWR_IsEnabledBkUpAccess () != 1U)#n#t#t{"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#t/* Enable write access to Backup domain */"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#tLL_PWR_EnableBkUpAccess();"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#twhile (LL_PWR_IsEnabledBkUpAccess () == 0U)#n#t#t#t{#n#t#t#t}#n#t#t}"/>
                    </CallLibMethod>
                    <Else>
                        <IFCondition Expression ="RTCUsed_ForRCC">
                            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                                <HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_HSE)#n#t{"/>
                            </CallLibMethod>
                        </IFCondition>
                    </Else>
                </IFCondition>
            </Else>
        </IFCondition>

        <IFCondition Expression ="RTCUsed_ForRCC">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_ForceBackupDomainReset();"/>
            </CallLibMethod>
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_ReleaseBackupDomainReset();"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="RTCUsed_ForRCC &amp; (LSEByPass|LSEDIGByPass) &amp; RTCClockSelection=RCC_RTCCLKSOURCE_LSE">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_LSE_EnableBypass();"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="RTCUsed_ForRCC &amp; LSEOscillator &amp; RTCClockSelection=RCC_RTCCLKSOURCE_LSE">
            <CallLibMethod Name="LL_RCC_LSE_SetDriveCapability">
                <MethodArg Name="LSEDrive" ParameterName="LSE_Drive_Capability"/>
            </CallLibMethod>        
        </IFCondition> 

        <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCClockSelection=RCC_RTCCLKSOURCE_LSE">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_LSE_Enable();"/>
            </CallLibMethod>

            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSE is ready */#n#t#twhile(LL_RCC_LSE_IsReady() != 1)#n#t#t{#n#t#t}"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="(RTCUsed_ForRCC|LCDUsed_ForRCC)">
            <IFCondition Expression ="((RTCClockSelection=RCC_RTCCLKSOURCE_LSE)|(RTCClockSelection=RCC_RTCCLKSOURCE_LSI)) ">
                <CallLibMethod Name="LL_RCC_SetRTCClockSource">
                    <MethodArg Name="Source" ParameterName="RTCClockSelectionARG"/>
                </CallLibMethod>
                <Else>
                    <CallLibMethod Name="LL_RCC_SetRTCClockSource">
                        <MethodArg Name="Source" ParameterName="RTCClockSelection"/>
                    </CallLibMethod>
                </Else>
            </IFCondition>
        </IFCondition>
		
        <IFCondition Expression ="RTCUsed_ForRCC">            
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t}"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="(RTCUsed_ForRCC|LCDUsed_ForRCC) &amp; !((RTCClockSelection=RCC_RTCCLKSOURCE_LSE) | (RTCClockSelection=RCC_RTCCLKSOURCE_LSI))">
            <CallLibMethod Name="LL_RCC_SetRTC_HSEPrescaler">
                <MethodArg Name="Prescaler" ParameterName="RTCClockSelectionARG"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="FMCUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetFMCClockSource">
                <MethodArg Name="Source" ParameterName="FmcClockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="OCTOSPI1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetXSPIClockSource">
                <MethodArg Name="XSPIxSource" ParameterName="Xspi1ClockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="OCTOSPI2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetXSPIClockSource">
                <MethodArg Name="XSPIxSource" ParameterName="Xspi2ClockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="SAI1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSAIClockSource">
                <MethodArg Name="SAIxSource" ParameterName="SAI1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SAI2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSAIClockSource">
                <MethodArg Name="SAIxSource" ParameterName="SAI2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="I2C1_Used">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C1CLockSelectionForLL"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I3C1_Used">
            <CallLibMethod Name="LL_RCC_SetI3CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I3C1CLockSelectionForLL"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I2C2Used_ForRCC|I2C3Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C23CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="SPDIFRXUsed_ForRCC|(SAI2Used_ForRCC &amp; SAI2CLKSOURCE_SPDIF)">
            <CallLibMethod Name="LL_RCC_SetSPDIFRXClockSource">
                <MethodArg Name="Source" ParameterName="SPDIFCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="(SPI6Used_ForRCC|I2S6Used_ForRCC)">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI6CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SPI1Used_ForRCC|I2S1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="SPI2Used_ForRCC|SPI3Used_ForRCC|I2S2Used_ForRCC|I2S3Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI23CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SPI4Used_ForRCC|SPI5Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="Spi45ClockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="SDMMC1Used_ForRCC|SDMMC2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSDMMCClockSource">
                <MethodArg Name="SDMMCxSource" ParameterName="SDMMC1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USART1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUSARTClockSource">
                <MethodArg Name="USARTxSource" ParameterName="USART1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USART2Used_ForRCC|USART3Used_ForRCC|UART4Used_ForRCC|UART5Used_ForRCC|UART7Used_ForRCC|UART8Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUSARTClockSource">
                <MethodArg Name="USARTxSource" ParameterName="USART234578CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="LPUARTUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetLPUARTClockSource">
                <MethodArg Name="LPUARTxSource" ParameterName="LPUART1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>        
        
        <IFCondition Expression ="(OTG_FS_Used &amp; USBOCLKSOURCE_PHY) | OTG_HS_Used">
            <CallLibMethod Name="LL_RCC_SetUSBPHYCClockSource">
                <MethodArg Name="USBxSource" ParameterName="UsbphyClockSelectionARG"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="OTG_FS_Used">
            <CallLibMethod Name="LL_RCC_SetOTGFSClockSource">
                <MethodArg Name="USBxSource" ParameterName="USBCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="CECUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetCECClockSource">
                <MethodArg Name="Source" ParameterName="CECCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPTIM1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="LPTIM2Used_ForRCC|LPTIM3Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM23CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPTIM4Used_ForRCC|LPTIM5Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM45CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="USE_ADC1&amp;ADC1UsedAsynchronousCLK_ForRCC|USE_ADC2&amp;ADC2UsedAsynchronousCLK_ForRCC">
            <CallLibMethod Name="LL_RCC_SetADCClockSource">
                <MethodArg Name="ADCxSource" ParameterName="ADCCLockSelection"/>
            </CallLibMethod>
        </IFCondition>
    
        <IFCondition Expression ="FDCAN1Used_ForRCC|FDCAN2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetFDCANClockSource">
                <MethodArg Name="FDCANxSource" ParameterName="FDCANCLockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="PSSI_Used">
            <CallLibMethod Name="LL_RCC_SetPSSIClockSource">
                <MethodArg Name="PSSIxSource" ParameterName="PSSICLockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="ADF1_Used">
            <CallLibMethod Name="LL_RCC_SetADFClockSource">
                <MethodArg Name="ADFxSource" ParameterName="Adf1ClockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="ETH_Used">
            <CallLibMethod Name="LL_RCC_SetETHREFClockSource">
                <MethodArg Name="ETHxSource" ParameterName="ETH1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="ETH_Used &amp; ETHClockConfig &amp; ETH1CLKSOURCE_ETHPHY">
            <CallLibMethod Name="LL_RCC_SetETHPHYClockSource">
                <MethodArg Name="ETHxSource" ParameterName="ETHPHYCLockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
    </RefConfig>
    
	<RefConfig Name="RCC_CommonPeriphClockConfig">
        <IFCondition Expression ="cKPerUsed=1">
            <CallLibMethod Name="LL_RCC_SetCLKPClockSource">
                <MethodArg Name="Source" ParameterName="CKPERSourceSelection"/>
            </CallLibMethod>
        </IFCondition>		
    </RefConfig>

    <RefConfig Name="RCC_CSS_Enable">
        <IFCondition Expression ="CSSEnabled">
            <CallLibMethod Name="LL_RCC_HSE_EnableCSS"/>
        </IFCondition>
		
        <IFCondition Expression ="RCC_LSECSS_ENABLED">
            <CallLibMethod Name="LL_RCC_LSE_EnableCSS"/>
        </IFCondition>        
    </RefConfig>
    
    <RefConfig Name="PWREx_EnableUSBVoltageDetector">
        <IFCondition Expression="OTG_FS_Used|OTG_HS_Used">
            <CallLibMethod Name="LL_PWR_EnableUSBVoltageDetector"/>
        </IFCondition>        
    </RefConfig>

    <LibMethod Comment="" Name="LL_PWR_SetRegulVoltageScaling">
        <Argument AddressOf="false" GenericType="simple" Name="VoltageScaling"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_FLASH_SetLatency">
        <Argument AddressOf="false" GenericType="simple" Name="FLatency"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_LSE_SetDriveCapability">
        <Argument AddressOf="false" GenericType="simple" Name="LSEDrive"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_HSE_EnableCSS"/>             
	<LibMethod Comment="" Name="LL_RCC_HSE_EnableBypass" />    
    <LibMethod Comment="" Name="LL_RCC_HSE_Enable"/>

    <LibMethod Comment="" Name="LL_RCC_HSI_Enable"/>
    
    <LibMethod Comment="" Name="LL_RCC_HSI48_Enable"/>
  
    <LibMethod Comment="" Name="LL_RCC_LSE_Enable"/>	
    <LibMethod Comment="" Name="LL_RCC_LSE_EnableBypass"/>	
    <LibMethod Comment="" Name="LL_RCC_LSE_EnableCSS"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSI_Enable"/>

    <LibMethod Comment="" Name="LL_RCC_HSI_SetCalibTrimming">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetAPB1Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>	
    <LibMethod Comment="" Name="LL_RCC_SetAPB2Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetAPB4Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetAPB5Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_ConfigMCO">
        <Argument AddressOf="false" GenericType="simple" Name="MCOxSource"/>
        <Argument AddressOf="false" GenericType="simple" Name="MCOxPrescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetLPUARTClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="LPUARTxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetUSARTClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="USARTxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetI2CClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="I2CxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetI3CClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="I2CxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetLPTIMClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="LPTIMxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSAIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="SAIxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSDMMCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="SDMMCxSource"/>
    </LibMethod>
 
    <LibMethod Comment="" Name="LL_RCC_SetXSPIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="XSPIxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetUSBPHYCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="USBxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetOTGFSClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="USBxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetADCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="ADCxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetFDCANClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="FDCANxSource"/>
    </LibMethod>    
	
    <LibMethod Comment="" Name="LL_RCC_SetRTCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetRTC_HSEPrescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_EnableRTC"/>
	
    <LibMethod Comment="" Name="LL_PWR_EnableBkUpAccess"/>
    <LibMethod Comment="" Name="#tLL_RCC_ForceBackupDomainReset"/>
    <LibMethod Comment="" Name="#tLL_RCC_ReleaseBackupDomainReset"/>
    <LibMethod Comment="" Name="LL_RCC_PLL1_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL2_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3_Enable"/>
    
    <LibMethod Comment="" Name="LL_RCC_PLL1P_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL2P_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3P_Enable"/>
    
    <LibMethod Comment="" Name="LL_RCC_PLL1Q_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL2Q_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3Q_Enable"/>    
    
    <LibMethod Comment="" Name="LL_RCC_PLL1R_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL2R_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3R_Enable"/>	
    
    <LibMethod Comment="" Name="LL_RCC_PLL1S_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL2S_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3S_Enable"/>

    <LibMethod Comment="" Name="LL_RCC_PLL1T_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL2T_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3T_Enable"/>		

    <LibMethod Comment="" Name="LL_SetSystemCoreClock">
        <Argument AddressOf="false" GenericType="simple" Name="HCLKFrequency"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_Init1msTick">
        <Argument AddressOf="false" GenericType="simple" Name="HCLKFrequency"/>
    </LibMethod>


    <LibMethod Comment="" Name="LL_RCC_SetFMCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetPSSIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="PSSIxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetADFClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="ADFxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetETHPHYClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="ETHxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetETHREFClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="ETHxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetCLKPClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_PLL_SetSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetSysClkSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetSPIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSPDIFRXClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetCECClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_PLL1_SetM">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetN">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetP">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetQ">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetR">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetS">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetFRACN">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetM">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetN">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetP">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetQ">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetR">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetS">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetT">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetFRACN">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
   
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetN">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetM">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetP">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetQ">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetR">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetS">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetFRACN">
        <Argument AddressOf="false" GenericType="simple" Name="div"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_CSI_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_HSI_SetDivider">
        <Argument AddressOf="false" GenericType="simple" Name="hsidiv"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetVCOInputRange">
        <Argument AddressOf="false" GenericType="simple" Name="VCI_Range"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetVCOInputRange">
        <Argument AddressOf="false" GenericType="simple" Name="VCI_Range"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetVCOInputRange">
        <Argument AddressOf="false" GenericType="simple" Name="VCI_Range"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetVCOOutputRange">
        <Argument AddressOf="false" GenericType="simple" Name="Range"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetVCOOutputRange">
        <Argument AddressOf="false" GenericType="simple" Name="Range"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetVCOOutputRange">
        <Argument AddressOf="false" GenericType="simple" Name="Range"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_PLL1FRACN_Enable"/> 
    <LibMethod Comment="" Name="LL_RCC_PLL2FRACN_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3FRACN_Enable"/>
    
	<LibMethod Comment="" Name="LL_RCC_SetAHBPrescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetSysPrescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_CRS_SetSyncDivider">
        <Argument AddressOf="false" GenericType="simple" Name="Divider"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_CRS_SetSyncPolarity">
        <Argument AddressOf="false" GenericType="simple" Name="Polarity"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_CRS_SetSyncSignalSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_CRS_SetReloadCounter">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_CRS_SetFreqErrorLimit">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_CRS_SetHSI48SmoothTrimming">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_PWR_EnableUSBVoltageDetector"/>

    <RefComponent Cclass="HAL" Cgroup="RCC" Cversion="0.1.0">
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_bus.h"/>
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_cortex.h"/>
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_rcc.h"/>
        <File Category="source" Name="Drivers/STM32H7RSxx_HAL_Driver/Src/stm32h7rsxx_ll_rcc.c"/>
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_crs.h"/>
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_system.h"/>
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_utils.h"/>
        <File Category="source" Name="Drivers/STM32H7RSxx_HAL_Driver/Src/stm32h7rsxx_ll_utils.c"/> 
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_exti.h"/>
        <File Category="source" Name="Drivers/STM32H7RSxx_HAL_Driver/Src/stm32h7rsxx_ll_exti.c"/>
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_pwr.h"/>
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_gpio.h"/>
        <File Category="header" Name="Drivers/STM32H7RSxx_HAL_Driver/Inc/stm32h7rsxx_ll_dma.h"/>
    </RefComponent>
</IP>
