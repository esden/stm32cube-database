<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance"
	DBVersion="V4.0" Name="PWR" Version="STM32Cube_FW_WBA_V1.6.0RC3" IncludeFile="stm32wbaxx_ll_pwr.h"
	ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">
	<!-- PVD Configuration -->
	<RefConfig Comment="PVD Configuration" Name="PVDConfig">
		<CallLibMethod Name="LL_PWR_SetPVDLevel" ReturnHAL="false">
			<MethodArg Name="PVDLevel" ParameterName="PVDLevel" />
		</CallLibMethod>
		<IFCondition Expression="!(Mode = PWR_PVD_MODE_NORMAL)">
			<CallLibMethod Name="INITSTRUCT" Type="HardCode">
				<HardCode Text="#n#t/* Configure EXTI line 16 */#n#tLL_EXTI_InitTypeDef exti_initstruct;#n#texti_initstruct.Line_0_31 = LL_EXTI_LINE_16;#n#texti_initstruct.LineCommand = ENABLE;" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="(Mode = PWR_PVD_MODE_IT_RISING) | (Mode = PWR_PVD_MODE_IT_FALLING) | (Mode = PWR_PVD_MODE_IT_RISING_FALLING)">
			<CallLibMethod Name="MODE_IT" Type="HardCode">
				<HardCode Text="#n#texti_initstruct.Mode = LL_EXTI_MODE_IT;" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="(Mode = PWR_PVD_MODE_EVENT_RISING) | (Mode = PWR_PVD_MODE_EVENT_FALLING) | (Mode = PWR_PVD_MODE_EVENT_RISING_FALLING)">
			<CallLibMethod Name="MODE_EVENT" Type="HardCode">
				<HardCode Text="#n#texti_initstruct.Mode = LL_EXTI_MODE_EVENT;" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="(Mode = PWR_PVD_MODE_IT_RISING) | (Mode = PWR_PVD_MODE_EVENT_RISING)">
			<CallLibMethod Name="TRIGGER_RISING" Type="HardCode">
				<HardCode Text="#n#texti_initstruct.Trigger = LL_EXTI_TRIGGER_RISING;" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="(Mode = PWR_PVD_MODE_IT_FALLING) | (Mode = PWR_PVD_MODE_EVENT_FALLING)">
			<CallLibMethod Name="TRIGGER_FALLING" Type="HardCode">
				<HardCode Text="#n#texti_initstruct.Trigger = LL_EXTI_TRIGGER_FALLING;" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="(Mode = PWR_PVD_MODE_IT_RISING_FALLING) | (Mode = PWR_PVD_MODE_EVENT_RISING_FALLING)">
			<CallLibMethod Name="TRIGGER_RISING_FALLING" Type="HardCode">
				<HardCode Text="#n#texti_initstruct.Trigger = LL_EXTI_TRIGGER_RISING_FALLING;" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="!(Mode = PWR_PVD_MODE_NORMAL)">
			<CallLibMethod Name="EXTI_INIT" Type="HardCode">
				<HardCode Text="#n#tLL_EXTI_Init( &amp;exti_initstruct);" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>
	<RefConfig Comment="Enable the PVD Output" Name="PVDEnable">
		<CallLibMethod Name="LL_PWR_EnablePVD" ReturnHAL="false" />
	</RefConfig>
	<RefConfig Comment="PWR Privilege Configuration" Name="ConfigAttributesPRIV">
		<IFCondition Expression="pwrPrivilegeSecure=PWR_PRIVILEGE_SECURE_YES">
			<CallLibMethod Name="LL_PWR_EnableSecurePrivilege" ReturnHAL="false"></CallLibMethod>
		</IFCondition>
		<IFCondition Expression="(pwrPrivilege=PWR_PRIVILEGE_YES)|pwrPrivilegeNSecure=PWR_PRIVILEGE_NSECURE_YES">
			<CallLibMethod Name="LL_PWR_EnableNSecurePrivilege" ReturnHAL="false"></CallLibMethod>
		</IFCondition>
	</RefConfig>
	<RefConfig Comment="PWR Privilege/Secure Items Configurations" Name="ConfigAttributesSECPRIV">
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_WKUP1=WKUP1_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemWKUP1" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_WKUP2=WKUP2_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemWKUP2" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_WKUP3=WKUP3_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemWKUP3" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_WKUP4=WKUP4_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemWKUP4" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_WKUP5=WKUP5_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemWKUP5" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_WKUP6=WKUP6_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemWKUP6" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_WKUP7=WKUP7_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemWKUP7" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_WKUP8=WKUP8_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemWKUP8" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_VDM=VDM_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemVDM" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_APC=APC_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemAPC" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_LPM=LPM_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemLPM" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_SECURE  &amp; SEM_M33S &amp; (PWR_VB=VB_SECURE_YES)">
			<CallLibMethod Name="LL_PWR_ConfigSecure" ReturnHAL="false">
				<MethodArg Name="Item" ParameterName="ItemVB" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>
	<RefConfig Comment="Switch to SMPS regulator instead of LDO" Name="Configsmps">
		<IFCondition Expression="PowerMode=PWR_SMPS_SUPPLY">
			<CallLibMethod Name="LL_PWR_SetRegulatorSupply" ReturnHAL="false">
				<MethodArg Name="PowerMode" ParameterName="PowerMode" />
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#twhile(LL_PWR_IsActiveFlag_REGULATOR()!=1) #n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="S_LPBAM_CONF">
			<CallLibMethod Name="LL_PWR_SetRegulatorSupply" ReturnHAL="false">
				<MethodArg Name="PowerMode" ParameterName="PowerMode" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>
	<RefConfig Comment="Smart Run Domain Config" Name="Configsmartrun">
		<IFCondition Expression="S_LPBAM_CONF">
			<CallLibMethod Name="LL_PWR_SetSmartRunDomainMode" ReturnHAL="false">
				<MethodArg Name="SmartRun" ParameterName="SmartRun" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>
	<RefConfig Comment="SRAMx Power Down In Stop Mode Config" Name="Configstopmode">
		<IFCondition Expression="RAM1Page1PowerDownInStopMode=PWR_SRAM1_PAGE1_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM1StopRetention_1_3" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM1Page1PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="RAM1Page2PowerDownInStopMode=PWR_SRAM1_PAGE2_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM1StopRetention_1_3" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM1Page2PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="RAM1Page3PowerDownInStopMode=PWR_SRAM1_PAGE3_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM1StopRetention_1_3" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM1Page3PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="RAM1Page4PowerDownInStopMode=PWR_SRAM1_PAGE4_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM1StopRetention_4_12" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM1Page4PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="RAM1Page5PowerDownInStopMode=PWR_SRAM1_PAGE5_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM1StopRetention_4_12" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM1Page5PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="RAM1Page6PowerDownInStopMode=PWR_SRAM1_PAGE6_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM1StopRetention_4_12" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM1Page6PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="RAM1Page7PowerDownInStopMode=PWR_SRAM1_PAGE7_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM1StopRetention_4_12" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM1Page7PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="RAM2Page1PowerDownInStopMode=PWR_SRAM2_FULL_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM2StopRetention" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM2Page1PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="RAM2Page2PowerDownInStopMode=PWR_SRAM2_FULL_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM2StopRetention" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="RAM2Page2PowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="IcachePowerDownInStopMode=PWR_ICACHE_FULL_STOP_RETENTION">
			<CallLibMethod Name="LL_PWR_SetICacheRAMStopRetention" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="IcachePowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="IcachePowerDownInStopMode=__NULL &amp; S_LPBAM_CONF">
			<CallLibMethod Name="LL_PWR_SetICacheRAMStopRetention" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="IcachePowerDownInStopMode" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>
	<RefConfig Comment="SRAMx Power Down in Run mode Config" Name="ConfigRunmode">
		<IFCondition Expression="SRAM1PowerDownInRunMode=PWR_SRAM1_FULL_RUN_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM1RunRetention" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="SRAM1PowerDownInRunMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="SRAM2PowerDownInRunMode=PWR_SRAM2_FULL_RUN_RETENTION">
			<CallLibMethod Name="LL_PWR_SetSRAM2RunRetention" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="SRAM2PowerDownInRunMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="SRAM1PowerDownInRunMode=__NULL &amp; S_LPBAM_CONF">
			<CallLibMethod Name="LL_PWR_SetSRAM1RunRetention" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="SRAM1PowerDownInRunMode" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="SRAM2PowerDownInRunMode=__NULL &amp; S_LPBAM_CONF">
			<CallLibMethod Name="LL_PWR_SetSRAM2RunRetention" ReturnHAL="false">
				<MethodArg Name="RAMSelection" ParameterName="SRAM2PowerDownInRunMode" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>
	<LibMethod Comment="Enable Power Voltage Detector" Name="LL_PWR_EnablePVD" />
	<LibMethod Comment="Disable Power Voltage Detector" Name="LL_PWR_DisablePVD" />
	<LibMethod Comment="Configure the voltage threshold detected by the Power Voltage Detector" Name="LL_PWR_SetPVDLevel">
		<Argument AddressOf="false" GenericType="simple" Name="PVDLevel" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_PWR_ConfigSecure">
		<Argument AddressOf="false" GenericType="simple" Name="Item" OptimizationCondition="equal" />
	</LibMethod>
	<!-- power LL-->
	<LibMethod Comment="Switch to SMPS regulator instead of LDO" Name="LL_PWR_SetRegulatorSupply">
		<Argument AddressOf="false" GenericType="simple" Name="PowerMode" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_PWR_SetSmartRunDomainMode">
		<Argument AddressOf="false" GenericType="simple" Name="SmartRun" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetDSIRAMStopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetGraphicPeriphRAMStopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetPeriphRAMStopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetPKARAMStopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetDMA2DRAMStopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetDCache2RAMStopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetDCache1RAMStopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetICacheRAMStopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetSRAM2StopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetSRAM1StopRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetSRAM1StopRetention_1_3">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Stop mode" Name="LL_PWR_SetSRAM1StopRetention_4_12">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Run mode" Name="LL_PWR_SetSRAM1RunRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<LibMethod Comment="Enable SRAM power down in Run mode" Name="LL_PWR_SetSRAM2RunRetention">
		<Argument AddressOf="false" GenericType="simple" Name="RAMSelection" OptimizationCondition="equal" />
	</LibMethod>
	<RefConfig Comment="Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral" Name="DisableDeadBatterySignals">
		<IFCondition Expression="DisableDeadBatterySignalsConfig=Disable">
			<CallLibMethod Name="LL_PWR_DisableUCPDDeadBattery" ReturnHAL="false" />
		</IFCondition>
	</RefConfig>
	<LibMethod Comment="" Name="LL_PWR_DisableUCPDDeadBattery" />
	<LibMethod Comment="" Name="LL_PWR_EnableSecurePrivilege" />
	<LibMethod Comment="" Name="LL_PWR_EnableNSecurePrivilege" />
	<RefComponent Cclass="LL" Cgroup="DAC" Cversion="1.5.0">
		<File Category="header" Name="Drivers/STM32WBAxx_HAL_Driver/Inc/stm32wbaxx_ll_pwr.h" />
		<File Category="source" Name="Drivers/STM32WBAxx_HAL_Driver/Src/stm32wbaxx_ll_pwr.c" />
	</RefComponent>
</IP>
