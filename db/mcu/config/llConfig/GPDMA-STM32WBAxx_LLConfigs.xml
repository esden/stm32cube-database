<?xml version="1.0" encoding="utf-8" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="GPDMA" Version="STM32Cube_FW_WBA_V0.6.0" IncludeFile="stm32wbaxx_ll_dma.h"
    xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">
   
  <!-- GPDMA$Index CHANNEL 7 -->

 <RefConfig Name="Init_GPDMACH7">
    <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH7=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH7=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH7=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH7=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH7=DMA_CHANNEL_SRC_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH7">
    <CallLibMethod Name="LL_DMA_EnableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH7=DMA_CHANNEL_SRC_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH7">
    <CallLibMethod Name="LL_DMA_DisableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH7=DMA_CHANNEL_DEST_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH7">
    <CallLibMethod Name="LL_DMA_EnableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH7=DMA_CHANNEL_DEST_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH7">
    <CallLibMethod Name="LL_DMA_DisableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH7">
    <CallLibMethod Name="LL_DMA_Init">
                <MethodArg Name="Instance" FValue="GPDMA$Index"/>
                <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
                <MethodArg Name="SrcAddress" FValue="0x00000000U"/><!--dynamic -->
                <MethodArg Name="DestAddress" FValue="0x00000000U"/> <!--dynamic -->
                <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH7"/>
                <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH7"/>
                <MethodArg Name="DataAlignment" FValue="LL_DMA_DATA_ALIGN_ZEROPADD"/>
                <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH7"/> <!-- <GPDMA only-->
                <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH7"/><!-- <GPDMA only-->
                <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH7"/>
                <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH7"/>
                <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH7"/>
                <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH7"/>
                <MethodArg Name="Priority" ParameterName="PRIORITY_GPDMACH7"/>
                 <MethodArg Name="BlkDataLength" FValue="0x00000000U"/> <!--dynamic-->

                 

                <MethodArg Name="TriggerMode" FValue="LL_DMA_TRIGM_BLK_TRANSFER"/>
                <MethodArg Name="TriggerPolarity" FValue="LL_DMA_TRIG_POLARITY_MASKED"/> 
                <MethodArg Name="TriggerSelection" FValue="0x00000000U"/> 
                <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH7"/>
                <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_GPDMACH7"/>

<!-- only for GPDMA -->
                <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_PRESERVE"/><!-- <GPDMA only-->
                <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_PRESERVE"/><!-- <GPDMA only-->
                <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_PRESERVE"/> <!-- <GPDMA only-->
<!-- only for GPDMA -->
                <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH7"/> <!-- <GPDMA only-->
                <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH7"/> <!-- <GPDMA only-->
                
                <MethodArg Name="LinkAllocatedPort" FValue="LL_DMA_LINK_ALLOCATED_PORT1"/>
                <MethodArg Name="LinkStepMode" FValue="LL_DMA_LSM_FULL_EXECUTION"/> 

                 

                  <MethodArg Name="LinkedListBaseAddr" FValue="0x00000000U"/>
                  <MethodArg Name="LinkedListAddrOffset" FValue="0x00000000U"/> 
               
           
   </CallLibMethod>
    </IFCondition>
    
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH7 &amp; (DATAEXCHANGE_GPDMACH7=DMA_EXCHANGE_DEST_BYTE)">
    <CallLibMethod Name="LL_DMA_SetDestByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH7 &amp; (DATAEXCHANGE_GPDMACH7=DMA_EXCHANGE_DEST_HALFWORD)">
    <CallLibMethod Name="L_DMA_SetDestHWordExchange">
           <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

     <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH7 &amp; (DATAEXCHANGE_GPDMACH7=DMA_EXCHANGE_SRC_BYTE)">
    <CallLibMethod Name="LL_DMA_SetSrcByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH7 &amp; !(DATAALIGNEMENT_GPDMACH7=DMA_DATA_RIGHTALIGN_ZEROPADDED)">
    <CallLibMethod Name="LL_DMA_SetDataAlignment">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH7"/> 
    </CallLibMethod>
   </IFCondition>
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH7 &amp; !SEM_NOTRIG_$IpInstanceCH7">
    <CallLibMethod Name="LL_DMA_SetTriggerMode">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH7"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetTriggerPolarity">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH7"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetHWTrigger">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="Trigger" ParameterName="TRIGGERSELECTION_GPDMACH7"/> 
    </CallLibMethod>
    </IFCondition>
  

<IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH7 &amp; SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH7"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" ParameterName="DestSEC_GPDMACH7"/> 
        <MethodArg Name="SrcSecure" ParameterName="SrcSEC_GPDMACH7"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH7"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH7"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH7"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH7"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH7"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH7"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH7"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH7"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH7"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH7"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH7"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH7"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH7"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH7"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH7"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH7"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH7"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH7"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH7"/>
            
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH7"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH7"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH7"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH7"/> 
      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH7"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH7"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <!--CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod-->

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH7"/>
        </CallLibMethod>
<!--CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod-->
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH7"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH7"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH7"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH7"/>
     </CallLibMethod>
      
   </IFCondition>  
   <IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH7 &amp; !SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH7"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" FValue="__NULL"/> 
        <MethodArg Name="SrcSecure" FValue="__NULL"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH7"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH7"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH7"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH7"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH7"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH7"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH7"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH7"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH7"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH7"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH7"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH7"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH7"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH7"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH7"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH7"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH7"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH7"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH7"/>
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH7"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH7"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH7"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH7"/> 

      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH7"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH7"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH7"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
        
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH7"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH7"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH7"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH7"/>
     </CallLibMethod>
   </IFCondition>  

</RefConfig>

  
<!-- init for simple request circular or linear GPDMA$Index_CH7 END -->






<!-- init for LinkedList GPDMA$Index_CH7 BEGIN -->

<RefConfig Name="Init_LL_GPDMACH7">
      <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_GPDMACH7"/> 
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_GPDMACH7"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_GPDMACH7"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_GPDMACH7"/> 
     </CallLibMethod>

      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH7=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH7=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH7=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH7=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_7"/>
    </CallLibMethod>
     </IFCondition>
    
</RefConfig>

<!-- init for LinkedList GPDMA_CH7 END -->




<!-- init for LinkedList GPDMA_CH6 END -->



<RefConfig Name="Init_GPDMACH6">
    <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH6=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH6=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH6=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH6=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH6=DMA_CHANNEL_SRC_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH6">
    <CallLibMethod Name="LL_DMA_EnableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH6=DMA_CHANNEL_SRC_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH6">
    <CallLibMethod Name="LL_DMA_DisableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH6=DMA_CHANNEL_DEST_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH6">
    <CallLibMethod Name="LL_DMA_EnableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH6=DMA_CHANNEL_DEST_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH6">
    <CallLibMethod Name="LL_DMA_DisableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH6">
    <CallLibMethod Name="LL_DMA_Init">
                <MethodArg Name="Instance" FValue="GPDMA$Index"/>
                <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
                <MethodArg Name="SrcAddress" FValue="0x00000000U"/><!--dynamic -->
                <MethodArg Name="DestAddress" FValue="0x00000000U"/> <!--dynamic -->
                <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH6"/>
                <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH6"/>
                <MethodArg Name="DataAlignment" FValue="LL_DMA_DATA_ALIGN_ZEROPADD"/>
                <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH6"/> <!-- <GPDMA only-->
                <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH6"/><!-- <GPDMA only-->
                <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH6"/>
                <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH6"/>
                <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH6"/>
                <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH6"/>
                <MethodArg Name="Priority" ParameterName="PRIORITY_GPDMACH6"/>
                 <MethodArg Name="BlkDataLength" FValue="0x00000000U"/> <!--dynamic-->

                
                <MethodArg Name="TriggerMode" FValue="LL_DMA_TRIGM_BLK_TRANSFER"/>
                <MethodArg Name="TriggerPolarity" FValue="LL_DMA_TRIG_POLARITY_MASKED"/> 
                <MethodArg Name="TriggerSelection" FValue="0x00000000U"/> 
                <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH6"/>
                <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_GPDMACH6"/>

<!-- only for GPDMA -->
                <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_PRESERVE"/><!-- <GPDMA only-->
                <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_PRESERVE"/><!-- <GPDMA only-->
                <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_PRESERVE"/> <!-- <GPDMA only-->
<!-- only for GPDMA -->
                <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH6"/> <!-- <GPDMA only-->
                <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH6"/> <!-- <GPDMA only-->
                
                <MethodArg Name="LinkAllocatedPort" FValue="LL_DMA_LINK_ALLOCATED_PORT1"/>
                <MethodArg Name="LinkStepMode" FValue="LL_DMA_LSM_FULL_EXECUTION"/> 

                 
                  <MethodArg Name="LinkedListBaseAddr" FValue="0x00000000U"/>
                  <MethodArg Name="LinkedListAddrOffset" FValue="0x00000000U"/> 
               
           
   </CallLibMethod>
    </IFCondition>
    
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH6 &amp; (DATAEXCHANGE_GPDMACH6=DMA_EXCHANGE_DEST_BYTE)">
    <CallLibMethod Name="LL_DMA_SetDestByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH6 &amp; (DATAEXCHANGE_GPDMACH6=DMA_EXCHANGE_DEST_HALFWORD)">
    <CallLibMethod Name="L_DMA_SetDestHWordExchange">
           <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

     <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH6 &amp; (DATAEXCHANGE_GPDMACH6=DMA_EXCHANGE_SRC_BYTE)">
    <CallLibMethod Name="LL_DMA_SetSrcByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH6 &amp; !(DATAALIGNEMENT_GPDMACH6=DMA_DATA_RIGHTALIGN_ZEROPADDED)">
    <CallLibMethod Name="LL_DMA_SetDataAlignment">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH6"/> 
    </CallLibMethod>
   </IFCondition>
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH6 &amp; !SEM_NOTRIG_$IpInstanceCH6">
    <CallLibMethod Name="LL_DMA_SetTriggerMode">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH6"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetTriggerPolarity">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH6"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetHWTrigger">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="Trigger" ParameterName="TRIGGERSELECTION_GPDMACH6"/> 
    </CallLibMethod>
    </IFCondition>
   


<IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH6 &amp; SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH6"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" ParameterName="DestSEC_GPDMACH6"/> 
        <MethodArg Name="SrcSecure" ParameterName="SrcSEC_GPDMACH6"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH6"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH6"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH6"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH6"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH6"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH6"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH6"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH6"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH6"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH6"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH6"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH6"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH6"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH6"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH6"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH6"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH6"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH6"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH6"/>
            
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH6"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH6"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH6"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH6"/> 
      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH6"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH6"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH6"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH6"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH6"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH6"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH6"/>
     </CallLibMethod>
      
   </IFCondition>  
   <IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH6 &amp; !SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH6"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" FValue="__NULL"/> 
        <MethodArg Name="SrcSecure" FValue="__NULL"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH6"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH6"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH6"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH6"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH6"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH6"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH6"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH6"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH6"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH6"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH6"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH6"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH6"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH6"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH6"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH6"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH6"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH6"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH6"/>
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH6"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH6"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH6"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH6"/> 

      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH6"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH6"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH6"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
        
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH6"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH6"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH6"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH6"/> 
     </CallLibMethod>
   </IFCondition>  

</RefConfig>

  
<!-- init for simple request circular or linear GPDMA_CH6 END -->


<!-- GPDMA$Index CHANNEL 6 -->



<!-- init for LinkedList GPDMA_CH6 BEGIN -->

<RefConfig Name="Init_LL_GPDMACH6">
      <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_GPDMACH6"/> 
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_GPDMACH6"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_GPDMACH6"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_GPDMACH6"/> 
     </CallLibMethod>

      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH6=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH6=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH6=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH6=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_6"/>
    </CallLibMethod>
     </IFCondition>
    
</RefConfig>

<!-- init for LinkedList GPDMA_CH6 END -->




<!-- GPDMA$Index CHANNEL 5-->

<RefConfig Name="Init_GPDMACH5">
    <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH5=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH5=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH5=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH5=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH5=DMA_CHANNEL_SRC_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH5">
    <CallLibMethod Name="LL_DMA_EnableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH5=DMA_CHANNEL_SRC_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH5">
    <CallLibMethod Name="LL_DMA_DisableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH5=DMA_CHANNEL_DEST_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH5">
    <CallLibMethod Name="LL_DMA_EnableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH5=DMA_CHANNEL_DEST_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH5">
    <CallLibMethod Name="LL_DMA_DisableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH5">
    <CallLibMethod Name="LL_DMA_Init">
                <MethodArg Name="Instance" FValue="GPDMA$Index"/>
                <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
                <MethodArg Name="SrcAddress" FValue="0x00000000U"/><!--dynamic -->
                <MethodArg Name="DestAddress" FValue="0x00000000U"/> <!--dynamic -->
                <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH5"/>
                <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH5"/>
                <MethodArg Name="DataAlignment" FValue="LL_DMA_DATA_ALIGN_ZEROPADD"/>
                <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH5"/> <!-- <GPDMA only-->
                <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH5"/><!-- <GPDMA only-->
                <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH5"/>
                <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH5"/>
                <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH5"/>
                <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH5"/>
                <MethodArg Name="Priority" ParameterName="PRIORITY_GPDMACH5"/>
                 <MethodArg Name="BlkDataLength" FValue="0x00000000U"/> <!--dynamic-->

                <MethodArg Name="TriggerMode" FValue="LL_DMA_TRIGM_BLK_TRANSFER"/>
                <MethodArg Name="TriggerPolarity" FValue="LL_DMA_TRIG_POLARITY_MASKED"/> 
                <MethodArg Name="TriggerSelection" FValue="0x00000000U"/> 
                <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH5"/>
                <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_GPDMACH5"/>

                <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH5"/> <!-- <GPDMA only-->
                <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH5"/> <!-- <GPDMA only-->
                
                <MethodArg Name="LinkAllocatedPort" FValue="LL_DMA_LINK_ALLOCATED_PORT1"/>
                <MethodArg Name="LinkStepMode" FValue="LL_DMA_LSM_FULL_EXECUTION"/>

                  <MethodArg Name="LinkedListBaseAddr" FValue="0x00000000U"/>
                  <MethodArg Name="LinkedListAddrOffset" FValue="0x00000000U"/> 
               
           
   </CallLibMethod>
    </IFCondition>
    
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH5 &amp; (DATAEXCHANGE_GPDMACH5=DMA_EXCHANGE_DEST_BYTE)">
    <CallLibMethod Name="LL_DMA_SetDestByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH5 &amp; (DATAEXCHANGE_GPDMACH5=DMA_EXCHANGE_DEST_HALFWORD)">
    <CallLibMethod Name="L_DMA_SetDestHWordExchange">
           <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

     <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH5 &amp; (DATAEXCHANGE_GPDMACH5=DMA_EXCHANGE_SRC_BYTE)">
    <CallLibMethod Name="LL_DMA_SetSrcByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH5 &amp; !(DATAALIGNEMENT_GPDMACH5=DMA_DATA_RIGHTALIGN_ZEROPADDED)">
    <CallLibMethod Name="LL_DMA_SetDataAlignment">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH5"/> 
    </CallLibMethod>
   </IFCondition>
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH5 &amp; !SEM_NOTRIG_$IpInstanceCH5">
    <CallLibMethod Name="LL_DMA_SetTriggerMode">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH5"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetTriggerPolarity">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH5"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetHWTrigger">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="Trigger" ParameterName="TRIGGERSELECTION_GPDMACH5"/> 
    </CallLibMethod>
    </IFCondition>
   



<IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH5 &amp; SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH5"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" ParameterName="DestSEC_GPDMACH5"/> 
        <MethodArg Name="SrcSecure" ParameterName="SrcSEC_GPDMACH5"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH5"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH5"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH5"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH5"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH5"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH5"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH5"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH5"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH5"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH5"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH5"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH5"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH5"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH5"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH5"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH5"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH5"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH5"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH5"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH5"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH5"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH5"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH5"/> 
      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH5"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH5"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH5"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH5"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH5"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH5"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH5"/>
     </CallLibMethod>
      
   </IFCondition>  
   <IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH5 &amp; !SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH5"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" FValue="__NULL"/> 
        <MethodArg Name="SrcSecure" FValue="__NULL"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH5"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH5"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH5"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH5"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH5"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH5"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH5"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH5"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH5"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH5"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH5"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH5"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH5"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH5"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH5"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH5"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH5"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH5"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH5"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH5"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH5"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH5"/> 
           
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH5"/> 

      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH5"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH5"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH5"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
        
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH5"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH5"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH5"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH5"/> 
     </CallLibMethod>
   </IFCondition>  

</RefConfig>

  
<!-- init for simple request circular or linear GPDMA_CH5 END -->






<!-- init for LinkedList GPDMA_CH5 BEGIN -->

<RefConfig Name="Init_LL_GPDMACH5">
      <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH5"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH5"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH5"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH5"/>
     </CallLibMethod>

      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH5=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH5=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH5=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH5=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_5"/>
    </CallLibMethod>
     </IFCondition>
    
</RefConfig>

<!-- init for LinkedList GPDMA_CH5 END -->


<!-- GPDMA$Index CHANNEL 4-->

<RefConfig Name="Init_GPDMACH4">
    <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH4=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH4=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH4=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH4=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH4=DMA_CHANNEL_SRC_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH4">
    <CallLibMethod Name="LL_DMA_EnableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH4=DMA_CHANNEL_SRC_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH4">
    <CallLibMethod Name="LL_DMA_DisableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH4=DMA_CHANNEL_DEST_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH4">
    <CallLibMethod Name="LL_DMA_EnableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH4=DMA_CHANNEL_DEST_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH4">
    <CallLibMethod Name="LL_DMA_DisableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH4">
    <CallLibMethod Name="LL_DMA_Init">
                <MethodArg Name="Instance" FValue="GPDMA$Index"/>
                <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
                <MethodArg Name="SrcAddress" FValue="0x00000000U"/><!--dynamic -->
                <MethodArg Name="DestAddress" FValue="0x00000000U"/> <!--dynamic -->
                <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH4"/>
                <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH4"/>
                <MethodArg Name="DataAlignment" FValue="LL_DMA_DATA_ALIGN_ZEROPADD"/>
                <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH4"/> <!-- <GPDMA only-->
                <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH4"/><!-- <GPDMA only-->
                <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH4"/>
                <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH4"/>
                <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH4"/>
                <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH4"/>
                <MethodArg Name="Priority" ParameterName="PRIORITY_GPDMACH4"/>
                 <MethodArg Name="BlkDataLength" FValue="0x00000000U"/> <!--dynamic-->

                <MethodArg Name="TriggerMode" FValue="LL_DMA_TRIGM_BLK_TRANSFER"/>
                <MethodArg Name="TriggerPolarity" FValue="LL_DMA_TRIG_POLARITY_MASKED"/> 
                <MethodArg Name="TriggerSelection" FValue="0x00000000U"/> 
                <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH4"/>
                <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_GPDMACH4"/>

                <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH4"/> <!-- <GPDMA only-->
                <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH4"/> <!-- <GPDMA only-->
                
                <MethodArg Name="LinkAllocatedPort" FValue="LL_DMA_LINK_ALLOCATED_PORT1"/>
                <MethodArg Name="LinkStepMode" FValue="LL_DMA_LSM_FULL_EXECUTION"/>

                  <MethodArg Name="LinkedListBaseAddr" FValue="0x00000000U"/>
                  <MethodArg Name="LinkedListAddrOffset" FValue="0x00000000U"/> 
               
           
   </CallLibMethod>
    </IFCondition>
    
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH4 &amp; (DATAEXCHANGE_GPDMACH4=DMA_EXCHANGE_DEST_BYTE)">
    <CallLibMethod Name="LL_DMA_SetDestByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH4 &amp; (DATAEXCHANGE_GPDMACH4=DMA_EXCHANGE_DEST_HALFWORD)">
    <CallLibMethod Name="L_DMA_SetDestHWordExchange">
           <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

     <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH4 &amp; (DATAEXCHANGE_GPDMACH4=DMA_EXCHANGE_SRC_BYTE)">
    <CallLibMethod Name="LL_DMA_SetSrcByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH4 &amp; !(DATAALIGNEMENT_GPDMACH4=DMA_DATA_RIGHTALIGN_ZEROPADDED)">
    <CallLibMethod Name="LL_DMA_SetDataAlignment">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH4"/> 
    </CallLibMethod>
   </IFCondition>
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH4 &amp; !SEM_NOTRIG_$IpInstanceCH4">
    <CallLibMethod Name="LL_DMA_SetTriggerMode">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH4"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetTriggerPolarity">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH4"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetHWTrigger">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="Trigger" ParameterName="TRIGGERSELECTION_GPDMACH4"/> 
    </CallLibMethod>
    </IFCondition>
   



<IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH4 &amp; SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH4"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" ParameterName="DestSEC_GPDMACH4"/> 
        <MethodArg Name="SrcSecure" ParameterName="SrcSEC_GPDMACH4"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH4"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH4"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH4"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH4"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH4"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH4"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH4"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH4"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH4"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH4"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH4"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH4"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH4"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH4"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH4"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH4"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH4"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH4"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH4"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH4"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH4"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH4"/> 
           
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH4"/> 
      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH4"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH4"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH4"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH4"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH4"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH4"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH4"/> 
     </CallLibMethod>
      
   </IFCondition>  
   <IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH4 &amp; !SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH4"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" FValue="__NULL"/> 
        <MethodArg Name="SrcSecure" FValue="__NULL"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH4"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH4"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH4"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH4"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH4"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH4"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH4"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH4"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH4"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH4"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH4"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH4"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH4"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH4"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH4"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH4"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH4"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH4"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH4"/>
            
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH4"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH4"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH4"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR  | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH4"/> 

      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH4"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH4"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH4"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
        
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH4"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH4"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH4"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH4"/> 
     </CallLibMethod>
   </IFCondition>  

</RefConfig>

  
<!-- init for simple request circular or linear GPDMA_CH4 END -->






<!-- init for LinkedList GPDMA_CH4 BEGIN -->

<RefConfig Name="Init_LL_GPDMACH4">
      <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_GPDMACH4"/> 
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_GPDMACH4"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_GPDMACH4"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_GPDMACH4"/> 
     </CallLibMethod>

      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH4=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH4=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH4=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH4=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_4"/>
    </CallLibMethod>
     </IFCondition>
    
</RefConfig>

<!-- init for LinkedList GPDMA_CH4 END -->

<!-- GPDMA$Index CHANNEL 3-->

<RefConfig Name="Init_GPDMACH3">
    <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH3=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH3=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH3=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH3=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH3=DMA_CHANNEL_SRC_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH3">
    <CallLibMethod Name="LL_DMA_EnableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH3=DMA_CHANNEL_SRC_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH3">
    <CallLibMethod Name="LL_DMA_DisableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH3=DMA_CHANNEL_DEST_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH3">
    <CallLibMethod Name="LL_DMA_EnableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH3=DMA_CHANNEL_DEST_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH3">
    <CallLibMethod Name="LL_DMA_DisableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH3">
    <CallLibMethod Name="LL_DMA_Init">
                <MethodArg Name="Instance" FValue="GPDMA$Index"/>
                <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
                <MethodArg Name="SrcAddress" FValue="0x00000000U"/><!--dynamic -->
                <MethodArg Name="DestAddress" FValue="0x00000000U"/> <!--dynamic -->
                <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH3"/>
                <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH3"/>
                <MethodArg Name="DataAlignment" FValue="LL_DMA_DATA_ALIGN_ZEROPADD"/>
                <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH3"/> <!-- <GPDMA only-->
                <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH3"/><!-- <GPDMA only-->
                <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH3"/>
                <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH3"/>
                <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH3"/>
                <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH3"/>
                <MethodArg Name="Priority" ParameterName="PRIORITY_GPDMACH3"/>
                 <MethodArg Name="BlkDataLength" FValue="0x00000000U"/> <!--dynamic-->

                <MethodArg Name="TriggerMode" FValue="LL_DMA_TRIGM_BLK_TRANSFER"/>
                <MethodArg Name="TriggerPolarity" FValue="LL_DMA_TRIG_POLARITY_MASKED"/> 
                <MethodArg Name="TriggerSelection" FValue="0x00000000U"/> 
                <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH3"/>
                <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_GPDMACH3"/>

                <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH3"/> <!-- <GPDMA only-->
                <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH3"/> <!-- <GPDMA only-->
                
                <MethodArg Name="LinkAllocatedPort" FValue="LL_DMA_LINK_ALLOCATED_PORT1"/>
                <MethodArg Name="LinkStepMode" FValue="LL_DMA_LSM_FULL_EXECUTION"/>

                  <MethodArg Name="LinkedListBaseAddr" FValue="0x00000000U"/>
                  <MethodArg Name="LinkedListAddrOffset" FValue="0x00000000U"/> 
               
           
   </CallLibMethod>
    </IFCondition>
    
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH3 &amp; (DATAEXCHANGE_GPDMACH3=DMA_EXCHANGE_DEST_BYTE)">
    <CallLibMethod Name="LL_DMA_SetDestByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH3 &amp; (DATAEXCHANGE_GPDMACH3=DMA_EXCHANGE_DEST_HALFWORD)">
    <CallLibMethod Name="L_DMA_SetDestHWordExchange">
           <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

     <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH3 &amp; (DATAEXCHANGE_GPDMACH3=DMA_EXCHANGE_SRC_BYTE)">
    <CallLibMethod Name="LL_DMA_SetSrcByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH3 &amp; !(DATAALIGNEMENT_GPDMACH3=DMA_DATA_RIGHTALIGN_ZEROPADDED)">
    <CallLibMethod Name="LL_DMA_SetDataAlignment">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH3"/> 
    </CallLibMethod>
   </IFCondition>
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH3 &amp; !SEM_NOTRIG_$IpInstanceCH3">
    <CallLibMethod Name="LL_DMA_SetTriggerMode">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH3"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetTriggerPolarity">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH3"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetHWTrigger">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="Trigger" ParameterName="TRIGGERSELECTION_GPDMACH3"/> 
    </CallLibMethod>
    </IFCondition>
   



<IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH3 &amp; SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH3"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" ParameterName="DestSEC_GPDMACH3"/> 
        <MethodArg Name="SrcSecure" ParameterName="SrcSEC_GPDMACH3"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH3"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH3"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH3"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH3"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH3"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH3"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH3"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH3"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH3"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH3"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH3"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH3"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH3"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH3"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH3"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH3"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH3"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH3"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH3"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH3"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH3"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH3"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH3"/> 
      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH3"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH3"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH3"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH3"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH3"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH3"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH3"/>
     </CallLibMethod>
      
   </IFCondition>  
   <IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH3 &amp; !SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH3"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" FValue="__NULL"/> 
        <MethodArg Name="SrcSecure" FValue="__NULL"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH3"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH3"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH3"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH3"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH3"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH3"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH3"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH3"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH3"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH3"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH3"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH3"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH3"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH3"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH3"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH3"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH3"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH3"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH3"/>
          
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH3"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH3"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH3"/> 
           
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH3"/> 

      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH3"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH3"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH3"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
        
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH3"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH3"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH3"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH3"/> 
     </CallLibMethod>
   </IFCondition>  

</RefConfig>

  
<!-- init for simple request circular or linear GPDMA_CH3 END -->






<!-- init for LinkedList GPDMA_CH3 BEGIN -->

<RefConfig Name="Init_LL_GPDMACH3">
      <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_GPDMACH3"/> 
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_GPDMACH3"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_GPDMACH3"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_GPDMACH3"/> 
     </CallLibMethod>

      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH3=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH3=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH3=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH3=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_3"/>
    </CallLibMethod>
     </IFCondition>
    
</RefConfig>

<!-- init for LinkedList GPDMA_CH3 END -->

<!-- GPDMA$Index CHANNEL 2-->

<RefConfig Name="Init_GPDMACH2">
    <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH2=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH2=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH2=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH2=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH2=DMA_CHANNEL_SRC_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH2">
    <CallLibMethod Name="LL_DMA_EnableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH2=DMA_CHANNEL_SRC_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH2">
    <CallLibMethod Name="LL_DMA_DisableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH2=DMA_CHANNEL_DEST_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH2">
    <CallLibMethod Name="LL_DMA_EnableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH2=DMA_CHANNEL_DEST_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH2">
    <CallLibMethod Name="LL_DMA_DisableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH2">
    <CallLibMethod Name="LL_DMA_Init">
                <MethodArg Name="Instance" FValue="GPDMA$Index"/>
                <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
                <MethodArg Name="SrcAddress" FValue="0x00000000U"/><!--dynamic -->
                <MethodArg Name="DestAddress" FValue="0x00000000U"/> <!--dynamic -->
                <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH2"/>
                <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH2"/>
                <MethodArg Name="DataAlignment" FValue="LL_DMA_DATA_ALIGN_ZEROPADD"/>
                <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH2"/> <!-- <GPDMA only-->
                <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH2"/><!-- <GPDMA only-->
                <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH2"/>
                <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH2"/>
                <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH2"/>
                <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH2"/>
                <MethodArg Name="Priority" ParameterName="PRIORITY_GPDMACH2"/>
                 <MethodArg Name="BlkDataLength" FValue="0x00000000U"/> <!--dynamic-->

                <MethodArg Name="TriggerMode" FValue="LL_DMA_TRIGM_BLK_TRANSFER"/>
                <MethodArg Name="TriggerPolarity" FValue="LL_DMA_TRIG_POLARITY_MASKED"/> 
                <MethodArg Name="TriggerSelection" FValue="0x00000000U"/> 
                <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH2"/>
                <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_GPDMACH2"/>

                <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH2"/> <!-- <GPDMA only-->
                <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH2"/> <!-- <GPDMA only-->
                
                <MethodArg Name="LinkAllocatedPort" FValue="LL_DMA_LINK_ALLOCATED_PORT1"/>
                <MethodArg Name="LinkStepMode" FValue="LL_DMA_LSM_FULL_EXECUTION"/>

                  <MethodArg Name="LinkedListBaseAddr" FValue="0x00000000U"/>
                  <MethodArg Name="LinkedListAddrOffset" FValue="0x00000000U"/> 
               
           
   </CallLibMethod>
    </IFCondition>
    
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH2 &amp; (DATAEXCHANGE_GPDMACH2=DMA_EXCHANGE_DEST_BYTE)">
    <CallLibMethod Name="LL_DMA_SetDestByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH2 &amp; (DATAEXCHANGE_GPDMACH2=DMA_EXCHANGE_DEST_HALFWORD)">
    <CallLibMethod Name="L_DMA_SetDestHWordExchange">
           <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

     <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH2 &amp; (DATAEXCHANGE_GPDMACH2=DMA_EXCHANGE_SRC_BYTE)">
    <CallLibMethod Name="LL_DMA_SetSrcByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH2 &amp; !(DATAALIGNEMENT_GPDMACH2=DMA_DATA_RIGHTALIGN_ZEROPADDED)">
    <CallLibMethod Name="LL_DMA_SetDataAlignment">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH2"/> 
    </CallLibMethod>
   </IFCondition>
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH2 &amp; !SEM_NOTRIG_$IpInstanceCH2">
    <CallLibMethod Name="LL_DMA_SetTriggerMode">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH2"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetTriggerPolarity">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH2"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetHWTrigger">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="Trigger" ParameterName="TRIGGERSELECTION_GPDMACH2"/> 
    </CallLibMethod>
    </IFCondition>
   



<IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH2 &amp; SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH2"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" ParameterName="DestSEC_GPDMACH2"/> 
        <MethodArg Name="SrcSecure" ParameterName="SrcSEC_GPDMACH2"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH2"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH2"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH2"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH2"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH2"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH2"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH2"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH2"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH2"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH2"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH2"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH2"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH2"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH2"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH2"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH2"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH2"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH2"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH2"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH2"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH2"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH2"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH2"/> 
      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH2"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH2"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH2"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH2"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH2"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH2"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH2"/> 
     </CallLibMethod>
      
   </IFCondition>  
   <IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH2 &amp; !SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH2"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" FValue="__NULL"/> 
        <MethodArg Name="SrcSecure" FValue="__NULL"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH2"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH2"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH2"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH2"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH2"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH2"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH2"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH2"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH2"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH2"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH2"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH2"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH2"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH2"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH2"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH2"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH2"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH2"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH2"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH2"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH2"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH2"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH2"/> 

      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH2"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH2"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH2"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
        
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH2"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH2"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH2"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH2"/> 
     </CallLibMethod>
   </IFCondition>  

</RefConfig>

  
<!-- init for simple request circular or linear GPDMA_CH2 END -->






<!-- init for LinkedList GPDMA_CH2 BEGIN -->

<RefConfig Name="Init_LL_GPDMACH2">
      <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_GPDMACH2"/> 
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_GPDMACH2"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_GPDMACH2"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_GPDMACH2"/> 
     </CallLibMethod>

      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH2=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH2=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH2=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH2=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_2"/>
    </CallLibMethod>
     </IFCondition>
    
</RefConfig>

<!-- init for LinkedList GPDMA_CH2 END -->

<!-- GPDMA$Index CHANNEL 1-->

<RefConfig Name="Init_GPDMACH1">
    <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH1=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH1=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH1=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH1=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH1=DMA_CHANNEL_SRC_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH1">
    <CallLibMethod Name="LL_DMA_EnableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH1=DMA_CHANNEL_SRC_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH1">
    <CallLibMethod Name="LL_DMA_DisableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH1=DMA_CHANNEL_DEST_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH1">
    <CallLibMethod Name="LL_DMA_EnableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH1=DMA_CHANNEL_DEST_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH1">
    <CallLibMethod Name="LL_DMA_DisableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH1">
    <CallLibMethod Name="LL_DMA_Init">
                <MethodArg Name="Instance" FValue="GPDMA$Index"/>
                <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
                <MethodArg Name="SrcAddress" FValue="0x00000000U"/><!--dynamic -->
                <MethodArg Name="DestAddress" FValue="0x00000000U"/> <!--dynamic -->
                <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH1"/>
                <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH1"/>
                <MethodArg Name="DataAlignment" FValue="LL_DMA_DATA_ALIGN_ZEROPADD"/>
                <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH1"/> <!-- <GPDMA only-->
                <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH1"/><!-- <GPDMA only-->
                <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH1"/>
                <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH1"/>
                <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH1"/>
                <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH1"/>
                <MethodArg Name="Priority" ParameterName="PRIORITY_GPDMACH1"/>
                 <MethodArg Name="BlkDataLength" FValue="0x00000000U"/> <!--dynamic-->

                <MethodArg Name="TriggerMode" FValue="LL_DMA_TRIGM_BLK_TRANSFER"/>
                <MethodArg Name="TriggerPolarity" FValue="LL_DMA_TRIG_POLARITY_MASKED"/> 
                <MethodArg Name="TriggerSelection" FValue="0x00000000U"/> 
                <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH1"/>
                <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_GPDMACH1"/>

                <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH1"/> <!-- <GPDMA only-->
                <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH1"/> <!-- <GPDMA only-->
                
                <MethodArg Name="LinkAllocatedPort" FValue="LL_DMA_LINK_ALLOCATED_PORT1"/>
                <MethodArg Name="LinkStepMode" FValue="LL_DMA_LSM_FULL_EXECUTION"/>

                  <MethodArg Name="LinkedListBaseAddr" FValue="0x00000000U"/>
                  <MethodArg Name="LinkedListAddrOffset" FValue="0x00000000U"/> 
               
           
   </CallLibMethod>
    </IFCondition>
    
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH1 &amp; (DATAEXCHANGE_GPDMACH1=DMA_EXCHANGE_DEST_BYTE)">
    <CallLibMethod Name="LL_DMA_SetDestByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH1 &amp; (DATAEXCHANGE_GPDMACH1=DMA_EXCHANGE_DEST_HALFWORD)">
    <CallLibMethod Name="L_DMA_SetDestHWordExchange">
           <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

     <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH1 &amp; (DATAEXCHANGE_GPDMACH1=DMA_EXCHANGE_SRC_BYTE)">
    <CallLibMethod Name="LL_DMA_SetSrcByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH1 &amp; !(DATAALIGNEMENT_GPDMACH1=DMA_DATA_RIGHTALIGN_ZEROPADDED)">
    <CallLibMethod Name="LL_DMA_SetDataAlignment">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH1"/> 
    </CallLibMethod>
   </IFCondition>
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH1 &amp; !SEM_NOTRIG_$IpInstanceCH1">
    <CallLibMethod Name="LL_DMA_SetTriggerMode">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH1"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetTriggerPolarity">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH1"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetHWTrigger">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="Trigger" ParameterName="TRIGGERSELECTION_GPDMACH1"/> 
    </CallLibMethod>
    </IFCondition>
   



<IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH1 &amp; SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH1"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" ParameterName="DestSEC_GPDMACH1"/> 
        <MethodArg Name="SrcSecure" ParameterName="SrcSEC_GPDMACH1"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH1"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH1"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH1"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH1"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH1"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH1"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH1"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH1"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH1"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH1"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH1"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH1"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH1"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH1"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH1"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH1"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH1"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH1"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH1"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH1"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH1"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH1"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH1"/> 
      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH1"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH1"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH1"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH1"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH1"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH1"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH1"/>
     </CallLibMethod>
      
   </IFCondition>  
   <IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH1 &amp; !SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH1"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" FValue="__NULL"/> 
        <MethodArg Name="SrcSecure" FValue="__NULL"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH1"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH1"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH1"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH1"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH1"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH1"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH1"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH1"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH1"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH1"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH1"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH1"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH1"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH1"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH1"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH1"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH1"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH1"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH1"/>
            
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH1"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH1"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH1"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH1"/> 

      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH1"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH1"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH1"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
        
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH1"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH1"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH1"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH1"/> 
     </CallLibMethod>
   </IFCondition>  

</RefConfig>

  
<!-- init for simple request circular or linear GPDMA_CH1 END -->






<!-- init for LinkedList GPDMA_CH1 BEGIN -->

<RefConfig Name="Init_LL_GPDMACH1">
      <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_GPDMACH1"/> 
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_GPDMACH1"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_GPDMACH1"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_GPDMACH1"/> 
     </CallLibMethod>

      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH1=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH1=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH1=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH1=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_1"/>
    </CallLibMethod>
     </IFCondition>
    
</RefConfig>

<!-- init for LinkedList GPDMA_CH1 END -->

<!-- GPDMA$Index CHANNEL 0-->

<RefConfig Name="Init_GPDMACH0">
    <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH0=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH0=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH0=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH0=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH0=DMA_CHANNEL_SRC_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH0">
    <CallLibMethod Name="LL_DMA_EnableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (SrcSEC_GPDMACH0=DMA_CHANNEL_SRC_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH0">
    <CallLibMethod Name="LL_DMA_DisableChannelSrcSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH0=DMA_CHANNEL_DEST_SEC) &amp; !SEM_CIRCULAR_$IpInstanceCH0">
    <CallLibMethod Name="LL_DMA_EnableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (DestSEC_GPDMACH0=DMA_CHANNEL_DEST_NSEC) &amp; !SEM_CIRCULAR_$IpInstanceCH0">
    <CallLibMethod Name="LL_DMA_DisableChannelDestSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH0">
    <CallLibMethod Name="LL_DMA_Init">
                <MethodArg Name="Instance" FValue="GPDMA$Index"/>
                <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
                <MethodArg Name="SrcAddress" FValue="0x00000000U"/><!--dynamic -->
                <MethodArg Name="DestAddress" FValue="0x00000000U"/> <!--dynamic -->
                <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH0"/>
                <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH0"/>
                <MethodArg Name="DataAlignment" FValue="LL_DMA_DATA_ALIGN_ZEROPADD"/>
                <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH0"/> <!-- <GPDMA only-->
                <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH0"/><!-- <GPDMA only-->
                <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH0"/>
                <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH0"/>
                <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH0"/>
                <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH0"/>
                <MethodArg Name="Priority" ParameterName="PRIORITY_GPDMACH0"/>
                 <MethodArg Name="BlkDataLength" FValue="0x00000000U"/> <!--dynamic-->

                <MethodArg Name="TriggerMode" FValue="LL_DMA_TRIGM_BLK_TRANSFER"/>
                <MethodArg Name="TriggerPolarity" FValue="LL_DMA_TRIG_POLARITY_MASKED"/> 
                <MethodArg Name="TriggerSelection" FValue="0x00000000U"/> 
                <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH0"/>
                <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_GPDMACH0"/>

                <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH0"/> <!-- <GPDMA only-->
                <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH0"/> <!-- <GPDMA only-->
                
                <MethodArg Name="LinkAllocatedPort" FValue="LL_DMA_LINK_ALLOCATED_PORT1"/>
                <MethodArg Name="LinkStepMode" FValue="LL_DMA_LSM_FULL_EXECUTION"/>

                  <MethodArg Name="LinkedListBaseAddr" FValue="0x00000000U"/>
                  <MethodArg Name="LinkedListAddrOffset" FValue="0x00000000U"/> 
               
           
   </CallLibMethod>
    </IFCondition>
    
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH0 &amp; (DATAEXCHANGE_GPDMACH0=DMA_EXCHANGE_DEST_BYTE)">
    <CallLibMethod Name="LL_DMA_SetDestByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="DestByteExchange" FValue="LL_DMA_DEST_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH0 &amp; (DATAEXCHANGE_GPDMACH0=DMA_EXCHANGE_DEST_HALFWORD)">
    <CallLibMethod Name="L_DMA_SetDestHWordExchange">
           <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="DestHWordExchange" FValue="LL_DMA_DEST_HALFWORD_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

     <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH0 &amp; (DATAEXCHANGE_GPDMACH0=DMA_EXCHANGE_SRC_BYTE)">
    <CallLibMethod Name="LL_DMA_SetSrcByteExchange">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="SrcByteExchange" FValue="LL_DMA_SRC_BYTE_EXCHANGE"/> 
    </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH0 &amp; !(DATAALIGNEMENT_GPDMACH0=DMA_DATA_RIGHTALIGN_ZEROPADDED)">
    <CallLibMethod Name="LL_DMA_SetDataAlignment">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH0"/> 
    </CallLibMethod>
   </IFCondition>
    
    <IFCondition Expression = "!SEM_CIRCULAR_$IpInstanceCH0 &amp; !SEM_NOTRIG_$IpInstanceCH0">
    <CallLibMethod Name="LL_DMA_SetTriggerMode">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH0"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetTriggerPolarity">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH0"/> 
    </CallLibMethod>
     <CallLibMethod Name="LL_DMA_SetHWTrigger">
          <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="Trigger" ParameterName="TRIGGERSELECTION_GPDMACH0"/> 
    </CallLibMethod>
    </IFCondition>
   



<IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH0 &amp; SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH0"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" ParameterName="DestSEC_GPDMACH0"/> 
        <MethodArg Name="SrcSecure" ParameterName="SrcSEC_GPDMACH0"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH0"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH0"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH0"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH0"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH0"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH0"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH0"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH0"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH0"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH0"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH0"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH0"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH0"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH0"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH0"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH0"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH0"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH0"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH0"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH0"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH0"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH0"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH0"/> 
      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH0"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH0"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH0"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH0"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH0"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH0"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH0"/> 
     </CallLibMethod>
      
   </IFCondition>  
   <IFCondition Expression = "SEM_CIRCULAR_$IpInstanceCH0 &amp; !SEM_M33S">
     <CallLibMethod Name="LL_DMA_CreateLinkNode">
       <MethodArg Name="pNode" ParameterName="pNode_GPDMACH0"/>
        <MethodArg Name="DMA_InitNodeStruct" ParameterName="nodeconfig"/> 
        <MethodArg Name="DestSecure" FValue="__NULL"/> 
        <MethodArg Name="SrcSecure" FValue="__NULL"/> 
         <MethodArg Name="DestAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTDEST_GPDMACH0"/> 
       
        <MethodArg Name="DestHWordExchange" ParameterName="DATAEXCHANGE_GPDMACH0"/> 
        <MethodArg Name="DestByteExchange" ParameterName="DATAEXCHANGE_GPDMACH0"/>


        <MethodArg Name="DestBurstLength" ParameterName="DESTBURSTLENGTH_GPDMACH0"/>
        <MethodArg Name="DestIncMode" ParameterName="DESTINC_GPDMACH0"/>
        <MethodArg Name="DestDataWidth" ParameterName="DESTDATAWIDTH_GPDMACH0"/>
           <MethodArg Name="SrcAllocatedPort" ParameterName="TRANSFERALLOCATEDPORTSRC_GPDMACH0"/> 
       <MethodArg Name="SrcByteExchange" ParameterName="DATAEXCHANGE_GPDMACH0"/>
           <MethodArg Name="DataAlignment" ParameterName="DATAALIGNEMENT_GPDMACH0"/>  
             <MethodArg Name="SrcBurstLength" ParameterName="SRCBURSTLENGTH_GPDMACH0"/>
            <MethodArg Name="SrcIncMode" ParameterName="SRCINC_GPDMACH0"/>
            <MethodArg Name="SrcDataWidth" ParameterName="SRCDATAWIDTH_GPDMACH0"/>
           <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH0"/>
            <MethodArg Name="TriggerPolarity" ParameterName="TRIGGERPOLARITY_GPDMACH0"/> 
            <MethodArg Name="TriggerSelection" ParameterName="TRIGGERSELECTION_GPDMACH0"/> 
            <MethodArg Name="TriggerMode" ParameterName="TRIGGERMODE_GPDMACH0"/>
            <MethodArg Name="BlkHWRequest" ParameterName="BLKHWREQUEST_GPDMACH0"/>
            <MethodArg Name="Direction" ParameterName="DIRECTION_GPDMACH0"/>
            <MethodArg Name="Request" ParameterName="REQUEST_GPDMACH0"/>
           
            
            <MethodArg Name="SrcAddress"  ParameterName="SRCADD_GPDMACH0"/> 
            <MethodArg Name="DestAddress"  ParameterName="DSTADD_GPDMACH0"/> 
            <MethodArg Name="BlkDataLength"  ParameterName="DATASIZE_GPDMACH0"/> 
            
            <MethodArg Name="UpdateRegisters" FValue="(LL_DMA_UPDATE_CTR1 | LL_DMA_UPDATE_CTR2 | LL_DMA_UPDATE_CBR1 | LL_DMA_UPDATE_CSAR | LL_DMA_UPDATE_CDAR | LL_DMA_UPDATE_CLLR)"/>
             <MethodArg Name="NodeType" ParameterName="NODETYPE_GPDMACH0"/> 

      </CallLibMethod>
       <CallLibMethod Name="LL_DMA_ConnectLinkNode">
        <MethodArg Name="pNode" ParameterName="pNode_GPDMACH0"/>
          <MethodArg Name="PrevNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
         <MethodArg Name="pNode" ParameterName="pNode_GPDMACH0"/>
          <MethodArg Name="NewNodeCLLRIdx" FValue="LL_DMA_CLLR_OFFSET5"/>
        </CallLibMethod>
        <CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t/* Next function call is commented because it will not compile as is. The Node structure address has to be cast to an unsigned int (uint32_t)pNode_DMAxCHy */#n#t/* "/>
        </CallLibMethod>

       <CallLibMethod Name="LL_DMA_SetLinkedListBaseAddr"> 
        <MethodArg Name="Instance" FValue="GPDMA$Index"/>
         <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
          <MethodArg Name="pNode" ParameterName="pNode_GPDMACH0"/>
        </CallLibMethod>
<CallLibMethod Name="" Type="HardCode">
           <HardCode Text="#n#t*/"/>
        </CallLibMethod>
        
       <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_CIRCULAR_GPDMACH0"/>  
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_CIRCULAR_GPDMACH0"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_CIRCULAR_GPDMACH0"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_CIRCULAR_GPDMACH0"/> 
     </CallLibMethod>
   </IFCondition>  

</RefConfig>

  
<!-- init for simple request circular or linear GPDMA_CH0 END -->






<!-- init for LinkedList GPDMA_CH0 BEGIN -->

<RefConfig Name="Init_LL_GPDMACH0">
      <CallLibMethod Name="LL_DMA_List_Init"> 
            <MethodArg Name="Instance" FValue="GPDMA$Index"/>
            <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
            <MethodArg Name="Priority" ParameterName="PRIORITY_LL_GPDMACH0"/> 
        <MethodArg Name="LinkStepMode" ParameterName="LINKSTEPMODE_GPDMACH0"/> 
        <MethodArg Name="LinkAllocatedPort" ParameterName="LINKALLOCATEDPORT_GPDMACH0"/> 
        <MethodArg Name="TransferEventMode" ParameterName="TRANSFEREVENTMODE_LL_GPDMACH0"/> 
     </CallLibMethod>

      <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH0=DMA_CHANNEL_SEC)">
    <CallLibMethod Name="LL_DMA_EnableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; SEM_M33S &amp; (ChannelSEC_GPDMACH0=DMA_CHANNEL_NSEC)">
    <CallLibMethod Name="LL_DMA_DisableChannelSecure">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH0=DMA_CHANNEL_PRIV)">
    <CallLibMethod Name="LL_DMA_EnableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE  &amp; (ChannelPRIV_GPDMACH0=DMA_CHANNEL_NPRIV)">
    <CallLibMethod Name="LL_DMA_DisableChannelPrivilege">
                 <MethodArg Name="Instance" FValue="GPDMA$Index"/>
           <MethodArg Name="Channel" FValue="LL_DMA_CHANNEL_0"/>
    </CallLibMethod>
     </IFCondition>
    
</RefConfig>

<!-- init for LinkedList GPDMA_CH0 END -->







<LibMethod Comment="" Name="LL_DMA_Init">
                <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
                <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
                <Argument Comment="" AddressOf="true" GenericType="struct" Name="DMA_InitStruct" TypeName="LL_DMA_InitTypeDef">

  				<Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAddress"/><!-- dynamic param-->
  				<Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAddress"/><!-- dynamic param-->

  				 <Argument Comment="" AddressOf="false" GenericType="simple" Name="Direction"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkHWRequest"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="DataAlignment"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcBurstLength"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestBurstLength"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcDataWidth"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestDataWidth"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcIncMode"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestIncMode"/>
                 <Argument Comment="" AddressOf="false" GenericType="simple" Name="Priority"/>

				<Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkDataLength"/> <!--dynamic param -->
				<Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptCount"/>

				  <Argument Comment="" AddressOf="false" GenericType="simple" Name="TriggerMode"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="TriggerSelection"/>


                   <Argument Comment="" AddressOf="false" GenericType="simple" Name="Request"/>
                   <Argument Comment="" AddressOf="false" GenericType="simple" Name="TransferEventMode"/>
                   <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestHWordExchange"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcByteExchange"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestByteExchange"/>
                 
                  
                 
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAllocatedPort"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAllocatedPort"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="LinkAllocatedPort"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="LinkStepMode"/>
                  
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAddrUpdateMode"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAddrUpdateMode"/>
				  <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAddrOffset"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAddrOffset"/>
                  
 				  <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptSrcAddrUpdateMode"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptDestAddrUpdateMode"/>
				  <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptSrcAddrOffset"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptDestAddrOffset"/>
                   
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="LinkedListBaseAddr"/>
                  <Argument Comment="" AddressOf="false" GenericType="simple" Name="LinkedListAddrOffset"/>


              </Argument>
        
    </LibMethod>

    <LibMethod Comment="" Name="LL_DMA_SetSrcByteExchange">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcByteExchange"/>
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_SetDestByteExchange">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestByteExchange"/>
    </LibMethod>

    <LibMethod Comment="" Name="L_DMA_SetDestHWordExchange">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestHWordExchange"/>
    </LibMethod>

     <LibMethod Comment="" Name="LL_DMA_SetDataAlignment">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DataAlignment"/>
    </LibMethod>
 

 <LibMethod Comment="" Name="LL_DMA_SetDataAlignment">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DataAlignment"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_DMA_SetTriggerMode">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="TriggerMode"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_DMA_SetTriggerPolarity">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_SetHWTrigger">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Trigger"/>
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_SetBlkRptCount">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptCount"/>
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_SetSrcAddrUpdateValue">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAddrOffset"/>
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_SetDestAddrUpdateValue">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAddrOffset"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_DMA_SetSrcAddrUpdate">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAddrUpdateMode"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_DMA_SetDestAddrUpdate">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAddrUpdateMode"/>
    </LibMethod>

     <LibMethod Comment="" Name="LL_DMA_SetBlkRptSrcAddrUpdateValue">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptSrcAddrOffset"/>
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_SetBlkRptDestAddrUpdateValue">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptDestAddrOffset"/>
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_SetBlkRptSrcAddrUpdate">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptSrcAddrUpdateMode"/>
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_SetBlkRptDestAddrUpdate">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptDestAddrUpdateMode"/>
    </LibMethod>



     <LibMethod Comment="" Name="LL_DMA_CreateLinkNode">
      
       <Argument Comment="" AddressOf="true" GenericType="struct" Name="DMA_InitNodeStruct" TypeName="LL_DMA_InitNodeTypeDef">
       	
       	<Argument Comment="" AddressOf="false" GenericType="simple" Name="DestSecure"/>
       	<Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcSecure"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAllocatedPort"/>
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestHWordExchange"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestByteExchange"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestBurstLength"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestIncMode"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestDataWidth"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAllocatedPort"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcByteExchange"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DataAlignment"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcBurstLength"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcIncMode"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcDataWidth"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="TransferEventMode"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="TriggerMode"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkHWRequest"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Direction"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Request"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptDestAddrUpdateMode"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptSrcAddrUpdateMode"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAddrUpdateMode"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAddrUpdateMode"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptCount"/>
           <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkDataLength"/>
          
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAddress"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAddress"/> 
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkDataLength"/>   
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="DestAddrOffset"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="SrcAddrOffset"/>   
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptDestAddrOffset"/>   
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="BlkRptSrcAddrOffset"/>
           <Argument Comment="" AddressOf="false" GenericType="simple" Name="UpdateRegisters"/>
           
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="NodeType"/>  
          
       </Argument>
         <Argument Comment="" AddressOf="true" GenericType="struct" Name="pNode" TypeName="LL_DMA_LinkNodeTypeDef" Context="global" Optional="output">
       <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
       </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="LL_DMA_ConnectLinkNode">
    	  <Argument Comment="" AddressOf="true" GenericType="struct" Name="pNode" TypeName="LL_DMA_LinkNodeTypeDef" Context="global" Optional="output">
       <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
       </Argument>
       <Argument Comment="" AddressOf="false" GenericType="simple" Name="PrevNodeCLLRIdx"/> 
        <Argument Comment="" AddressOf="true" GenericType="struct" Name="pNode" TypeName="LL_DMA_LinkNodeTypeDef" Context="global" Optional="output">
       <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
       </Argument>
       <Argument Comment="" AddressOf="false" GenericType="simple" Name="NewNodeCLLRIdx"/>
     </LibMethod>

     <LibMethod Comment="" Name="LL_DMA_SetLinkedListBaseAddr">
      <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
        <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
         <Argument Comment="" AddressOf="true" GenericType="struct" Name="pNode" TypeName="LL_DMA_LinkNodeTypeDef" Context="global" Optional="output" Cast="(uint32_t)">
       <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
       </Argument>
      
    </LibMethod>

 	<LibMethod Comment="" Name="LL_DMA_EnableChannelDestSecure">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
    </LibMethod>
    <LibMethod Comment="" Name="LL_DMA_EnableChannelSrcSecure">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_EnableChannelSecure">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_EnableChannelPrivilege">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
    </LibMethod>
    <LibMethod Comment="" Name="LL_DMA_DisableChannelDestSecure">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
    </LibMethod>
    <LibMethod Comment="" Name="LL_DMA_DisableChannelSrcSecure">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_DisableChannelSecure">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
    </LibMethod>
     <LibMethod Comment="" Name="LL_DMA_DisableChannelPrivilege">
          <Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
          <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
    </LibMethod>
    

    <LibMethod Comment="" Name="LL_DMA_List_Init">
    	<Argument Comment="" AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="DMA_TypeDef *"/>
        <Argument Comment="" AddressOf="false" GenericType="simple" Name="Channel"/> 
       <Argument Comment="" AddressOf="true" GenericType="struct" Name="DMA_InitLinkedListStruct" TypeName="LL_DMA_InitLinkedListTypeDef">
       	<Argument Comment="" AddressOf="false" GenericType="simple" Name="Priority"/>
       		<Argument Comment="" AddressOf="false" GenericType="simple" Name="LinkStepMode"/>
       	<Argument Comment="" AddressOf="false" GenericType="simple" Name="LinkAllocatedPort"/>
       	<Argument Comment="" AddressOf="false" GenericType="simple" Name="TransferEventMode"/>
       </Argument>
    </LibMethod>



 
    <RefComponent Cclass="HAL" Cgroup="DMA" Cversion="0.6.0">
        <File Category="header" Name="Drivers/STM32WBAxx_HAL_Driver/Inc/stm32wbaxx_ll_dma.h"/>
        <File Category="source" Name="Drivers/STM32WBAxx_HAL_Driver/Src/stm32wbaxx_ll_dma.c"/>
    </RefComponent>

 </IP>
