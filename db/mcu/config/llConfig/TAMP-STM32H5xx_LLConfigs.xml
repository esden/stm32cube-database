<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="TAMP" Version="STM32Cube_FW_H5_V0.2.0" IncludeFile="stm32h5xx_ll_rtc.h" 
    xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">
    
   
    <!-- ****************************** CommON TAMP ************************************** -->
    <RefConfig Name="TAMP_Init">
        
       <IFCondition Expression ="(S_SECURE  &amp; (SEM_M33S)) " >
        <CallLibMethod Name="LL_RTC_SetTampSecure">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="tampSecure" ParameterName="tampSecureFull"/>
        </CallLibMethod>
          <CallLibMethod Name="LL_RTC_IncrementMonotonicCounter">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
        </CallLibMethod>   
        <CallLibMethod Name="LL_RTC_SetTampPrivilege">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="tampPrivilege" ParameterName="tampPrivilegeFull"/>
         </CallLibMethod>                     
        </IFCondition>
         <IFCondition Expression ="!S_SECURE" >
        
        <CallLibMethod Name="LL_RTC_SetTampPrivilege">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="tampPrivilege" ParameterName="tampPrivilegeFull"/>
         </CallLibMethod> 
          <CallLibMethod Name="LL_RTC_IncrementMonotonicCounter">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
        </CallLibMethod>                    
        </IFCondition>
           
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES))  ">

            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetOutputChangePeriod">
                <MethodArg Name="ActiveOutputChangePeriod" ParameterName="ActiveOutputChangePeriod"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetAsyncPrescaler">
                <MethodArg Name="ActiveAsynvPrescaler" ParameterName="ActiveAsyncPrescaler"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
             <IFCondition Expression="(TamperPullUp=RTC_TAMPER_PULLUP_ENABLE)">
            <CallLibMethod Name="LL_RTC_TAMPER_EnablePullUp">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
        </IFCondition> 
            
        
           
       
       
               <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_DISABLE)">
                <CallLibMethod Name="LL_RTC_TS_DisableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>	
           
            
        </IFCondition>
       
          
        
         

         <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">

             <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                 <MethodArg Name="RTCx" ParameterName="Instance"/>
                 <MethodArg Name="Filter" ParameterName="Filter"/>
             </CallLibMethod>
             <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetOutputChangePeriod">
                <MethodArg Name="ActiveOutputChangePeriod" ParameterName="ActiveOutputChangePeriod"/>
            </CallLibMethod>
              <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetAsyncPrescaler">
                       <MethodArg Name="ActiveAsynvPrescaler" ParameterName="ActiveAsyncPrescaler"/>

            </CallLibMethod>
             <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
		
             <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                 <MethodArg Name="RTCx" ParameterName="Instance"/>
                 <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
             </CallLibMethod>
            
                     <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
		
             <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                 <MethodArg Name="RTCx" ParameterName="Instance"/>
                 <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
             </CallLibMethod>
             <IFCondition Expression="(TamperPullUp=RTC_TAMPER_PULLUP_ENABLE)">
                 <CallLibMethod Name="LL_RTC_TAMPER_EnablePullUp">
                     <MethodArg Name="RTCx" ParameterName="Instance"/>
                 </CallLibMethod>
             </IFCondition>
            
        
             <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_DISABLE)">
                 <CallLibMethod Name="LL_RTC_TS_DisableOnTamper">
                     <MethodArg Name="RTCx" ParameterName="Instance"/>
                 </CallLibMethod>
                 
             </IFCondition>	
           
         </IFCondition>
                 <IFCondition Expression ="(!S_SECURE)">

                <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Filter" ParameterName="Filter"/>
                </CallLibMethod>
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetOutputChangePeriod">
                <MethodArg Name="ActiveOutputChangePeriod" ParameterName="ActiveOutputChangePeriod"/>
            </CallLibMethod>
		<IFCondition Expression="(TamperPullUp=RTC_TAMPER_PULLUP_ENABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition> 
             <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetAsyncPrescaler">
                <MethodArg Name="ActiveAsynvPrescaler" ParameterName="ActiveAsyncPrescaler"/>
            </CallLibMethod>
                <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
                </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
                <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
                </CallLibMethod>
               
            </IFCondition>
        
    </RefConfig>
    <RefConfig Name="RTC_SetTamper_1" Comment="Enable the RTC Tamper 1">
       
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES))  ">
            <IFCondition Expression ="Enable1=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
             <IFCondition Expression ="Enable1=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_1"/>
            </CallLibMethod>
            
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output1"/>
            </CallLibMethod>
            
                
            <IFCondition Expression="NoErase_1 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
                </CallLibMethod>
            </IFCondition>
          	
            <IFCondition Expression="NoErase_1 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
                </CallLibMethod>
            </IFCondition>
            
            <IFCondition Expression="MaskFlag_1 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>
                </CallLibMethod>
            </IFCondition>
              
            <IFCondition Expression="MaskFlag_1 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>

                </CallLibMethod>
            </IFCondition>
           
                 
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>       
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>       
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>    
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
         
        
        </IFCondition>
        
        <IFCondition Expression ="(!S_SECURE) ">

            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_1"/>
            </CallLibMethod>
        
      <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output1"/>
            </CallLibMethod>
                
            <IFCondition Expression="NoErase_1 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
                </CallLibMethod>
            </IFCondition>
          	
            <IFCondition Expression="NoErase_1 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
                </CallLibMethod>
            </IFCondition>
            
            <IFCondition Expression="MaskFlag_1 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>
                </CallLibMethod>
            </IFCondition>
              
            <IFCondition Expression="MaskFlag_1 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>

                </CallLibMethod>
            </IFCondition>
                
           
                
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>       
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>       
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>    
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
         
             <IFCondition Expression ="Enable1=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
             <IFCondition Expression ="Enable1=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
           <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">

            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_1"/>
            </CallLibMethod>
        
      <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output1"/>
            </CallLibMethod>
                
            <IFCondition Expression="NoErase_1 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
                </CallLibMethod>
            </IFCondition>
          	
            <IFCondition Expression="NoErase_1 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
                </CallLibMethod>
            </IFCondition>
            
            <IFCondition Expression="MaskFlag_1 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>
                </CallLibMethod>
            </IFCondition>
              
            <IFCondition Expression="MaskFlag_1 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>

                </CallLibMethod>
            </IFCondition>
                
           
              
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>       
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>       
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>    
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
           
             <IFCondition Expression ="Enable1=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
             <IFCondition Expression ="Enable1=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        
    </RefConfig>
    <RefConfig Name="RTC_SetTamper_1_IT" Comment="Enable the RTC Tamper 1">
       
        <IFCondition Expression ="(!S_SECURE )">
           <IFCondition Expression ="Enable1=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
             <IFCondition Expression ="Enable1=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP1">
     
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_1"/>
            </CallLibMethod>
       <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output1"/>
            </CallLibMethod>
           
                
            <IFCondition Expression="NoErase_1 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
                </CallLibMethod>
            </IFCondition>
          	
            <IFCondition Expression="NoErase_1 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
                </CallLibMethod>
            </IFCondition>
            
            <IFCondition Expression="MaskFlag_1 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>
                </CallLibMethod>
            </IFCondition>
              
            <IFCondition Expression="MaskFlag_1 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>

                </CallLibMethod>
            </IFCondition>
                
            <!--CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod-->
                
                
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>       
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>       
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>    
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression ="Enable1=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Enable1"  ParameterName="Tamper"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable1=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) ">
            <IFCondition Expression ="Enable1=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable1=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output1"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
            </CallLibMethod>
                
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP1">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
	
           
          
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
          
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP1">
                <MethodArg Name="TAMPx"  FValue="TAMP"/>
            </CallLibMethod>
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
                
            </IFCondition>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable1=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable1=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable1"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output1"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Mask" ParameterName="MaskFlag_1"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="NoErase_1"/>
            </CallLibMethod>
                
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP1">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
	
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
		
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_1 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_1"/>
                </CallLibMethod>
                <CallLibMethod Name="LL_RTC_EnableIT_TAMP1">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
       
    </RefConfig>
	
    <!-- ****************************** TAMPER 2 ************************************** -->
    <RefConfig Name="RTC_SetTamper_2" Comment="Enable the RTC Tamper 2">
       

        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable2=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable2"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable2=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable2"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
      
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
             <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_2 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_2"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_2 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_2"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_2 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_2"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_2 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_2"/>

                </CallLibMethod>
            </IFCondition>
		
	
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
         
          
            <IFCondition Expression="(Trigger_2 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_2"/>
                </CallLibMethod>
            </IFCondition>
           
            <IFCondition Expression="(Trigger_2 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_2"/>
                </CallLibMethod>
            </IFCondition>
           
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable2=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable2"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable2=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable2"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
      
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
             <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_2 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_2"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_2 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_2"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_2 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_2"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_2 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_2"/>

                </CallLibMethod>
            </IFCondition>
		
	
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(Trigger_2 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_2"/>
                </CallLibMethod>
            </IFCondition>
           
            <IFCondition Expression="(Trigger_2 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_2"/>
                </CallLibMethod>
            </IFCondition>
           
        </IFCondition>
      
        
    </RefConfig>
	
    <RefConfig Name="RTC_SetTamper_2_IT" Comment="Enable the RTC Tamper 2">
        
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable2=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable2"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable2=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable2"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP2">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_2 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_2"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_2 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_2"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_2 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_2"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_2 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_2"/>

                </CallLibMethod>
            </IFCondition>
	
           
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
         
            <IFCondition Expression="(Trigger_2 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_2"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_2 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_2"/>
                </CallLibMethod>
            </IFCondition>
           
        </IFCondition>

        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable2=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable2"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable2=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable2"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP2">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
      
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
             <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_2 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_2"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_2 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_2"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_2 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_2"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_2 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_2"/>

                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(Trigger_2 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_2"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_2 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_2"/>
                </CallLibMethod>
            </IFCondition>
           
        </IFCondition>
       
    </RefConfig>
	
	
    <!-- ****************************** TAMPER 3 ************************************** -->
    <RefConfig Name="RTC_SetTamper_3" Comment="Enable the RTC Tamper 3">
       
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable3=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable3=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
             
            <IFCondition  Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>

                </CallLibMethod>
            </IFCondition>
		
           
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable3=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable3=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
       <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
            
            <IFCondition  Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>

                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            
		
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable3=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable3=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
       <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
            
            <IFCondition  Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>

                </CallLibMethod>
            </IFCondition>
	
           
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
       
    </RefConfig>

    <RefConfig Name="RTC_SetTamper_3_IT" Comment="Enable the RTC Tamper 3">
       
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable3=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable3=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP3">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
            
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
       <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
           
            <IFCondition  Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>

                </CallLibMethod>
            </IFCondition>
	
            
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable3=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable3=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable3"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP3">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
           
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
       <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
            
            <IFCondition  Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_3 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_3"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_3 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_3"/>

                </CallLibMethod>
            </IFCondition>
	
           
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
		
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_3 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_3"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        
    </RefConfig>

    <!-- ****************************** TAMPER 4 ************************************** -->
    <RefConfig Name="RTC_SetTamper_4" Comment="Enable the RTC Tamper 4">
        
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable4=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable4"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable4=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable4"/>
                </CallLibMethod>
            </IFCondition>
            
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_4"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output4"/>
            </CallLibMethod>
           
            <IFCondition Expression="NoErase_4=RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_4"/>
                </CallLibMethod>
            </IFCondition>
                
          
            <IFCondition Expression="NoErase_4=RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_4"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="MaskFlag_4 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_4"/>
                </CallLibMethod>
            </IFCondition>
                
          
            <IFCondition Expression="MaskFlag_4 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_4"/>

                </CallLibMethod>
            </IFCondition>
                
                
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
                
         
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_4 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_4"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_4 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_4"/>
                </CallLibMethod>
            </IFCondition>
               
                
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
           
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
 
            <IFCondition Expression ="Enable4=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable4"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable4=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable4"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_4"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output4"/>
            </CallLibMethod>
           
                
            <IFCondition Expression="NoErase_4 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_4"/>
                </CallLibMethod>
            </IFCondition>
                
           
            <IFCondition Expression="NoErase_4 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_4"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="MaskFlag_4 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_4"/>
                </CallLibMethod>
            </IFCondition>
          
            <IFCondition Expression="MaskFlag_4 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_4"/>

                </CallLibMethod>
            </IFCondition>
                
                
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
        
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_4 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_4"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_4 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_4"/>
                </CallLibMethod>
            </IFCondition>
               
                
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
          
        </IFCondition>
        
		
    </RefConfig>
	
    <RefConfig Name="RTC_SetTamper_4_IT" Comment="Enable the RTC Tamper 4">
        
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable4=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable4"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable4=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable4"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP4">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_4"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output4"/>
            </CallLibMethod>
           
            <IFCondition Expression="NoErase_4=RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_4"/>
                </CallLibMethod>
            </IFCondition>
             
            <IFCondition Expression="NoErase_4=RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_4"/>
                </CallLibMethod>
            </IFCondition>
                
                        
            <IFCondition Expression="MaskFlag_4 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_4"/>
                </CallLibMethod>
            </IFCondition>
                
          
            <IFCondition Expression="MaskFlag_4 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_4"/>

                </CallLibMethod>
            </IFCondition>
                
                
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
         
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_4 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_4"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_4 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_4"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP4">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
                
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable4=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable4"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable4=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable4"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_4"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output4"/>
            </CallLibMethod>
           
                
            <IFCondition Expression="NoErase_4=RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_4"/>
                </CallLibMethod>
            </IFCondition>
           
            <IFCondition Expression="NoErase_4=RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_4"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression="MaskFlag_4 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_4"/>
                </CallLibMethod>
            </IFCondition>
            
            <IFCondition Expression="MaskFlag_4 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_4"/>

                </CallLibMethod>
            </IFCondition>
                
                
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
		
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
                
          
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_4 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_4"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_4 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_4"/>
                </CallLibMethod>
            </IFCondition>
               
                
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP4">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
            
        </IFCondition>
		
     
    </RefConfig>
    <!-- ****************************** TAMPER 5 ************************************** -->
    <RefConfig Name="RTC_SetTamper_5" Comment="Enable the RTC Tamper 5">
      
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable5=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable5"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable5=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable5"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_5"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output5"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_5 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_5"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_5 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_5"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_5 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_5"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_5 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_5"/>

                </CallLibMethod>
            </IFCondition>
	
           
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(Trigger_5 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_5"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_5 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_5"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable5=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable5"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable5=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable5"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_5"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output5"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_5 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_5"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_5 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_5"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_5 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_5"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_5 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_5"/>

                </CallLibMethod>
            </IFCondition>
	
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
           
            <IFCondition Expression="(Trigger_5 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_5"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_5 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_5"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>

    </RefConfig>
	
    <RefConfig Name="RTC_SetTamper_5_IT" Comment="Enable the RTC Tamper 5">
      
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable5=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable5"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable5=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable5"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_5"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output5"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_5 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_5"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_5 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_5"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_5 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_5"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_5 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_5"/>

                </CallLibMethod>
            </IFCondition>
	
         
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
         
		
            <IFCondition Expression="(Trigger_5 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_5"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_5 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_5"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP5">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable5=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable5"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable5=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable5"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_5"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output5"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_5 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_5"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_5 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_5"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_5 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_5"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_5 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_5"/>

                </CallLibMethod>
            </IFCondition>
	
                
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP5">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
		
            <IFCondition Expression="(Trigger_5 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_5"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_5 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_5"/>
                </CallLibMethod>
            </IFCondition>
          
        </IFCondition>

    </RefConfig>
    <!-- ****************************** TAMPER 6 ************************************** -->
    <RefConfig Name="RTC_SetTamper_6" Comment="Enable the RTC Tamper 6">
        
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable6=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable6"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable6=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable6"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_6"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output6"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
          
          
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
           
            <IFCondition  Expression="NoErase_6 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_6"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_6 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_6"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_6 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_6"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_6 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_6"/>

                </CallLibMethod>
            </IFCondition>
	
         
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
           
            
            <IFCondition Expression="(Trigger_6 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_6"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_6 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_6"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">

            <IFCondition Expression ="Enable6=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable6"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable6=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable6"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_6"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output6"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
       
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
        
		
            <IFCondition  Expression="NoErase_6 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_6"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_6 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_6"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_6 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_6"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_6 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_6"/>

                </CallLibMethod>
            </IFCondition>
	
           
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
          
           
            <IFCondition Expression="(Trigger_6 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_6"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_6 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_6"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>

    </RefConfig>
	
    <RefConfig Name="RTC_SetTamper_6_IT" Comment="Enable the RTC Tamper 6">
       
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">

            <IFCondition Expression ="Enable6=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable6"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable6=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable6"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_6"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output6"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
           
            <IFCondition  Expression="NoErase_6 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_6"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_6 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_6"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_6 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_6"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_6 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_6"/>

                </CallLibMethod>
            </IFCondition>
	
                
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP6">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
            
           
            <IFCondition Expression="(Trigger_6 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_6"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_6 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_6"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">

            <IFCondition Expression ="Enable6=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable6"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable6=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable6"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_6"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output6"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
            
          
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
        
		
            <IFCondition  Expression="NoErase_6 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_6"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_6 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_6"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_6 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_6"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_6 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_6"/>

                </CallLibMethod>
            </IFCondition>
		
	
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP6">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
          
           
            <IFCondition Expression="(Trigger_6 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_6"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_6 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_6"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP6">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
        </IFCondition>

    </RefConfig>
    <!-- ****************************** TAMPER 7 ************************************** -->
    <RefConfig Name="RTC_SetTamper_7" Comment="Enable the RTC Tamper 7">
       
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable7=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable7"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable7=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable7"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_7"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output7"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_7 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_7"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_7 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_7"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_7 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_7"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_7 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_7"/>

                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
          
		
            <IFCondition Expression="(Trigger_7 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_7"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_7 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_7"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>

        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable7=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable7"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable7=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable7"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_7"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output7"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
       
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		
             <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
           
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_7 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_7"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_7 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_7"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_7 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_7"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_7 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_7"/>

                </CallLibMethod>
            </IFCondition>
		
	
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
         
            <IFCondition Expression="(Trigger_7 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_7"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_7 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_7"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
       
    </RefConfig>
	
    <RefConfig Name="RTC_SetTamper_7_IT" Comment="Enable the RTC Tamper 7">
      
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable7=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable7"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable7=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable7"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_7"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output7"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
         
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_7 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_7"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_7 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_7"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_7 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_7"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_7 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_7"/>

                </CallLibMethod>
            </IFCondition>
		
	
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP7">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(Trigger_7 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_7"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_7 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_7"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>

        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable7=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable7"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable7=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable7"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_7"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output7"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
       
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_7 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_7"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="NoErase_7 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_7"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_7 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_7"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_7 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_7"/>

                </CallLibMethod>
            </IFCondition>
	
      
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
          
            <IFCondition Expression="(Trigger_7 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_7"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP7">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
                
            <IFCondition Expression="(Trigger_7 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_7"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
       
    </RefConfig>
    <!-- ****************************** TAMPER 8 ************************************** -->
    <RefConfig Name="RTC_SetTamper_8" Comment="Enable the RTC Tamper 8">
       
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable8=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable8"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable8=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable8"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_8"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output8"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_8 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_8"/>
                </CallLibMethod>
            </IFCondition>
                
           
            <IFCondition Expression="NoErase_8 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_8"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_8 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_8"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_8 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_8"/>

                </CallLibMethod>
            </IFCondition>
		
	
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
           
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
	
            <IFCondition Expression="(Trigger_8 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_8"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_8 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_85"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>

        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable8=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable8"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable8=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable8"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_8"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output8"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
           
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_8 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_8"/>
                </CallLibMethod>
            </IFCondition>
                
       
            <IFCondition Expression="NoErase_8 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_8"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_8 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_8"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_8 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_8"/>

                </CallLibMethod>
            </IFCondition>
	
        
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
           
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
         
            <IFCondition Expression="(Trigger_8 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_8"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_8 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_85"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>
       
    </RefConfig>
	
    
    <RefConfig Name="RTC_SetTamper_8_IT" Comment="Enable the RTC Tamper 8">
       
        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33S &amp; (tampSecureFull=TAMP_SECURE_FULL_YES)) | (!S_SECURE) ">
            <IFCondition Expression ="Enable8=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable8"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable8=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable8"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_8"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output8"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
           
          
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_8 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_8"/>
                </CallLibMethod>
            </IFCondition>
                
            
            <IFCondition Expression="NoErase_8 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_8"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_8 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_8"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_8 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_8"/>

                </CallLibMethod>
            </IFCondition>
	
                
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP8">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
            
           
            <IFCondition Expression="(Trigger_8 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_8"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_8 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_85"/>
                </CallLibMethod>
            </IFCondition>
        </IFCondition>

        <IFCondition Expression ="(S_SECURE  &amp; SEM_M33NS &amp; (tampSecureFull=TAMP_SECURE_FULL_NO)) ">
            <IFCondition Expression ="Enable8=RTC_ATAMP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable8"/>
                </CallLibMethod>
            </IFCondition>
            <IFCondition Expression ="Enable8=RTC_ATAMP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
                    <MethodArg Name="Tamper"  ParameterName="Enable8"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_TAMPER_Enable">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Tamper" ParameterName="Tamper_8"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
                <MethodArg Name="OutputSelection" ParameterName="Output8"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetFilterCount">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="Filter" ParameterName="Filter"/>
            </CallLibMethod>
          
            <CallLibMethod Name="LL_RTC_TAMPER_SetPrecharge">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="PrechargeDuration" ParameterName="PrechargeDuration"/>
            </CallLibMethod>
		 <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size0"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size1"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size2"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
                <MethodArg Name="Seed"  ParameterName="Seed_Size3"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RTC_TAMPER_SetSamplingFreq">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
                <MethodArg Name="SamplingFrequency" ParameterName="SamplingFrequency"/>
            </CallLibMethod>
		
		
            <IFCondition  Expression="NoErase_8 = RTC_TAMPER_ERASE_BACKUP_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_8"/>
                </CallLibMethod>
            </IFCondition>
                
       
            <IFCondition Expression="NoErase_8 = RTC_TAMPER_ERASE_BACKUP_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableEraseBKP">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Tamper" ParameterName="NoErase_8"/>
                </CallLibMethod>
            </IFCondition>
		

            <IFCondition Expression="MaskFlag_8 = RTC_TAMPERMASK_FLAG_ENABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_8"/>
                </CallLibMethod>
            </IFCondition>
                
		
            <IFCondition Expression="MaskFlag_8 = RTC_TAMPERMASK_FLAG_DISABLE">
                <CallLibMethod Name="LL_RTC_TAMPER_DisableMask">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Mask" ParameterName="MaskFlag_8"/>

                </CallLibMethod>
            </IFCondition>
	
		
            <IFCondition Expression="(TamperPullUp = RTC_TAMPER_PULLUP_DISABLE)">
                <CallLibMethod Name="LL_RTC_TAMPER_DisablePullUp">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
           
            <IFCondition Expression="(TimeStampOnTamperDetection = RTC_TIMESTAMPONTAMPERDETECTION_ENABLE)">
                <CallLibMethod Name="LL_RTC_TS_EnableOnTamper">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                </CallLibMethod>
            </IFCondition>
		
           
            <IFCondition Expression="(Trigger_8 = RTC_TAMPERTRIGGER_FALLINGEDGE)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_8"/>
                </CallLibMethod>
            </IFCondition>
                
            <IFCondition Expression="(Trigger_8 = RTC_TAMPERTRIGGER_HIGHLEVEL)">
                <CallLibMethod Name="LL_RTC_TAMPER_EnableActiveLevel">
                    <MethodArg Name="RTCx" ParameterName="Instance"/>
                    <MethodArg Name="Trigger" ParameterName="Trigger_85"/>
                </CallLibMethod>
            </IFCondition>
            <CallLibMethod Name="LL_RTC_EnableIT_TAMP8">
                <MethodArg Name="RTCx" ParameterName="Instance"/>
            </CallLibMethod>
        </IFCondition>
      
    </RefConfig>
	

    <!-- TimeStamp -->
    <RefConfig Name="RTC_Timestamp" Comment="Enable the TimeStamp">

        <CallLibMethod Name="LL_RTC_TS_Enable">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
        </CallLibMethod>
		
        <CallLibMethod Name="LL_RTC_TS_SetActiveEdge">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
            <MethodArg Name="Edge" ParameterName="TimeStampEdge"/>
			
            <!-- MethodArg Name="RTC_TimeStampPin" ParameterName="TimeStampPin"/-->
        </CallLibMethod>




    </RefConfig>

    <RefConfig Name="RTC_Timestamp_IT" Comment="Enable the TimeStamp">
	
        <CallLibMethod Name="LL_RTC_TS_Enable">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
        </CallLibMethod>
		
        <CallLibMethod Name="LL_RTC_TS_SetActiveEdge">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
            <MethodArg Name="Edge" ParameterName="TimeStampEdge"/>
        </CallLibMethod>
		
        <CallLibMethod Name="LL_RTC_EnableIT_TS">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
        </CallLibMethod>
		
    </RefConfig>
	
	
    <!-- ****************************** WAKEUP ************************************** -->
    <RefConfig Name="RTC_WakeUp" Comment="Enable the WakeUp">

        <CallLibMethod Name="LL_RTC_WAKEUP_Enable">
            <MethodArg Name="RTCx" ParameterName="Instance"/>

        </CallLibMethod>
        
        <CallLibMethod Name="LL_RTC_SetAlarmOutEvent">
                    
            <MethodArg Name="RTCx" ParameterName="Instance"/>
            <MethodArg Name="AlarmOutput" ParameterName="OutPut"/>
                        
        </CallLibMethod>

        <CallLibMethod Name="LL_RTC_WAKEUP_SetClock">
                    
            <MethodArg Name="RTCx" ParameterName="Instance"/>
            <MethodArg Name="WakeUpClock" ParameterName="WakeUpClock"/>
        </CallLibMethod>
                
        <CallLibMethod Name="LL_RTC_WAKEUP_SetAutoReload">
                    
            <MethodArg Name="RTCx" ParameterName="Instance"/>
            <MethodArg Name="Tamper" ParameterName="WakeUpCounter"/>
                        
        </CallLibMethod>
                
		
    </RefConfig>
	
    <RefConfig Name="RTC_WakeUp_IT" Comment="Enable the WakeUp">
        <CallLibMethod Name="LL_RTC_WAKEUP_SetClock">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
            <MethodArg Name="WakeUpClock" ParameterName="WakeUpClock"/>
        </CallLibMethod>

    </RefConfig>      
	
    <!--Calibration -->
	 
    <RefConfig Name="RTC_Calibration" Comment="Enable Calibration">
        <CallLibMethod Name="LL_RTC_CAL_SetOutputFreq">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
            <MethodArg Name="Frequency" ParameterName="CalibOutput"/>
        </CallLibMethod>
    </RefConfig> 
	

    <!-- RefClock -->
    <RefConfig Name="RTC_RefClock" Comment="Enable the reference Clock input">
        <CallLibMethod Name="LL_RTC_EnableRefClock">
            <MethodArg Name="RTCx" ParameterName="Instance"/>
        </CallLibMethod>
    </RefConfig>
    
    

    <!-- Lib Methods -->
    <LibMethod Comment="" Name="LL_RTC_ALMA_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_Disable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Mask" OptimizationCondition="equal"/>
    </LibMethod>
   
    <LibMethod Comment="" Name="LL_RTC_GetAlarmOutEvent">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_EnableWeekday">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_DisableWeekday">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Day" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetWeekDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="WeekDay" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetWeekDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetTimeFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetTimeFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetMinute">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetMinute">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_ConfigTime">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Format12_24" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetTime">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetSubSecondMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Mask" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetSubSecondMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_SetSubSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Subsecond" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_GetSubSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_Disable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Mask" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_EnableWeekday">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_DisableWeekday">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Day" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetWeekDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="WeekDay" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetWeekDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetTimeFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetTimeFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetMinute">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetMinute">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_ConfigTime">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Format12_24" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetTime">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetSubSecondMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Mask" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetSubSecondMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_SetSubSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Subsecond" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_GetSubSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_CAL_SetOutputFreq">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Frequency" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_CAL_GetOutputFreq">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_CAL_SetPulse">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Pulse" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_CAL_IsPulseInserted">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_CAL_SetPeriod">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Period" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_CAL_GetPeriod">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_CAL_SetMinus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="CalibMinus" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_CAL_GetMinus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableOutRemap">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_SetHourFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="HourFormat" OptimizationCondition="equal"/>
    </LibMethod>
    
   
    <LibMethod Comment="" Name="LL_RTC_SetOutputPolarity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="OutPutPolarity" OptimizationCondition="equal"/>
    </LibMethod>
   
    <LibMethod Comment="" Name="LL_RTC_SetAlarmOutputType">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="OutPutType" OptimizationCondition="equal"/>
    </LibMethod>
   
    <LibMethod Comment="" Name="LL_RTC_GetHourFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
  
    <LibMethod Comment="" Name="LL_RTC_GetAlarmOutputType">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableInitMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DisableInitMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_SetOutputPolarity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="AlarmOutput" OptimizationCondition="equal"/>
    </LibMethod>
  
    <LibMethod Comment="" Name="LL_RTC_SetAlarmOutputType">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="AlarmOutput" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_GetOutputPolarity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableShadowRegBypass">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DisableShadowRegBypass">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsShadowRegBypassEnabled">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableRefClock">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DisableRefClock">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_SetAsynchPrescaler" Optimizable="true">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="AsynchPrescaler" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_SetSynchPrescaler" Optimizable="true">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="SynchPrescaler" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TAMPER_ATAMP_SetOutputChangePeriod" Optimizable="true">
        <Argument AddressOf="false" GenericType="simple" Name="ActiveOutputChangePeriod" OptimizationCondition="equal"/>
    </LibMethod>
  
    <LibMethod Comment="" Name="LL_RTC_GetAsynchPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_GetSynchPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableWriteProtection">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DisableWriteProtection">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableOutRemap">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DisableOutRemap">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_SetYear">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Year" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_GetYear">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_SetWeekDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="WeekDay" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_GetWeekDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_SetMonth">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Month" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_GetMonth">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_SetDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Day" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_GetDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_Config">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="WeekDay" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Day" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Month" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Year" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_Get">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_ITS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_RECALP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_TSOV">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_TS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_ALRB">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_ALRA">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ClearFlag_ITS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ClearFlag_TSOV">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ClearFlag_TS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ClearFlag_ALRB">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ClearFlag_ALRA">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_INIT">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_RS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ClearFlag_RS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_INITS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_SHP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_ALRBW">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsActiveFlag_ALRAW">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DeInit">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_Init" Optimizable="true">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="true" GenericType="struct" Name="RTC_InitStruct" TypeName="LL_RTC_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="HourFormat" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AsynchPrescaler" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="SynchPrescaler" OptimizationCondition="equal"/>
               
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_StructInit" Optimizable="true">
        <Argument AddressOf="true" GenericType="struct" Name="RTC_InitStruct" TypeName="LL_RTC_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="HourFormat" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AsynchPrescaler" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="SynchPrescaler" OptimizationCondition="equal"/>

            
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_Init" Optimizable="true">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="RTC_Format" OptimizationCondition="equal"/>
        <Argument AddressOf="true" GenericType="struct" Name="RTC_TimeStruct" TypeName="LL_RTC_TimeTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_StructInit" Optimizable="true">
        <Argument AddressOf="true" GenericType="struct" Name="RTC_TimeStruct" TypeName="LL_RTC_TimeTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_Init" Optimizable="true">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="RTC_Format" OptimizationCondition="equal"/>
        <Argument AddressOf="true" GenericType="struct" Name="RTC_DateStruct" TypeName="LL_RTC_DateTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="WeekDay" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Month" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Day" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Year" OptimizationCondition="equal"/>
            
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DATE_StructInit" Optimizable="true">
        <Argument AddressOf="true" GenericType="struct" Name="RTC_DateStruct" TypeName="LL_RTC_DateTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="WeekDay" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Month" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Day" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Year" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_Init" Optimizable="true">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="RTC_Format" OptimizationCondition="equal"/>
        <Argument AddressOf="true" GenericType="struct" Name="RTC_AlarmStruct" TypeName="LL_RTC_AlarmTypeDef">
            <Argument AddressOf="true" GenericType="struct" Name="AlarmTime" TypeName="LL_RTC_TimeTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
            
            </Argument>  
            <Argument AddressOf="false" GenericType="simple" Name="AlarmMask" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmDateWeekDaySel" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmDateWeekDay" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_Init" Optimizable="true">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="RTC_Format" OptimizationCondition="equal"/>
        <Argument AddressOf="true" GenericType="struct" Name="RTC_AlarmStruct" TypeName="LL_RTC_AlarmTypeDef">
            <Argument AddressOf="true" GenericType="struct" Name="AlarmTime" TypeName="LL_RTC_TimeTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
            
            </Argument>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmMask" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmDateWeekDaySel" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmDateWeekDay" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMA_StructInit" Optimizable="true">
        <Argument AddressOf="true" GenericType="struct" Name="RTC_AlarmStruct" TypeName="LL_RTC_AlarmTypeDef">
            <Argument AddressOf="true" GenericType="struct" Name="AlarmTime" TypeName="LL_RTC_TimeTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
            
            </Argument>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmMask" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmDateWeekDaySel" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmDateWeekDay" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALMB_StructInit" Optimizable="true">
        <Argument AddressOf="true" GenericType="struct" Name="RTC_AlarmStruct" TypeName="LL_RTC_AlarmTypeDef">
            <Argument AddressOf="true" GenericType="struct" Name="AlarmTime" TypeName="LL_RTC_TimeTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
           
            
            </Argument>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmMask" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmDateWeekDaySel" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="AlarmDateWeekDay" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_EnterInitMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ExitInitMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_WaitForSynchro">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DisableIT_TS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_ALRB">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_EnableOnTamper">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RTC_DisableIT_ALRB">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_ALRA">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DisableIT_ALRA">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TAMP1">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TAMP2">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TAMP3">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TAMP4">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TAMP5">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TAMP6">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TAMP7">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableIT_TAMP8">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_DisableIT_TAMP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsEnabledIT_TS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsEnabledIT_ALRB">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_IsEnabledIT_ALRA">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>

    
    
    <LibMethod Comment="" Name="LL_RTC_WAKEUP_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_Calibration_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        
    </LibMethod>
    
    
    <LibMethod Comment="" Name="LL_RTC_ALARMOUT_ALMB">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RTC_ALARMOUT_WAKEUP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_Calibration_Enable ">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="CalibOutput" OptimizationCondition="equal"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RTC_EnableOutRemap ">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RTC_EnableOutRemap">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        
    </LibMethod>
    

    <!-- ********************************* TAMPER LibMethods ************************************ -->
    
    <LibMethod Comment="Set Tamper Filter" Name="LL_RTC_TAMPER_SetFilterCount" Optimizable="true">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

        <Argument AddressOf="false" GenericType="simple" Name="Filter" OptimizationCondition="equal"/>
    </LibMethod>
   
    
    <LibMethod Comment="Precharge duration" Name="LL_RTC_TAMPER_SetPrecharge">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

        <Argument AddressOf="false" GenericType="simple" Name="PrechargeDuration" OptimizationCondition="equal"/>
    </LibMethod>

    
    <LibMethod Comment="Sampling frequency" Name="LL_RTC_TAMPER_SetSamplingFreq">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

        <Argument AddressOf="false" GenericType="simple" Name="SamplingFrequency" OptimizationCondition="equal"/>
    </LibMethod>

    
    <LibMethod Comment="Enable Pull up" Name="LL_RTC_TAMPER_EnablePullUp">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

    </LibMethod>
    
    <LibMethod Comment=" " Name="LL_RTC_TAMPER_EnableMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Mask" OptimizationCondition="equal"/>

    </LibMethod>
    <LibMethod Comment=" " Name="LL_RTC_TAMPER_EnableEraseBKP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>

    </LibMethod>
    <LibMethod Comment=" " Name="LL_RTC_TAMPER_DisableMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Mask" OptimizationCondition="equal"/>

    </LibMethod>
    <LibMethod Comment=" " Name="LL_RTC_TAMPER_DisableEraseBKP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>

    </LibMethod>

    
    <LibMethod Comment="" Name="LL_RTC_TAMPER_DisablePullUp">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TAMPER_ATAMP_SetAsyncPrescaler">
        <Argument AddressOf="false" GenericType="simple" Name="ActiveAsynvPrescaler" OptimizationCondition="equal"/>
    </LibMethod>
    
    <!--     <LibMethod Comment="Enable timestamp on tamper detection" Name="LL_RTC_TS_EnableOnTamper">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>-->
    
    <LibMethod Comment="" Name="LL_RTC_TS_DisableOnTamper">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_IsEnabledIT_TAMP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

    </LibMethod>


    <LibMethod Comment="" Name="LL_RTC_TAMPER_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>
    </LibMethod>
   

    <LibMethod Comment="" Name="LL_RTC_TAMPER_Disable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_TAMPER_EnableMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

        <Argument AddressOf="false" GenericType="simple" Name="Mask" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_TAMPER_DisableMask">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

        <Argument AddressOf="false" GenericType="simple" Name="Mask" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_TAMPER_EnableEraseBKP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>
    </LibMethod>


    <LibMethod Comment="" Name="LL_RTC_TAMPER_DisableEraseBKP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="Set Tamper trigger to falling edge" Name="LL_RTC_TAMPER_EnableActiveLevel">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Trigger" OptimizationCondition="equal"/>
    </LibMethod>
   
    
    <LibMethod Comment=" " Name="LL_RTC_TAMPER_ATAMP_DisableActiveMode">
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_TAMPER_DisableActiveLevel">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_SetFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="TimeFormat" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TAMPER_ATAMP_EnableActiveMode">
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>
    </LibMethod>
    
   
    <LibMethod Comment="" Name="LL_RTC_TIME_GetFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_EnableOutRemap">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
   
    <LibMethod Comment="" Name="LL_RTC_CALIB_OUTPUT_512HZ">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RTC_OUTPUTPOLARITY_PIN_HIGH">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_OUTPUTPOLARITY_PIN_LOW">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    
    
    <LibMethod Comment="" Name="LL_RTC_ALARMOUT_ALMA">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALARMOUT_ALMB">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALARMOUT_DISABLE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_ALARMOUT_WAKEUP">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    
    
     
    <LibMethod Comment="" Name="LL_RTC_CALIB_OUTPUT_1HZ">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_SetHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_TIME_GetHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    
    
    <LibMethod Comment="" Name="LL_RTC_SetAsynchPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="AsynchPrescaler" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RTC_GetAsynchPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    
    
    <LibMethod Comment="" Name="LL_RTC_SetSynchPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="SynchPrescaler" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TAMPER_EnableActiveLevel">
        <Argument AddressOf="false" GenericType="baseaddress" Name="TAMPx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Trigger" OptimizationCondition="equal"/>
    </LibMethod>
     
    <LibMethod Comment="" Name="LL_RTC_GetSynchPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    

    <LibMethod Comment="" Name="LL_RTC_TIME_SetMinute">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_GetMinute">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_SetSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
    </LibMethod>
    
    
    <LibMethod Comment="" Name="LL_RTC_TIME_GetSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_Config">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Format12_24" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Hours" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Minutes" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Seconds" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_Get">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_EnableDayLightStore">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_DisableDayLightStore">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_IsDayLightStoreEnabled">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_DecHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_IncHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_GetSubSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TIME_Synchronize">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="ShiftSecond" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Fraction" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_EnableInternalEvent">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_DisableInternalEvent">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_Disable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_SetActiveEdge">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Edge" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetActiveEdge">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetTimeFormat">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetHour">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_SetAlarmOutEvent">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="AlarmOutput" OptimizationCondition="equal"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RTC_TS_GetMinute">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetSecond">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetTime">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetWeekDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetMonth">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetDay">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TS_GetDate">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RTC_WAKEUP_SetClock">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="WakeUpClock" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_WAKEUP_SetAutoReload">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Tamper" OptimizationCondition="equal"/>
    </LibMethod>
   
    <LibMethod Comment="" Name="LL_RTC_CAL_SetOutputFreq">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="CalibOutput" OptimizationCondition="equal"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RTC_BKP_GetRegister">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>

        <Argument AddressOf="false" GenericType="Simple" Name="BackupRegister"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_BKP_SetRegister">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="Simple" Name="BackupRegister"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_SetTampPrivilege">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="Simple" Name="tampPrivilege"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_SetTampSecure">
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
        <Argument AddressOf="false" GenericType="Simple" Name="tampSecure"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TAMPER_ATAMP_SetSharedOuputSelection">
        <Argument AddressOf="false" GenericType="simple" Name="OutputSelection" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RTC_TAMPER_ATAMP_WriteSeed">
        <Argument AddressOf="false" GenericType="simple" Name="Seed" OptimizationCondition="equal"/>		
    </LibMethod>
    
 <LibMethod Comment="Monotonic Counter" Name="LL_RTC_IncrementMonotonicCounter" >
        <Argument AddressOf="false" GenericType="baseaddress" Name="RTCx" TypeName="RTC_TypeDef"/>
    </LibMethod>


    <RefComponent Cclass="LL" Cgroup="RTC" Cversion="0.4.0">
        <File Category="header" Name="Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_rtc.h"/>
        <File Category="source" Name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_rtc.c"/>
    </RefComponent>
</IP>
