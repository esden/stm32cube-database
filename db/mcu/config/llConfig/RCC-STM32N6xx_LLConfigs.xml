<?xml version="1.0" encoding="utf-8" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="RCC" Version="STM32Cube_FW_N6_V0.1.0" IncludeFile="stm32n6xx_ll_rcc.h;stm32n6xx_ll_bus.h;stm32n6xx_ll_system.h;stm32n6xx_ll_exti.h;stm32n6xx_ll_cortex.h;stm32n6xx_ll_utils.h;stm32n6xx_ll_pwr.h;stm32n6xx_ll_dma.h" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">

	<RefConfig Name="RCC_OSCConfig">

		<!--voltage scaling configuration-->
		<!-- <IFCondition Expression ="1=1"> -->
		<!-- <CallLibMethod Name="LL_PWR_SetRegulVoltageScaling"> -->
		<!-- <MethodArg Name="VoltageScaling" ParameterName="PWR_Regulator_Voltage_Scale"/>            -->
		<!-- </CallLibMethod> -->
		<!-- </IFCondition> -->
		
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="" Type="HardCode">
			    <HardCode Text="#t/* Configure the System Power Supply */"/>
		    </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
			    <HardCode Text="#tLL_AHB4_GRP1_EnableClock(LL_AHB4_GRP1_PERIPH_PWR);"/>
		    </CallLibMethod>
            <CallLibMethod Name="LL_PWR_ConfigSupply">
                <MethodArg Name="SupplySource" ParameterName="SupplySource"/>            
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
			    <HardCode Text="#twhile (LL_PWR_IsActiveFlag_ACTVOSRDY() == 0U)#n#t{#n#t}#n"/>
		    </CallLibMethod>			
        </IFCondition>

		<IFCondition Expression="HSEUsed=1 &amp; (HSEByPass|HSEDIGByPass)">
			<CallLibMethod Name="LL_RCC_HSE_EnableBypass" />
		</IFCondition>
		<IFCondition Expression="HSEUsed=1">
			<CallLibMethod Name="LL_RCC_HSE_Enable" />
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t /* Wait till HSE is ready */#n#twhile(LL_RCC_HSE_IsReady() != 1)#n#t{#n#t#n#t}" />
			</CallLibMethod>
		</IFCondition>
        
        <IFCondition Expression="((PLL1SOURCE_HSE &amp; PLL1Used=1)|(PLL2SOURCE_HSE &amp; PLL2Used=1)|(PLL3SOURCE_HSE &amp; PLL3Used=1)|(PLL4SOURCE_HSE &amp; PLL4Used=1))&amp;(HSEByPass|HSEDIGByPass|HSEOscillator)">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t/* Wait HSE stabilization time before its selection as PLL source. */#n#tLL_mDelay(HSE_STARTUP_TIMEOUT);" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="HSIUsed=1">
			<CallLibMethod Name="LL_RCC_HSI_Enable" />
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t /* Wait till HSI is ready */#n#twhile(LL_RCC_HSI_IsReady() == 0)#n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="HSIUsed=1">
			<CallLibMethod Name="LL_RCC_HSI_SetCalibTrimming">
				<MethodArg Name="Value" ParameterName="HSICalibrationValueARGLL" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_HSI_SetDivider">
				<MethodArg Name="hsidiv" ParameterName="HSIDivARG" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LSIUsed=1">
			<CallLibMethod Name="LL_RCC_LSI_Enable" />
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t /* Wait till LSI is ready */#n#twhile(LL_RCC_LSI_IsReady() != 1)#n#t{#n#t#n#t}" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="MSIUsed=1">
			<CallLibMethod Name="LL_RCC_MSI_Enable" />
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t /* Wait till MSIS is ready */#n#twhile(LL_RCC_MSI_IsReady() != 1)#n#t{#n#t}#n" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="MSIUsed=1">
			<CallLibMethod Name="LL_RCC_MSI_SetCalibTrimming">
				<MethodArg Name="Value" ParameterName="MSICalibrationValue" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="MSIUsed=1">
			<CallLibMethod Name="LL_RCC_MSI_SetFrequency">
				<MethodArg Name="Range" ParameterName="MSIClockRange" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="RTC_Used|(LSEUsed=1)">
			<CallLibMethod Name="LL_PWR_EnableBkUpAccess"></CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LSEUsed=1 &amp; (LSEByPass|LSEDIGByPass)">
			<CallLibMethod Name="LL_RCC_LSE_EnableBypass" />
		</IFCondition>
		<IFCondition Expression="LSEUsed=1 &amp; LSEOscillator">
			<CallLibMethod Name="LL_RCC_LSE_SetDriveCapability">
				<MethodArg Name="LSEDrive" ParameterName="LSE_Drive_Capability" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="LSEUsed=1">
			<CallLibMethod Name="LL_RCC_LSE_Enable" />
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t /* Wait till LSE is ready */#n#twhile(LL_RCC_LSE_IsReady() != 1)#n#t{#n#t#n#t}" />
			</CallLibMethod>
		</IFCondition>
		
		<IFCondition Expression="1=1">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n /** Get current CPU/System buses clocks configuration and #n#t*if necessary switch to intermediate HSI clock to ensure target clock can be set#n#t*/"/>
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#tif ((LL_RCC_GetCpuClkSource() == LL_RCC_CPU_CLKSOURCE_STATUS_IC1) ||#n#t#t (LL_RCC_GetSysClkSource() == LL_RCC_SYS_CLKSOURCE_STATUS_IC2_IC6_IC11))#n#t{#n#t#tLL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_HSI);"/>
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#t#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSI)#n#t#t{#n#t#t}" />
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#t#tLL_RCC_SetCpuClkSource(LL_RCC_CPU_CLKSOURCE_HSI);"/>
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#t#twhile(LL_RCC_GetCpuClkSource() != LL_RCC_CPU_CLKSOURCE_STATUS_HSI)#n#t#t{#n#t#t}" />
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#t}" />
			</CallLibMethod>
		</IFCondition>
		
		<IFCondition Expression="PLL1Used=1">
			<CallLibMethod Name="LL_RCC_PLL1_Disable"/>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_PLL1_IsReady() == 1)#n#t{#n#t}" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL1_DisableModulationSpreadSpectrum"/>
			<CallLibMethod Name="LL_RCC_PLL1_DisableBypass"/>
			<CallLibMethod Name="LL_RCC_PLL1_SetSource">
				<MethodArg Name="Source" ParameterName="PLL1Source" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL1_SetM">
				<MethodArg Name="div" ParameterName="FREFDIV1" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL1_SetN">
				<MethodArg Name="div" ParameterName="FBDIV1" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL1_SetP1">
				<MethodArg Name="div" ParameterName="POSTDIV1_1" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL1_SetP2">
				<MethodArg Name="div" ParameterName="POSTDIV2_1" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL1_SetFRACN">
				<MethodArg Name="div" ParameterName="PLL1FRACV" />
			</CallLibMethod>
			<IFCondition Expression="PLL1Used=1 &amp; !(PLL1FRACV=0)">
				<CallLibMethod Name="LL_RCC_PLL1FRACN_Enable" />
			</IFCondition>
			<CallLibMethod Name="LL_RCC_PLL1_AssertModulationSpreadSpectrumReset"/>
			<CallLibMethod Name="LL_RCC_PLL1_DisableFractionalModulationSpreadSpectrum"/>
		    <CallLibMethod Name="LL_RCC_PLL1P_Enable" />
			<CallLibMethod Name="LL_RCC_PLL1_Enable"/>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_PLL1_IsReady() != 1)#n#t{#n#t}#n" />
			</CallLibMethod>
		</IFCondition>

		<!--PLL configuration-->
		<IFCondition Expression="PLL2Used=1">
			<CallLibMethod Name="LL_RCC_PLL2_SetSource">
				<MethodArg Name="Source" ParameterName="PLL2Source" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="PLL3Used=1">
			<CallLibMethod Name="LL_RCC_PLL3_SetSource">
				<MethodArg Name="Source" ParameterName="PLL3Source" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="PLL4Used=1">
			<CallLibMethod Name="LL_RCC_PLL4_SetSource">
				<MethodArg Name="Source" ParameterName="PLL4Source" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="PLL2Used=1">
			<CallLibMethod Name="LL_RCC_PLL2_SetM">
				<MethodArg Name="div" ParameterName="FREFDIV2" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL2_SetN">
				<MethodArg Name="div" ParameterName="FBDIV2" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL2_SetP1">
				<MethodArg Name="div" ParameterName="POSTDIV1_2" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL2_SetP2">
				<MethodArg Name="div" ParameterName="POSTDIV2_2" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="PLL2Used=1 &amp; !(PLL2FRACV=0)">
			<CallLibMethod Name="LL_RCC_PLL2_SetFRACN">
				<MethodArg Name="div" ParameterName="PLL2FRACV" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL2FRACN_Enable" />
		</IFCondition>
		<IFCondition Expression="(MCO1SOURCE_IC5 &amp; IC5_PLL2)|(MCO1SOURCE_IC10 &amp; IC10_PLL2)|(MCO2SOURCE_IC15 &amp; IC15_PLL2)|(MCO2SOURCE_IC20 &amp; IC20_PLL2)">
			<CallLibMethod Name="LL_RCC_PLL2P_Enable" />
		</IFCondition>
		<IFCondition Expression="PLL2Used=1">
			<CallLibMethod Name="LL_RCC_PLL2_Enable" />
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t /* Wait till PLL is ready */#n#twhile(LL_RCC_PLL2_IsReady() != 1)#n#t{#n#t}#n" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="PLL3Used=1">
			<CallLibMethod Name="LL_RCC_PLL3_SetM">
				<MethodArg Name="div" ParameterName="FREFDIV3" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL3_SetN">
				<MethodArg Name="div" ParameterName="FBDIV3" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL3_SetP1">
				<MethodArg Name="div" ParameterName="POSTDIV1_3" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL3_SetP2">
				<MethodArg Name="div" ParameterName="POSTDIV2_3" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="PLL3Used=1 &amp; (!PLL3FRACV=0)">
			<CallLibMethod Name="LL_RCC_PLL3_SetFRACN">
				<MethodArg Name="div" ParameterName="PLL3FRACV" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL3FRACN_Enable" />
		</IFCondition>
		<IFCondition Expression="(MCO1SOURCE_IC5 &amp; IC5_PLL3)|(MCO1SOURCE_IC10 &amp; IC10_PLL3)|(MCO2SOURCE_IC15 &amp; IC15_PLL3)|(MCO2SOURCE_IC20 &amp; IC20_PLL3)">
			<CallLibMethod Name="LL_RCC_PLL3P_Enable" />
		</IFCondition>
		<IFCondition Expression="PLL3Used=1">
			<CallLibMethod Name="LL_RCC_PLL3_Enable" />
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t /* Wait till PLL is ready */#n#twhile(LL_RCC_PLL3_IsReady() != 1)#n#t{#n#t}#n" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="PLL4Used=1">
			<CallLibMethod Name="LL_RCC_PLL4_SetM">
				<MethodArg Name="div" ParameterName="FREFDIV4" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL4_SetN">
				<MethodArg Name="div" ParameterName="FBDIV4" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL4_SetP1">
				<MethodArg Name="div" ParameterName="POSTDIV1_4" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL4_SetP2">
				<MethodArg Name="div" ParameterName="POSTDIV2_4" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="PLL4Used=1 &amp; (!PLL4FRACV=0)">
			<CallLibMethod Name="LL_RCC_PLL4_SetFRACN">
				<MethodArg Name="div" ParameterName="PLL4FRACV" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_PLL4FRACN_Enable" />
		</IFCondition>
		<IFCondition Expression="(MCO1SOURCE_IC5 &amp; IC5_PLL4)|(MCO1SOURCE_IC10 &amp; IC10_PLL4)|(MCO2SOURCE_IC15 &amp; IC15_PLL4)|(MCO2SOURCE_IC20 &amp; IC20_PLL4)">
			<CallLibMethod Name="LL_RCC_PLL4P_Enable" />
		</IFCondition>
		<IFCondition Expression="PLL4Used=1">
			<CallLibMethod Name="LL_RCC_PLL4_Enable" />
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n#t /* Wait till PLL is ready */#n#twhile(LL_RCC_PLL4_IsReady() != 1)#n#t{#n#t}#n" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="1=1">
			<CallLibMethod Name="LL_RCC_SetAHBPrescaler">
				<MethodArg Name="Prescaler" ParameterName="AHBCLKDividerARG" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="1=1">
			<CallLibMethod Name="LL_RCC_SetAPB1Prescaler">
				<MethodArg Name="Prescaler" ParameterName="APB1CLKDividerARG" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="1=1">
			<CallLibMethod Name="LL_RCC_SetAPB2Prescaler">
				<MethodArg Name="Prescaler" ParameterName="APB2CLKDividerARG" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="1=1">
			<CallLibMethod Name="LL_RCC_SetAPB4Prescaler">
				<MethodArg Name="Prescaler" ParameterName="APB4CLKDividerARG" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="1=1">
			<CallLibMethod Name="LL_RCC_SetAPB5Prescaler">
				<MethodArg Name="Prescaler" ParameterName="APB5CLKDividerARG" />
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="1=1">
			<CallLibMethod Name="LL_RCC_SetTIMPrescaler">
				<MethodArg Name="Prescaler" ParameterName="TIMPresSelectionARG" />
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n" />
			</CallLibMethod>
		</IFCondition>
		
		<IFCondition Expression="IC1Used">
			<CallLibMethod Name="LL_RCC_IC1_SetSource">
				<MethodArg Name="Source" ParameterName="IC1ClockSelection" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_IC1_SetDivider">
				<MethodArg Name="Divider" ParameterName="IC1ClockDivider" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_IC1_Enable"/>
		</IFCondition>
		<IFCondition Expression="1=1">
			<CallLibMethod Name="LL_RCC_SetCpuClkSource">
				<MethodArg Name="Source" ParameterName="CPUCLKSource" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="CPUCLKSOURCE_HSE">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_GetCpuClkSource() != LL_RCC_CPU_CLKSOURCE_STATUS_HSE)#n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="CPUCLKSOURCE_HSI">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_GetCpuClkSource() != LL_RCC_CPU_CLKSOURCE_STATUS_HSI)#n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="CPUCLKSOURCE_MSI">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_GetCpuClkSource() != LL_RCC_CPU_CLKSOURCE_STATUS_MSI)#n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="CPUCLKSOURCE_IC1">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_GetCpuClkSource() != LL_RCC_CPU_CLKSOURCE_STATUS_IC1)#n#t{#n#t}" />
			</CallLibMethod>
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#n" />
			</CallLibMethod>
		</IFCondition>
		
		<IFCondition Expression="IC2Used &amp; IC6Used &amp; IC11Used">
			<CallLibMethod Name="LL_RCC_IC2_SetSource">
				<MethodArg Name="Source" ParameterName="IC2ClockSelection" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_IC2_SetDivider">
				<MethodArg Name="Divider" ParameterName="IC2ClockDivider" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_IC6_SetSource">
				<MethodArg Name="Source" ParameterName="IC6ClockSelection" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_IC6_SetDivider">
				<MethodArg Name="Divider" ParameterName="IC6ClockDivider" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_IC11_SetSource">
				<MethodArg Name="Source" ParameterName="IC11ClockSelection" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_IC11_SetDivider">
				<MethodArg Name="Divider" ParameterName="IC11ClockDivider" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_IC2_Enable"/>
			<CallLibMethod Name="LL_RCC_IC6_Enable"/>
			<CallLibMethod Name="LL_RCC_IC11_Enable"/>
		</IFCondition>

		<IFCondition Expression="1=1">
			<CallLibMethod Name="LL_RCC_SetSysClkSource">
				<MethodArg Name="Source" ParameterName="SYSBCLKSource" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="SYSBCLKSOURCE_HSE">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSE)#n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="SYSBCLKSOURCE_HSI">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSI)#n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="SYSBCLKSOURCE_MSI">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_MSI)#n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		<IFCondition Expression="SYSBCLKSOURCE_IC2_IC6_IC11">
			<CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_IC2_IC6_IC11)#n#t{#n#t}" />
			</CallLibMethod>
		</IFCondition>
		
        <IFCondition Expression ="USE_FULL_LL_DRIVER">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_Init1msTick">
                <MethodArg Name="CPU_Frequency" ParameterName="CpuClockFreq_Value"/>
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_SetSystemCoreClock">
                <MethodArg Name="CPU_Frequency" ParameterName="CpuClockFreq_Value"/>
            </CallLibMethod>
        </IFCondition>
	</RefConfig>

	<RefConfig Name="RCC_MCO1Config">
		<IFCondition Expression="MCO1Config">
		    <CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#tLL_RCC_EnableMCO(LL_RCC_MCO1);" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_ConfigMCO">
				<MethodArg Name="MCOxPrescaler" ParameterName="RCC_MCODiv1" />
				<MethodArg Name="MCOxSource" ParameterName="RCC_MCO1Source" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>
	<RefConfig Name="RCC_MCO2Config">
		<IFCondition Expression="MCO2Config">
		    <CallLibMethod Name="" Type="HardCode">
				<HardCode Text="#tLL_RCC_EnableMCO(LL_RCC_MCO2);" />
			</CallLibMethod>
			<CallLibMethod Name="LL_RCC_ConfigMCO">
				<MethodArg Name="MCOxPrescaler" ParameterName="RCC_MCODiv2" />
				<MethodArg Name="MCOxSource" ParameterName="RCC_MCO2Source" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>

	<RefConfig Name="RCC_PeriphClockConfig">
		<!--peripheral clock source configuration -->
		<IFCondition Expression="RTC_Used &amp; RTCCLKSOURCE_LSI">
			<CallLibMethod Name="HardCode:RTC" Type="HardCode">
				<HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSI)#n#t{" />
			</CallLibMethod>
			<Else>
				<IFCondition Expression="RTC_Used &amp; RTCCLKSOURCE_LSE">
					<CallLibMethod Name="HardCode:RTC" Type="HardCode">
						<HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSE)#n#t{" />
					</CallLibMethod>
					<CallLibMethod Name="HardCode:RTC" Type="HardCode">
						<HardCode Text="#t#tif (LL_PWR_IsEnabledBkUpAccess () != 1U)#n#t#t{" />
					</CallLibMethod>
					<CallLibMethod Name="HardCode:RTC" Type="HardCode">
						<HardCode Text="#t#t#t/* Enable write access to Backup domain */" />
					</CallLibMethod>
					<CallLibMethod Name="HardCode:RTC" Type="HardCode">
						<HardCode Text="#t#t#tLL_PWR_EnableBkUpAccess();" />
					</CallLibMethod>
					<CallLibMethod Name="HardCode:RTC" Type="HardCode">
						<HardCode Text="#t#t#twhile (LL_PWR_IsEnabledBkUpAccess () == 0U)#n#t#t#t{#n#t#t#t}#n#t#t}" />
					</CallLibMethod>
					<Else>
						<IFCondition Expression="RTC_Used">
							<CallLibMethod Name="HardCode:RTC" Type="HardCode">
								<HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_HSE)#n#t{" />
							</CallLibMethod>
						</IFCondition>
					</Else>
				</IFCondition>
			</Else>
		</IFCondition>

		<IFCondition Expression="RTC_Used">
			<CallLibMethod Name="HardCode:RTC" Type="HardCode">
				<HardCode Text="#t#tLL_RCC_ForceBackupDomainReset();" />
			</CallLibMethod>
			<CallLibMethod Name="HardCode:RTC" Type="HardCode">
				<HardCode Text="#t#tLL_RCC_ReleaseBackupDomainReset();" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="RTC_Used &amp; (LSEByPass|LSEDIGByPass) &amp; RTCCLKSOURCE_LSE">
			<CallLibMethod Name="HardCode:RTC" Type="HardCode">
				<HardCode Text="#t#tLL_RCC_LSE_EnableBypass();" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="RTC_Used &amp; LSEOscillator &amp; RTCCLKSOURCE_LSE">
			<CallLibMethod Name="LL_RCC_LSE_SetDriveCapability">
				<MethodArg Name="LSEDrive" ParameterName="LSE_Drive_Capability" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="RTC_Used &amp; RTCCLKSOURCE_LSE">
			<CallLibMethod Name="HardCode:RTC" Type="HardCode">
				<HardCode Text="#t#tLL_RCC_LSE_Enable();" />
			</CallLibMethod>

			<CallLibMethod Name="HardCode:RTC" Type="HardCode">
				<HardCode Text="#n#t /* Wait till LSE is ready */#n#t#twhile(LL_RCC_LSE_IsReady() != 1)#n#t#t{#n#t#t}" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="RTC_Used">
			<IFCondition Expression="(RTCCLKSOURCE_LSE|RTCCLKSOURCE_LSI) ">
				<CallLibMethod Name="LL_RCC_SetRTCClockSource">
					<MethodArg Name="Source" ParameterName="RTCClockSelectionARG" />
				</CallLibMethod>
				<Else>
					<CallLibMethod Name="LL_RCC_SetRTCClockSource">
						<MethodArg Name="Source" ParameterName="RTCClockSelection" />
					</CallLibMethod>
				</Else>
			</IFCondition>
		</IFCondition>

		<IFCondition Expression="RTC_Used">
			<CallLibMethod Name="HardCode:RTC" Type="HardCode">
				<HardCode Text="#t}" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="RTC_Used &amp; !(RTCCLKSOURCE_LSE|RTCCLKSOURCE_LSI)">
			<CallLibMethod Name="LL_RCC_SetRTC_HSEPrescaler">
				<MethodArg Name="Prescaler" ParameterName="RTCClockSelectionARG" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="FMC_Used">
			<CallLibMethod Name="LL_RCC_SetFMCClockSource">
				<MethodArg Name="Source" ParameterName="FMCClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="XSPI1_Used">
			<CallLibMethod Name="LL_RCC_SetXSPIClockSource">
				<MethodArg Name="ClkSource" ParameterName="XSPI1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="XSPI2_Used">
			<CallLibMethod Name="LL_RCC_SetXSPIClockSource">
				<MethodArg Name="ClkSource" ParameterName="XSPI2ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="XSPI3_Used">
			<CallLibMethod Name="LL_RCC_SetXSPIClockSource">
				<MethodArg Name="ClkSource" ParameterName="XSPI3ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SAI1_Used">
			<CallLibMethod Name="LL_RCC_SetSAIClockSource">
				<MethodArg Name="SAIxSource" ParameterName="SAI1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SAI2_Used">
			<CallLibMethod Name="LL_RCC_SetSAIClockSource">
				<MethodArg Name="SAIxSource" ParameterName="SAI2ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="I2C1_Used">
			<CallLibMethod Name="LL_RCC_SetI2CClockSource">
				<MethodArg Name="I2CxSource" ParameterName="I2C1CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="I2C2_Used">
			<CallLibMethod Name="LL_RCC_SetI2CClockSource">
				<MethodArg Name="I2CxSource" ParameterName="I2C2CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="I2C3_Used">
			<CallLibMethod Name="LL_RCC_SetI2CClockSource">
				<MethodArg Name="I2CxSource" ParameterName="I2C3CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="I2C4_Used">
			<CallLibMethod Name="LL_RCC_SetI2CClockSource">
				<MethodArg Name="I2CxSource" ParameterName="I2C4CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="I3C1_Used">
			<CallLibMethod Name="LL_RCC_SetI3CClockSource">
				<MethodArg Name="I3CxSource" ParameterName="I3C1CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="I3C2_Used">
			<CallLibMethod Name="LL_RCC_SetI3CClockSource">
				<MethodArg Name="I3CxSource" ParameterName="I3C2CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SPDIFRX1_Used|(SAI1CLKSOURCE_SPDIFRX1 &amp; SAI1_Used)|(SAI2CLKSOURCE_SPDIFRX1 &amp; SAI2_Used)">
			<CallLibMethod Name="LL_RCC_SetSPDIFRXClockSource">
				<MethodArg Name="Source" ParameterName="SPDIFRX1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SPI6_Used|I2S6_Used">
			<CallLibMethod Name="LL_RCC_SetSPIClockSource">
				<MethodArg Name="Source" ParameterName="SPI6ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SPI1_Used|I2S1_Used">
			<CallLibMethod Name="LL_RCC_SetSPIClockSource">
				<MethodArg Name="Source" ParameterName="SPI1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SPI3_Used|I2S3_Used">
			<CallLibMethod Name="LL_RCC_SetSPIClockSource">
				<MethodArg Name="Source" ParameterName="SPI3ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SPI2_Used|I2S2_Used">
			<CallLibMethod Name="LL_RCC_SetSPIClockSource">
				<MethodArg Name="Source" ParameterName="SPI2ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SPI4_Used">
			<CallLibMethod Name="LL_RCC_SetSPIClockSource">
				<MethodArg Name="Source" ParameterName="SPI4ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SPI5_Used">
			<CallLibMethod Name="LL_RCC_SetSPIClockSource">
				<MethodArg Name="Source" ParameterName="SPI5ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SDMMC1_Used">
			<CallLibMethod Name="LL_RCC_SetSDMMCClockSource">
				<MethodArg Name="SDMMCxSource" ParameterName="SDMMC1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="SDMMC2_Used">
			<CallLibMethod Name="LL_RCC_SetSDMMCClockSource">
				<MethodArg Name="SDMMCxSource" ParameterName="SDMMC2ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="USART1_Used">
			<CallLibMethod Name="LL_RCC_SetUSARTClockSource">
				<MethodArg Name="USARTxSource" ParameterName="USART1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="USART2_Used">
			<CallLibMethod Name="LL_RCC_SetUSARTClockSource">
				<MethodArg Name="USARTxSource" ParameterName="USART2ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="USART3_Used">
			<CallLibMethod Name="LL_RCC_SetUSARTClockSource">
				<MethodArg Name="USARTxSource" ParameterName="USART3ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="USART6_Used">
			<CallLibMethod Name="LL_RCC_SetUSARTClockSource">
				<MethodArg Name="USARTxSource" ParameterName="USART6ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="USART10_Used">
			<CallLibMethod Name="LL_RCC_SetUSARTClockSource">
				<MethodArg Name="USARTxSource" ParameterName="USART10ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="UART4_Used">
			<CallLibMethod Name="LL_RCC_SetUARTClockSource">
				<MethodArg Name="UARTxSource" ParameterName="UART4ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="UART5_Used">
			<CallLibMethod Name="LL_RCC_SetUARTClockSource">
				<MethodArg Name="UARTxSource" ParameterName="UART5ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="UART7_Used">
			<CallLibMethod Name="LL_RCC_SetUARTClockSource">
				<MethodArg Name="UARTxSource" ParameterName="UART7ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="UART8_Used">
			<CallLibMethod Name="LL_RCC_SetUARTClockSource">
				<MethodArg Name="UARTxSource" ParameterName="UART8ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="UART9_Used">
			<CallLibMethod Name="LL_RCC_SetUARTClockSource">
				<MethodArg Name="UARTxSource" ParameterName="UART9ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LPUART1_Used">
			<CallLibMethod Name="LL_RCC_SetLPUARTClockSource">
				<MethodArg Name="LPUARTxSource" ParameterName="LPUART1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="(USB1_OTG_HS_Used &amp; OTGHS1CLKSOURCE_PHY)">
			<CallLibMethod Name="LL_RCC_SetOTGPHYClockSource">
				<MethodArg Name="ClkSource" ParameterName="OTGPHY1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="(USB2_OTG_HS_Used &amp; OTGHS2CLKSOURCE_PHY)">
			<CallLibMethod Name="LL_RCC_SetOTGPHYClockSource">
				<MethodArg Name="ClkSource" ParameterName="OTGPHY2ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="USB1_OTG_HS_Used">
			<CallLibMethod Name="LL_RCC_SetOTGPHYCKREFClockSource">
				<MethodArg Name="OTGxSource" ParameterName="OTGHS1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="USB2_OTG_HS_Used">
			<CallLibMethod Name="LL_RCC_SetOTGPHYCKREFClockSource">
				<MethodArg Name="OTGxSource" ParameterName="OTGHS2ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LTDC_Used">
			<CallLibMethod Name="LL_RCC_SetLTDCClockSource">
				<MethodArg Name="LTDCxSource" ParameterName="LTDCClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LPTIM1_Used">
			<CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
				<MethodArg Name="LPTIMxSource" ParameterName="LPTIM1CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LPTIM2_Used">
			<CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
				<MethodArg Name="LPTIMxSource" ParameterName="LPTIM2CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LPTIM3_Used">
			<CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
				<MethodArg Name="LPTIMxSource" ParameterName="LPTIM3CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LPTIM4_Used">
			<CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
				<MethodArg Name="LPTIMxSource" ParameterName="LPTIM4CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="LPTIM5_Used">
			<CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
				<MethodArg Name="LPTIMxSource" ParameterName="LPTIM5CLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="ADC1_Used|ADC2_Used">
			<CallLibMethod Name="LL_RCC_SetADCClockSource">
				<MethodArg Name="ADCxSource" ParameterName="ADCCLockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="FDCAN1_Used|FDCAN2_Used|FDCAN3_Used">
			<CallLibMethod Name="LL_RCC_SetFDCANClockSource">
				<MethodArg Name="FDCANxSource" ParameterName="FDCANClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="PSSI_Used">
			<CallLibMethod Name="LL_RCC_SetPSSIClockSource">
				<MethodArg Name="PSSIxSource" ParameterName="PSSIClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="ADF1_Used">
			<CallLibMethod Name="LL_RCC_SetADFClockSource">
				<MethodArg Name="ADFxSource" ParameterName="ADF1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="MDF1_Used">
			<CallLibMethod Name="LL_RCC_SetMDFClockSource">
				<MethodArg Name="MDFxSource" ParameterName="MDF1ClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="DCMI_Used|DCMIPP_Used">
			<CallLibMethod Name="LL_RCC_SetDCMIPPClockSource">
				<MethodArg Name="DCMIxSource" ParameterName="DCMIPPClockSelection" />
			</CallLibMethod>
		</IFCondition>

		<IFCondition Expression="ETH1_Used">
			<CallLibMethod Name="LL_RCC_SetETHClockSource">
				<MethodArg Name="ETHxSource" ParameterName="ETH1ClockSelection" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>

	<RefConfig Name="RCC_CommonPeriphClockConfig">
		<IFCondition Expression="cKPerUsed=1">
			<CallLibMethod Name="LL_RCC_SetCLKPClockSource">
				<MethodArg Name="Source" ParameterName="CKPERSourceSelection" />
			</CallLibMethod>
		</IFCondition>
	</RefConfig>

	<RefConfig Name="RCC_CSS_Enable">
		<IFCondition Expression="CSSEnabled">
			<CallLibMethod Name="LL_RCC_HSE_EnableCSS" />
		</IFCondition>

		<IFCondition Expression="RCC_LSECSS_ENABLED">
			<CallLibMethod Name="LL_RCC_LSE_EnableCSS" />
		</IFCondition>
	</RefConfig>

	<!-- <LibMethod Comment="" Name="LL_PWR_SetRegulVoltageScaling"> -->
	<!-- <Argument AddressOf="false" GenericType="simple" Name="VoltageScaling"/> -->
	<!-- </LibMethod> -->

    <LibMethod Comment="" Name="LL_SetSystemCoreClock">
        <Argument AddressOf="false" GenericType="simple" Name="CPU_Frequency"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_Init1msTick">
        <Argument AddressOf="false" GenericType="simple" Name="CPU_Frequency"/>
    </LibMethod>

	<LibMethod Comment="" Name="LL_RCC_IC1_SetSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_IC1_SetDivider">
		<Argument AddressOf="false" GenericType="simple" Name="Divider" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_IC1_Enable"/>
	
	<LibMethod Comment="" Name="LL_RCC_IC2_SetSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_IC2_SetDivider">
		<Argument AddressOf="false" GenericType="simple" Name="Divider" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_IC2_Enable"/>
	
	<LibMethod Comment="" Name="LL_RCC_IC6_SetSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_IC6_SetDivider">
		<Argument AddressOf="false" GenericType="simple" Name="Divider" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_IC6_Enable"/>
	
	<LibMethod Comment="" Name="LL_RCC_IC11_SetSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_IC11_SetDivider">
		<Argument AddressOf="false" GenericType="simple" Name="Divider" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_IC11_Enable"/>

	<LibMethod Comment="" Name="LL_RCC_LSE_SetDriveCapability">
		<Argument AddressOf="false" GenericType="simple" Name="LSEDrive" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_HSE_EnableCSS" />
	<LibMethod Comment="" Name="LL_RCC_HSE_EnableBypass" />
	<LibMethod Comment="" Name="LL_RCC_HSE_Enable" />

	<LibMethod Comment="" Name="LL_RCC_HSI_Enable" />

	<LibMethod Comment="" Name="LL_RCC_LSE_Enable" />
	<LibMethod Comment="" Name="LL_RCC_LSE_EnableBypass" />
	<LibMethod Comment="" Name="LL_RCC_LSE_EnableCSS" />

	<LibMethod Comment="" Name="LL_RCC_LSI_Enable" />
	<LibMethod Comment="" Name="LL_RCC_MSI_Enable" />

	<LibMethod Comment="" Name="LL_RCC_HSI_SetCalibTrimming">
		<Argument AddressOf="false" GenericType="simple" Name="Value" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_MSI_SetCalibTrimming">
		<Argument AddressOf="false" GenericType="simple" Name="Value" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_MSI_SetFrequency">
		<Argument AddressOf="false" GenericType="simple" Name="Range" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetAPB1Prescaler">
		<Argument AddressOf="false" GenericType="simple" Name="Prescaler" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_SetAPB2Prescaler">
		<Argument AddressOf="false" GenericType="simple" Name="Prescaler" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_SetAPB4Prescaler">
		<Argument AddressOf="false" GenericType="simple" Name="Prescaler" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_SetAPB5Prescaler">
		<Argument AddressOf="false" GenericType="simple" Name="Prescaler" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_SetTIMPrescaler">
		<Argument AddressOf="false" GenericType="simple" Name="Prescaler" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_ConfigMCO">
		<Argument AddressOf="false" GenericType="simple" Name="MCOxSource" />
		<Argument AddressOf="false" GenericType="simple" Name="MCOxPrescaler" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetLPUARTClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="LPUARTxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetUSARTClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="USARTxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetUARTClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="UARTxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetI2CClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="I2CxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetI3CClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="I3CxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetLPTIMClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="LPTIMxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetLTDCClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="LTDCxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetSAIClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="SAIxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetSDMMCClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="SDMMCxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetXSPIClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="ClkSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetOTGPHYClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="ClkSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetOTGPHYCKREFClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="OTGxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetADCClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="ADCxSource" />
	</LibMethod>
	
    <LibMethod Comment="" Name="LL_PWR_ConfigSupply">
        <Argument AddressOf="false" GenericType="simple" Name="SupplySource"/>
    </LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetFDCANClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="FDCANxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetRTCClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetRTC_HSEPrescaler">
		<Argument AddressOf="false" GenericType="simple" Name="Prescaler" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_EnableRTC" />

	<LibMethod Comment="" Name="LL_PWR_EnableBkUpAccess" />
	<LibMethod Comment="" Name="#tLL_RCC_ForceBackupDomainReset" />
	<LibMethod Comment="" Name="#tLL_RCC_ReleaseBackupDomainReset" />
	<LibMethod Comment="" Name="LL_RCC_PLL1_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL2_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL3_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL4_Enable" />

	<LibMethod Comment="" Name="LL_RCC_PLL1P_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL2P_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL3P_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL4P_Enable" />

	<LibMethod Comment="" Name="LL_RCC_PLL1Q_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL2Q_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL3Q_Enable" />

	<LibMethod Comment="" Name="LL_RCC_PLL1R_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL2R_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL3R_Enable" />

	<LibMethod Comment="" Name="LL_SetSystemCoreClock">
		<Argument AddressOf="false" GenericType="simple" Name="HCLKFrequency" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_Init1msTick">
		<Argument AddressOf="false" GenericType="simple" Name="HCLKFrequency" />
	</LibMethod>


	<LibMethod Comment="" Name="LL_RCC_SetFMCClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetPSSIClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="PSSIxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetADFClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="ADFxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetMDFClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="MDFxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetDCMIPPClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="DCMIxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetETHClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="ETHxSource" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetCLKPClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL1_Disable"/>
	<LibMethod Comment="" Name="LL_RCC_PLL1_DisableModulationSpreadSpectrum"/>
	<LibMethod Comment="" Name="LL_RCC_PLL1_DisableBypass"/>
	<LibMethod Comment="" Name="LL_RCC_PLL1_AssertModulationSpreadSpectrumReset"/>
	<LibMethod Comment="" Name="LL_RCC_PLL1_DisableFractionalModulationSpreadSpectrum"/>

	<LibMethod Comment="" Name="LL_RCC_PLL1_SetSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL2_SetSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL3_SetSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL4_SetSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetSysClkSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetCpuClkSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetSPIClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_SetSPDIFRXClockSource">
		<Argument AddressOf="false" GenericType="simple" Name="Source" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL1_SetM">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL1_SetN">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL1_SetP1">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL1_SetP2">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL1_SetFRACN">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL2_SetM">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL2_SetN">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL2_SetP1">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL2_SetP2">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL2_SetFRACN">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL3_SetN">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL3_SetM">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL3_SetP1">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL3_SetP2">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL3_SetFRACN">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL4_SetN">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL4_SetM">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL4_SetP1">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL4_SetP2">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>
	<LibMethod Comment="" Name="LL_RCC_PLL4_SetFRACN">
		<Argument AddressOf="false" GenericType="simple" Name="div" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_HSI_SetDivider">
		<Argument AddressOf="false" GenericType="simple" Name="hsidiv" />
	</LibMethod>

	<LibMethod Comment="" Name="LL_RCC_PLL1FRACN_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL2FRACN_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL3FRACN_Enable" />
	<LibMethod Comment="" Name="LL_RCC_PLL4FRACN_Enable" />
	<LibMethod Comment="" Name="LL_RCC_SetAHBPrescaler">
		<Argument AddressOf="false" GenericType="simple" Name="Prescaler" />
	</LibMethod>

	<RefComponent Cclass="HAL" Cgroup="RCC" Cversion="0.1.0">
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_bus.h" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_cortex.h" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_rcc.h" />
		<File Category="source" Name="Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_ll_rcc.c" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_system.h" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_utils.h" />
		<File Category="source" Name="Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_ll_utils.c" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_exti.h" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_ll_exti.c" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_pwr.h" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_gpio.h" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_dma.h" />
		<File Category="header" Name="Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_ll_dmamux.h" />
	</RefComponent>
</IP>