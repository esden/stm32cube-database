<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="USART" Version="STM32Cube_FW_F4_V1.16.0" IncludeFile="stm32f4xx_ll_usart.h;stm32f4xx_ll_rcc.h" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">
    <RefConfig Name="Uart_Init">
        <CallLibMethod Name="LL_USART_Init">
           <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="BaudRate" ParameterName="BaudRate"/>
           <MethodArg Name="DataWidth" ParameterName="WordLength"/>
           <MethodArg Name="StopBits" ParameterName="StopBits"/>
           <MethodArg Name="Parity" ParameterName="Parity"/>
           <MethodArg Name="TransferDirection" ParameterName="Mode"/>
           <MethodArg Name="HardwareFlowControl" ParameterName="HwFlowCtl"/>
           <MethodArg Name="OverSampling" ParameterName="OverSampling"/>
        </CallLibMethod>

	
	
	<IFCondition Expression="(VirtualMode = VM_ASYNC)">
	    <CallLibMethod Name="LL_USART_ConfigAsyncMode">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
            </CallLibMethod>
	</IFCondition>
	<IFCondition Expression="(VirtualMode = VM_ASYNC)">
	    <CallLibMethod Name="LL_USART_Enable">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
            </CallLibMethod>
	</IFCondition>
    </RefConfig>
	
	
    <RefConfig Name="Usart_Init">
        <CallLibMethod Name="LL_USART_Init">
           <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="BaudRate" ParameterName="BaudRate"/>
           <MethodArg Name="DataWidth" ParameterName="WordLength"/>
           <MethodArg Name="StopBits" ParameterName="StopBits"/>
           <MethodArg Name="Parity" ParameterName="Parity"/>
           <MethodArg Name="TransferDirection" ParameterName="Mode"/>
           <MethodArg Name="OverSampling" ParameterName=""/>
        </CallLibMethod>
	<CallLibMethod Name="LL_USART_ClockInit">
           <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="ClockOutput" FValue="LL_USART_CLOCK_ENABLE"/>
           <MethodArg Name="ClockPolarity" ParameterName="CLKPolarity"/>
           <MethodArg Name="ClockPhase" ParameterName="CLKPhase"/>
           <MethodArg Name="LastBitClockPulse" ParameterName="CLKLastBit"/>
        </CallLibMethod>
	<IFCondition Expression="(VirtualMode = VM_SYNC)">
	    <CallLibMethod Name="LL_USART_ConfigSyncMode">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
            </CallLibMethod>
	</IFCondition>
	<IFCondition Expression="(VirtualMode = VM_SYNC)">
	    <CallLibMethod Name="LL_USART_Enable">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
            </CallLibMethod>
	</IFCondition>

    </RefConfig>
	
	
    <RefConfig Name="IrDa_Init">
        <CallLibMethod Name="LL_USART_Init">
	   <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="BaudRate" ParameterName="BaudRate"/>
           <MethodArg Name="DataWidth" ParameterName="WordLength"/>
           <MethodArg Name="Parity" ParameterName="Parity"/>
           <MethodArg Name="TransferDirection" ParameterName="Mode"/>
           <MethodArg Name="OverSampling" ParameterName=""/>
        </CallLibMethod>
	<CallLibMethod Name="LL_USART_SetIrdaPowerMode">
	    <MethodArg Name="USARTx" ParameterName="Instance"/>
	    <MethodArg Name="PowerMode" ParameterName="IrDAMode"/>
        </CallLibMethod>
	<CallLibMethod Name="LL_USART_SetIrdaPrescaler">
	    <MethodArg Name="USARTx" ParameterName="Instance"/>
	    <MethodArg Name="PrescalerValue" ParameterName="Prescaler"/>
        </CallLibMethod>
	    <CallLibMethod Name="LL_USART_ConfigIrdaMode">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
        </CallLibMethod>

        <CallLibMethod Name="LL_USART_Enable">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
        </CallLibMethod>
    </RefConfig>
	
	
    <RefConfig Name="SmartCard_Init">
        <CallLibMethod Name="LL_USART_Init">
           <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="BaudRate" ParameterName="BaudRate"/>
           <MethodArg Name="DataWidth" ParameterName="WordLength"/>
           <MethodArg Name="Parity" ParameterName="Parity"/>
           <MethodArg Name="TransferDirection" ParameterName="Mode"/>
           <MethodArg Name="OverSampling" ParameterName=""/>
        </CallLibMethod>
	<IFCondition Expression="(NACKState = SMARTCARD_NACK_ENABLE)">
	    <CallLibMethod Name="LL_USART_EnableSmartcardNACK">
	    <MethodArg Name="USARTx" ParameterName="Instance"/>
            </CallLibMethod>
        </IFCondition>
	

        <IFCondition Expression="(NACKState = SMARTCARD_NACK_DISABLE)">
	    <CallLibMethod Name="LL_USART_DisableSmartcardNACK">
	    <MethodArg Name="USARTx" ParameterName="Instance"/>
            </CallLibMethod>
        </IFCondition>	
		
	
	<CallLibMethod Name="LL_USART_SetSmartcardPrescaler">
	<MethodArg Name="USARTx" ParameterName="Instance"/>
	<MethodArg Name="PrescalerValue" ParameterName="Prescaler"/>
        </CallLibMethod>

		
	<IFCondition Expression="(VirtualClockMode = VM_SMARTCARD)">
	<CallLibMethod Name="LL_USART_ClockInit">
	    <MethodArg Name="USARTx" ParameterName="Instance"/>
            <MethodArg Name="ClockOutput" FValue="LL_USART_CLOCK_ENABLE"/>
            <MethodArg Name="ClockPolarity" ParameterName="CLKPolarity"/>
            <MethodArg Name="ClockPhase" ParameterName="CLKPhase"/>
            <MethodArg Name="LastBitClockPulse" ParameterName="CLKLastBit"/>
        </CallLibMethod>
	</IFCondition>
		

        <CallLibMethod Name="LL_USART_SetSmartcardGuardTime">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
            <MethodArg Name="GuardTime" ParameterName="GuardTime"/>
        </CallLibMethod>
	<IFCondition Expression="(VirtualMode = VM_SMARTCARD)">
	    <CallLibMethod Name="LL_USART_ConfigSmartcardMode">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
            </CallLibMethod>
	</IFCondition>

        <CallLibMethod Name="LL_USART_Enable">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
        </CallLibMethod>
    </RefConfig>

    <RefConfig Name="Uart_HalfDuplex_Init">
        <CallLibMethod Name="LL_USART_Init">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="BaudRate" ParameterName="BaudRate"/>
           <MethodArg Name="DataWidth" ParameterName="WordLength"/>
           <MethodArg Name="StopBits" ParameterName="StopBits"/>
           <MethodArg Name="Parity" ParameterName="Parity"/>
           <MethodArg Name="TransferDirection" ParameterName="Mode"/>
		   <MethodArg Name="OverSampling" ParameterName="OverSampling"/>
        </CallLibMethod>


		<IFCondition Expression="(VirtualMode = VM_ASYNC)">
		<CallLibMethod Name="LL_USART_ConfigHalfDuplexMode">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
        </CallLibMethod>
		</IFCondition>

        <CallLibMethod Name="LL_USART_Enable">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
        </CallLibMethod>
    </RefConfig>
    
    <RefConfig Name="Uart_Lin_Init">
        <CallLibMethod Name="LL_USART_Init">
		   <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="BaudRate" ParameterName="BaudRate"/>
           <MethodArg Name="DataWidth" ParameterName="WordLength"/>
           <MethodArg Name="StopBits" ParameterName="StopBits"/>
           <MethodArg Name="Parity" ParameterName="Parity"/>
           <MethodArg Name="TransferDirection" ParameterName="Mode"/>
           <MethodArg Name="OverSampling" ParameterName=""/>
        </CallLibMethod>


        <CallLibMethod Name="LL_USART_SetLINBrkDetectionLen">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
            <MethodArg Name="LINBDLength" ParameterName="BreakDetectLength"/>
        </CallLibMethod>
		

            <CallLibMethod Name="LL_USART_ConfigLINMode">
                <MethodArg Name="USARTx" ParameterName="Instance"/>
            </CallLibMethod>


            <CallLibMethod Name="LL_USART_Enable">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
        </CallLibMethod>

    </RefConfig>
	
	<RefConfig Name="Uart_MultiProcessor_Init">
        <CallLibMethod Name="LL_USART_Init">
		   <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="BaudRate" ParameterName="BaudRate"/>
           <MethodArg Name="DataWidth" ParameterName="WordLength"/>
           <MethodArg Name="StopBits" ParameterName="StopBits"/>
           <MethodArg Name="Parity" ParameterName="Parity"/>
           <MethodArg Name="TransferDirection" ParameterName="Mode"/>
		   <MethodArg Name="OverSampling" ParameterName="OverSampling"/>
        </CallLibMethod>


        <CallLibMethod Name="LL_USART_SetWakeUpMethod">
		   <MethodArg Name="USARTx" ParameterName="Instance"/>
           <MethodArg Name="Method" ParameterName="WakeUpMethode"/>
        </CallLibMethod>
		
<IFCondition Expression="(VirtualMode = VM_ASYNC)">
		<CallLibMethod Name="LL_USART_ConfigMultiProcessMode">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
        </CallLibMethod>
        </IFCondition>		

		<IFCondition Expression="(VirtualMode = VM_ASYNC)">
		<CallLibMethod Name="LL_USART_Enable">
            <MethodArg Name="USARTx" ParameterName="Instance"/>
        </CallLibMethod>
		</IFCondition>

    </RefConfig>

    <LibMethod Comment="" Name="LL_USART_ConfigAsyncMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ConfigSyncMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ConfigLINMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ConfigHalfDuplexMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ConfigSmartcardMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ConfigIrdaMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ConfigMultiProcessMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_Disable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabled">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableDirectionRx">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableDirectionRx">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableDirectionTx">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableDirectionTx">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetTransferDirection">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="TransferDirection" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetTransferDirection">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetParity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Parity" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetParity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetWakeUpMethod">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Method" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetWakeUpMethod">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetDataWidth">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="DataWidth" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetDataWidth">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetOverSampling">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="OverSampling" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetOverSampling">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetLastClkPulseOutput">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="LastBitClockPulse" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetLastClkPulseOutput">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetClockPhase">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="ClockPhase" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetClockPhase">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetClockPolarity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="ClockPolarity" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetClockPolarity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ConfigClock">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Phase" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Polarity" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="LBCPOutput" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableSCLKOutput">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableSCLKOutput">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledSCLKOutput">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetStopBitsLength">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="StopBits" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetStopBitsLength">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ConfigCharacter">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="DataWidth" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Parity" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="StopBits" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetNodeAddress">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="NodeAddress" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetNodeAddress">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableRTSHWFlowCtrl">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableRTSHWFlowCtrl">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableCTSHWFlowCtrl">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableCTSHWFlowCtrl">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetHWFlowCtrl">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="HardwareFlowControl" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetHWFlowCtrl">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableOneBitSamp">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableOneBitSamp">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledOneBitSamp">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetBaudRate">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="PeriphClk" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="OverSampling" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="BaudRate" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetBaudRate">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="PeriphClk" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="OverSampling" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableHalfDuplex">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableHalfDuplex">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledHalfDuplex">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIrda">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIrda">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIrda">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetIrdaPowerMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="PowerMode" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetIrdaPowerMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetIrdaPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="PrescalerValue" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetIrdaPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetLINBrkDetectionLen">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="LINBDLength" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetLINBrkDetectionLen">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableLIN">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableLIN">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledLIN">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableSmartcardNACK">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableSmartcardNACK">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledSmartcardNACK">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableSmartcard">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableSmartcard">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledSmartcard">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetSmartcardPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="PrescalerValue" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetSmartcardPrescaler">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_SetSmartcardGuardTime">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="GuardTime" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_GetSmartcardGuardTime">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ReceiveData8">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ReceiveData9">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_TransmitData8">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Value" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_TransmitData9">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="Value" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableDMAReq_RX">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableDMAReq_RX">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledDMAReq_RX">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableDMAReq_TX">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableDMAReq_TX">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledDMAReq_TX">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DMA_GetRegAddr">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_RequestBreakSending">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_RequestEnterMuteMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_RequestExitMuteMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_PE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_FE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_NE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_ORE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_IDLE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_RXNE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_TC">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_TXE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_LBD">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_nCTS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_SBK">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsActiveFlag_RWU">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_PE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_FE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_NE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_ORE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_IDLE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_TC">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_RXNE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_LBD">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClearFlag_nCTS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DeInit">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_Init">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="true" GenericType="struct" Name="USART_InitStruct" TypeName="LL_USART_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="BaudRate" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DataWidth" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="StopBits" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Parity" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TransferDirection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="HardwareFlowControl" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OverSampling" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_StructInit">
        <Argument AddressOf="true" GenericType="struct" Name="USART_InitStruct" TypeName="LL_USART_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="BaudRate" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DataWidth" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="StopBits" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Parity" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TransferDirection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="HardwareFlowControl" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OverSampling" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClockInit">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
        <Argument AddressOf="true" GenericType="struct" Name="USART_ClockInitStruct" TypeName="LL_USART_ClockInitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="ClockOutput" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ClockPolarity" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ClockPhase" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="LastBitClockPulse" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_ClockStructInit">
        <Argument AddressOf="true" GenericType="struct" Name="USART_ClockInitStruct" TypeName="LL_USART_ClockInitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="ClockOutput" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ClockPolarity" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ClockPhase" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="LastBitClockPulse" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIT_IDLE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIT_RXNE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIT_TC">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIT_TXE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIT_PE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIT_LBD">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIT_ERROR">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_EnableIT_CTS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIT_IDLE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIT_RXNE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIT_TC">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIT_TXE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIT_PE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIT_LBD">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIT_ERROR">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_DisableIT_CTS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIT_IDLE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIT_RXNE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIT_TC">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIT_TXE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIT_PE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIT_LBD">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIT_ERROR">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_USART_IsEnabledIT_CTS">
        <Argument AddressOf="false" GenericType="baseaddress" Name="USARTx" TypeName="USART_TypeDef"/>
    </LibMethod>
    <RefComponent Cclass="LL" Cgroup="USART" Cversion="1.16.0">
        <File Category="header" Name="Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h"/>
        <File Category="source" Name="Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_usart.c"/>
    </RefComponent>
</IP>
