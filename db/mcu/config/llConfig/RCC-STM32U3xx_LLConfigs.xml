<?xml version="1.0" encoding="utf-8" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="RCC" Version="STM32Cube_FW_U3_V0.2.0" IncludeFile="stm32u3xx_ll_crs.h;stm32u3xx_ll_rcc.h;stm32u3xx_ll_bus.h;stm32u3xx_ll_system.h;stm32u3xx_ll_exti.h;stm32u3xx_ll_cortex.h;stm32u3xx_ll_utils.h;stm32u3xx_ll_pwr.h;stm32u3xx_ll_dma.h" 
    xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">

    <RefConfig Name="RCC_OSCConfig">
      
        <!--flash latency configuration-->
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_FLASH_SetLatency">
                <MethodArg Name="Latency" ParameterName="FLatency"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_0">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_0)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_1">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_2">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_2)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <!--voltage scaling configuration-->
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_PWR_SetRegulVoltageScaling">
                <MethodArg Name="VoltageScaling" ParameterName="PWR_Regulator_Voltage_Scale"/>           
            </CallLibMethod>
        </IFCondition>
		
	    <IFCondition Expression="(HCLKFreq_Value &gt; 24000000)">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t/* Enable Epod Booster */#n#tLL_AHB1_GRP2_EnableClock(LL_AHB1_GRP2_PERIPH_PWR);"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_SetEPODBoosterClkSource" ReturnHAL="false">
                <MethodArg Name="ClkSource" ParameterName="EPOD_Booster_SourceArg"/>
            </CallLibMethod>
	    	<CallLibMethod Name="LL_PWR_EnableEPODBooster" ReturnHAL="false"/>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_PWR_IsActiveFlag_BOOST() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
	    </IFCondition>

        <!--Clock source activation-->
        <IFCondition Expression ="HSEUsed=1 &amp; (HSEByPass | HSEDIGByPass)">
            <CallLibMethod Name="LL_RCC_HSE_EnableBypass" />
        </IFCondition>
        <IFCondition Expression ="HSEUsed=1 &amp; HSEByPass">
            <CallLibMethod Name="LL_RCC_HSE_SetClockMode">
                <MethodArg Name="Value" FValue="LL_RCC_HSE_ANALOG_MODE"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="HSEUsed=1 &amp; HSEDIGByPass">
            <CallLibMethod Name="LL_RCC_HSE_SetClockMode">
                <MethodArg Name="Value" FValue="LL_RCC_HSE_DIGITAL_MODE"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="HSEUsed=1">
            <CallLibMethod Name="LL_RCC_HSE_Enable"/>  
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSE is ready */#n#twhile(LL_RCC_HSE_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="HSIUsed=1">
            <CallLibMethod Name="LL_RCC_HSI_Enable"/>    
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSI is ready */#n#twhile(LL_RCC_HSI_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="HSIUsed=1">
            <CallLibMethod Name="LL_RCC_HSI_SetCalibTrimming">
                <MethodArg Name="Value" ParameterName="HSICalibrationValue"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="RTC_Used|LSCOConfig|(LSEUsed=1)|(LSIUsed=1)">
            <CallLibMethod Name="LL_PWR_EnableBkUpAccess"/>
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#twhile (LL_PWR_IsEnabledBkUpAccess () == 0U)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition> 
		
        <IFCondition Expression ="HSI48Used=1">
            <CallLibMethod Name="LL_RCC_HSI48_Enable"/>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSI48 is ready */#n#twhile(LL_RCC_HSI48_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
	
        <IFCondition Expression ="LSIUsed=1">
            <CallLibMethod Name="LL_RCC_LSI_Enable"/>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSI is ready */#n#twhile(LL_RCC_LSI_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
	
        <IFCondition Expression ="MSISUsed=1">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#t/* Activate MSIS as source */"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_MSIS_SetClockSource">
                <MethodArg Name="MSISClockSource" ParameterName="MSISSource"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_MSIS_SetClockDivision">
                <MethodArg Name="MSISClockDivision" ParameterName="MSISDIV"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_MSI_SetMSIxClockRange"/>
        </IFCondition>
        <IFCondition Expression ="MSIKUsed=1">
            <CallLibMethod Name="LL_RCC_MSIK_SetClockSource">
                <MethodArg Name="MSIKClockSource" ParameterName="MSIKSource"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_MSIK_SetClockDivision">
                <MethodArg Name="MSIKClockDivision" ParameterName="MSIKDIV"/>
            </CallLibMethod>
        </IFCondition>	 
		
        <IFCondition Expression ="LSEUsed=1 &amp; (LSEByPass | LSEByPassRTC)">
            <CallLibMethod Name="LL_RCC_LSE_EnableBypass"/>
        </IFCondition>
        <IFCondition Expression ="(LSEOscillator | LSEOscillatorRTC) &amp;(LSEUsed=1)">
            <CallLibMethod Name="LL_RCC_LSE_SetDriveCapability">
                <MethodArg Name="LSEDrive" ParameterName="LSE_Drive_Capability"/>
            </CallLibMethod>
        
        </IFCondition>
        <IFCondition Expression ="LSEUsed=1 &amp; (LSEByPass | LSEOscillator)">
            <CallLibMethod Name="LL_RCC_LSE_EnablePropagation"/>
        </IFCondition>
        <IFCondition Expression ="LSEUsed=1">
            <CallLibMethod Name="LL_RCC_LSE_Enable"/>         
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSE is ready */#n#twhile(LL_RCC_LSE_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <!--sys clock source + AHB/APB configuration-->
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetSysClkSource">
                <MethodArg Name="Source" ParameterName="SYSCLKSource"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SysSourceHSE">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_HSE)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SysSourceHSI">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_HSI16)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SysSourceMSI">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_MSIS)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>		

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAHBPrescaler">
                <MethodArg Name="Prescaler" ParameterName="AHBCLKDivider"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB1Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB1CLKDivider"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB2Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB2CLKDivider"/>
            </CallLibMethod>
        </IFCondition>
        
		<IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB3Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB3CLKDivider"/>
            </CallLibMethod>
        </IFCondition>

        <!--system core frequency set,systick init,systick priority configuration-->
        <IFCondition Expression ="USE_FULL_LL_DRIVER">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_Init1msTick">
                <MethodArg Name="HCLKFrequency" ParameterName="HCLKFreq_Value"/>
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_SetSystemCoreClock">
                <MethodArg Name="HCLKFrequency" ParameterName="HCLKFreq_Value"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="!USE_FULL_LL_DRIVER">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Update the time base */"/>
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#tif (HAL_InitTick (TICK_INT_PRIORITY) != HAL_OK)#n#t{#n#t#tError_Handler();#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="RCC_TZ_SEC_PRIV &amp; (RMVF_SEC|MSIRC_TZSEC|LSEOSC_TZSEC|HSEOSC_TZSEC|HSI48RC_TZSEC|AHBPrescaler_TZSEC|CK48Mult_TZSEC|SysClkSource_TZSEC|HSIRC_TZSEC|LSIRC_TZSEC)">
            <CallLibMethod Name="LL_RCC_EnableSecPrivilegedMode"/>
        </IFCondition>
        <IFCondition Expression ="RCC_TZ_SEC_PRIV">
            <CallLibMethod Name="LL_RCC_ConfigSecure">
                <MethodArg Name="Configuration" ParameterName="ItemSECPRIV"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="RCC_TZ_PRIV|RCC_TZ_NSEC_PRIV">
            <CallLibMethod Name="LL_RCC_EnableNSecPrivilegedMode"/>
        </IFCondition>
        <IFCondition Expression ="RCC_TZ_SEC_NPRIV">
            <CallLibMethod Name="LL_RCC_ConfigSecure">
                <MethodArg Name="Configuration" ParameterName="ItemSEC"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_MCO1Config">
        <!--MCO clock source -->
        <IFCondition Expression ="(MCOConfig)">
            <CallLibMethod Name="LL_RCC_SetSourceClockMCO">
                <MethodArg Name="MCOSourceClock" ParameterName="RCC_MCO1SourceARG"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_SetClockPrescalerMCO">
                <MethodArg Name="MCOClockPrescaler" ParameterName="RCC_MCODiv"/>
            </CallLibMethod>
        </IFCondition> 
    </RefConfig>

    <RefConfig Name="RCC_MCO2Config">
        <!--MCO2 clock source -->
        <IFCondition Expression ="(MCO2Config)">
            <CallLibMethod Name="LL_RCC_SetSourceClockMCO2">
                <MethodArg Name="MCO2SourceClock" ParameterName="RCC_MCO2SourceARG"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_RCC_SetClockPrescalerMCO2">
                <MethodArg Name="MCO2ClockPrescaler" ParameterName="RCC_MCO2Div"/>
            </CallLibMethod>
        </IFCondition> 
    </RefConfig>


    <RefConfig Name="RCC_PeriphClockConfig">
        <!--peripheral clock source configuration -->
        <IFCondition Expression ="RTC_Used &amp; RTCSourceLSI">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#tif(LL_RCC_GetRTCClockSource(LL_RCC_RTC_CLKSOURCE) != LL_RCC_RTC_CLKSOURCE_LSI)#n#t{"/>
            </CallLibMethod>
            <Else>
                <IFCondition Expression ="RTC_Used &amp; RTCSourceLSE">                
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#tif(LL_RCC_GetRTCClockSource(LL_RCC_RTC_CLKSOURCE) != LL_RCC_RTC_CLKSOURCE_LSE)#n#t{"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tFlagStatus       pwrclkchanged = RESET;"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t/* Update LSE configuration in Backup Domain control register    */"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t/* Requires to enable write access to Backup Domain if necessary */"/>
                    </CallLibMethod>
                
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tif (LL_AHB1_GRP2_IsEnabledClock(LL_AHB1_GRP2_PERIPH_PWR) != 1U)#n#t#t{"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#t/* Enables the PWR Clock and Enables access to the backup domain */"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#tLL_AHB1_GRP2_EnableClock(LL_AHB1_GRP2_PERIPH_PWR);"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#tpwrclkchanged = SET;#n#t#t}"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tif (LL_PWR_IsEnabledBkUpAccess () != 1U)#n#t#t{"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#t/* Enable write access to Backup domain */"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#tLL_PWR_EnableBkUpAccess();"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#twhile (LL_PWR_IsEnabledBkUpAccess () == 0U)#n#t#t#t{#n#t#t#t}#n#t#t}"/>
                    </CallLibMethod>
                    <Else>
                        <IFCondition Expression ="RTC_Used &amp; RTCSourceHSE">
                            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                                <HardCode Text="#tif(LL_RCC_GetRTCClockSource(LL_RCC_RTC_CLKSOURCE) != LL_RCC_RTC_CLKSOURCE_HSE_DIV32)#n#t{"/>
                            </CallLibMethod>
                        </IFCondition>
                    </Else>
                </IFCondition>
            </Else>
        </IFCondition>
        <IFCondition Expression ="RTC_Used">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_ForceBackupDomainReset();"/>
            </CallLibMethod>

            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_ReleaseBackupDomainReset();"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="RTC_Used &amp; LSEByPass &amp; RTCSourceLSE">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_LSE_EnableBypass();"/>
            </CallLibMethod>
        </IFCondition>        
        <IFCondition Expression ="RTC_Used &amp; (LSEOscillator | LSEOscillatorRTC) &amp; RTCSourceLSE">
            <CallLibMethod Name="LL_RCC_LSE_SetDriveCapability">
                <MethodArg Name="LSEDrive" ParameterName="LSE_Drive_Capability"/>
            </CallLibMethod>        
        </IFCondition>
        <IFCondition Expression ="RTC_Used &amp; RTCSourceLSE">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_LSE_Enable();"/>
            </CallLibMethod>

            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSE is ready */#n#t#twhile(LL_RCC_LSE_IsReady() != 1)#n#t#t{#n#t#t}"/>
            </CallLibMethod>
        </IFCondition>       
        <IFCondition Expression ="RTC_Used &amp; RTCSourceLSI">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_LSI);"/>
            </CallLibMethod>
            <Else>
                <IFCondition Expression ="RTC_Used &amp; RTCSourceLSE">                
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tLL_RCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_LSE);"/>
                    </CallLibMethod>
                    <Else>
                        <IFCondition Expression ="RTC_Used &amp; RTCSourceHSE">
                            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                                <HardCode Text="#t#tLL_RCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_HSE_DIV32);"/>
                            </CallLibMethod>
                        </IFCondition>
                    </Else>
                </IFCondition>
            </Else>
        </IFCondition>
        <IFCondition Expression ="RTC_Used &amp; RTCSourceLSE">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#t/* Restore clock configuration if changed */"/>
            </CallLibMethod>
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tif (pwrclkchanged == SET)#n#t#t{#n#t#t#tLL_AHB1_GRP2_DisableClock(LL_AHB1_GRP2_PERIPH_PWR);#n#t#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="RTC_Used">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t}"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USART1_Used">
            <CallLibMethod Name="LL_RCC_SetUSARTClockSource">
                <MethodArg Name="USARTxSource" ParameterName="USART1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPUART1_Used">
            <CallLibMethod Name="LL_RCC_SetLPUARTClockSource">
                <MethodArg Name="LPUARTxSource" ParameterName="LPUART1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USART3_Used">
            <CallLibMethod Name="LL_RCC_SetUSARTClockSource">
                <MethodArg Name="USARTxSource" ParameterName="USART3CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="UART4_Used">
            <CallLibMethod Name="LL_RCC_SetUARTClockSource">
                <MethodArg Name="UARTxSource" ParameterName="UART4CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="UART5_Used">
            <CallLibMethod Name="LL_RCC_SetUARTClockSource">
                <MethodArg Name="UARTxSource" ParameterName="UART5CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I2C1_Used">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I2C3_Used">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C3CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I2C2_Used">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="I3C1_Used">
            <CallLibMethod Name="LL_RCC_SetI3CClockSource">
                <MethodArg Name="I3CxSource" ParameterName="I3C1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="I3C2_Used">
            <CallLibMethod Name="LL_RCC_SetI3CClockSource">
                <MethodArg Name="I3CxSource" ParameterName="I3C2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPTIM2_Used">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPTIM1_Used">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPTIM3_Used|LPTIM4_Used">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM3CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SAI1_SAIBUsed_ForRCC|SAI1_SAIAUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSAIClockSource">
                <MethodArg Name="SAIxSource" ParameterName="SAI1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="RNG_Used">
            <CallLibMethod Name="LL_RCC_SetRNGClockSource">
                <MethodArg Name="RNGxSource" ParameterName="RNGCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USB_Used">
            <CallLibMethod Name="LL_RCC_SetUSBClockSource">
                <MethodArg Name="USBxSource" ParameterName="USB_DIV"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="USB_Used|SDMMC1_Used">
            <CallLibMethod Name="LL_RCC_SetICLKClockSource">
                <MethodArg Name="ICLKSource" ParameterName="ICLKCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="(USE_ADC1 &amp;ADC1UsedAsynchronousCLK_ForRCC) | DAC1 | (USE_ADC2 &amp;ADCUsed_ForRCC)">
            <CallLibMethod Name="LL_RCC_SetADCDACClockSource">
                <MethodArg Name="ADCxSource" ParameterName="ADCCLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="DAC1">
            <CallLibMethod Name="LL_RCC_SetDACSHClockSource">
                <MethodArg Name="Source" ParameterName="DACCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="ADF1_Used">
            <CallLibMethod Name="LL_RCC_SetADFClockSource">
                <MethodArg Name="Source" ParameterName="AdfClockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="OCTOSPI1_Used">
            <CallLibMethod Name="LL_RCC_SetOCTOSPIClockSource">
                <MethodArg Name="OCTOSPIxSource" ParameterName="OCTOSPIMCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="FDCAN1_Used">
            <CallLibMethod Name="LL_RCC_SetFDCANClockSource">
                <MethodArg Name="FDCANxSource" ParameterName="FDCANClockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SPI1_Used">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="SPI2_Used">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="SPI3_Used">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI3CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_CommonPeriphClockConfig">
    </RefConfig>

    <RefConfig Name="RCC_LSCOConfig">
        <!--LSCO  code gen-->
        <IFCondition Expression ="LSCOConfig">
            <CallLibMethod Name="LL_RCC_LSCO_Enable"/>
        </IFCondition>
        <IFCondition Expression ="LSCOConfig">
            <CallLibMethod Name="LL_RCC_LSCO_SetSource">
                <MethodArg Name="Source" ParameterName="LSCOSource1"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_CSS_Enable">
        <!--CSS enable code gen-->
        <IFCondition Expression ="CSSEnabled">
            <CallLibMethod Name="LL_RCC_HSE_EnableCSS"/>
        </IFCondition>
		
        <IFCondition Expression ="RCC_LSECSS_ENABLED">
            <CallLibMethod Name="LL_RCC_LSE_EnableCSS"/>
        </IFCondition>        
    </RefConfig>

    <RefConfig Name="RCC_CRSConfig">
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_CRS_SetSyncDivider">
                <MethodArg Name="Divider" ParameterName="Prescaler"/>
            </CallLibMethod>
            
            <CallLibMethod Name="LL_CRS_SetSyncPolarity">
                <MethodArg Name="Divider" ParameterName="Polarity"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_CRS_SetSyncSignalSource">
                <MethodArg Name="Source" ParameterName="Source"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_CRS_SetReloadCounter">
                <MethodArg Name="Value" ParameterName="ReloadValueARGLL"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_CRS_SetFreqErrorLimit">
                <MethodArg Name="Value" ParameterName="ErrorLimitValue"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_CRS_SetHSI48SmoothTrimming">
                <MethodArg Name="Value" ParameterName="HSI48CalibrationValue"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <LibMethod Comment="" Name="LL_PWR_SetRegulVoltageScaling">
        <Argument AddressOf="false" GenericType="simple" Name="VoltageScaling"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetEPODBoosterClkSource">
        <Argument AddressOf="false" GenericType="simple" Name="ClkSource"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_FLASH_SetLatency">
        <Argument AddressOf="false" GenericType="simple" Name="FLatency"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_LSE_SetDriveCapability">
        <Argument AddressOf="false" GenericType="simple" Name="LSEDrive"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_HSE_EnableCSS"/>
    <LibMethod Comment="" Name="LL_PWR_EnableEPODBooster"/>
          
    <LibMethod Comment="" Name="LL_RCC_HSE_EnableBypass" />
    
    <LibMethod Comment="" Name="LL_RCC_HSE_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_HSE_SetClockMode">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_HSI_Enable"/>
    
    <LibMethod Comment="" Name="LL_RCC_HSI48_Enable"/>
  
    <LibMethod Comment="" Name="LL_RCC_LSE_Enable"/>    
    <LibMethod Comment="" Name="LL_RCC_LSE_EnablePropagation"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSE_EnableBypass"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSE_EnableCSS"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSI_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_MSIS_SetClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="MSISClockSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_MSIS_SetClockDivision">
        <Argument AddressOf="false" GenericType="simple" Name="MSISClockDivision"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_MSI_SetMSIxClockRange"/>
	
    <LibMethod Comment="" Name="LL_RCC_MSIK_SetClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="MSIKClockSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_MSIK_SetClockDivision">
        <Argument AddressOf="false" GenericType="simple" Name="MSIKClockDivision"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_HSI_SetCalibTrimming">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_LSCO_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSCO_SetSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSysClkSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetAHBPrescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetAPB1Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetAPB2Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetAPB3Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSourceClockMCO">
        <Argument AddressOf="false" GenericType="simple" Name="MCOSourceClock"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetSourceClockMCO2">
        <Argument AddressOf="false" GenericType="simple" Name="MCO2SourceClock"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetClockPrescalerMCO">
        <Argument AddressOf="false" GenericType="simple" Name="MCOClockPrescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetClockPrescalerMCO2">
        <Argument AddressOf="false" GenericType="simple" Name="MCO2ClockPrescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetUSARTClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="USARTxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetLPUARTClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="LPUARTxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetUARTClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="UARTxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetI2CClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="I2CxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetI3CClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="I3CxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetLPTIMClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="LPTIMxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSAIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="SAIxSource"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetOCTOSPIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="OCTOSPIxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetRNGClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="RNGxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetUSBClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="USBxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetICLKClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="ICLKSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetADCDACClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="ADCxSource"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetDACSHClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetFDCANClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="FDCANxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetRTCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_EnableRTC"/>
	
    <LibMethod Comment="" Name="LL_PWR_EnableBkUpAccess"/>
    <LibMethod Comment="" Name="#tLL_RCC_ForceBackupDomainReset"/>
    <LibMethod Comment="" Name="#tLL_RCC_ReleaseBackupDomainReset"/>
    <LibMethod Comment="" Name="LL_RCC_SHSI_Enable"/>

    <LibMethod Comment="" Name="LL_Init1msTick">
        <Argument AddressOf="false" GenericType="simple" Name="HCLKFrequency"/>
    </LibMethod>    
	<LibMethod Comment="" Name="LL_SetSystemCoreClock">
        <Argument AddressOf="false" GenericType="simple" Name="HCLKFrequency"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_AHB3_GRP1_DisableClock">
        <Argument AddressOf="false" GenericType="simple" Name="Periphs"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetSyncDivider">
        <Argument AddressOf="false" GenericType="simple" Name="Divider"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetSyncPolarity">
        <Argument AddressOf="false" GenericType="simple" Name="Polarity"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetSyncSignalSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetReloadCounter">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetFreqErrorLimit">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetHSI48SmoothTrimming">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_EnableSecPrivilegedMode"/>
    <LibMethod Comment="" Name="LL_RCC_EnableNSecPrivilegedMode"/>
    <LibMethod Comment="" Name="LL_RCC_ConfigSecure">
        <Argument AddressOf="false" GenericType="simple" Name="Configuration"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetSystickClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="SystickSource"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetADFClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetSPIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
      
    <RefComponent Cclass="HAL" Cgroup="RCC" Cversion="0.2.0">
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_bus.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_cortex.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_rcc.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_crs.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_system.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_utils.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_ll_utils.c"/> 
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_exti.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_ll_exti.c"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_pwr.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_gpio.h"/>
        <File Category="header" Name="Drivers/STM32U3xx_HAL_Driver/Inc/stm32u3xx_ll_dma.h"/>
    </RefComponent>
</IP>