<?xml version="1.0" encoding="utf-8" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="RCC" Version="STM32Cube_FW_L5_V1.0.0RC1" IncludeFile="stm32u5xx_ll_crs.h;stm32u5xx_ll_rcc.h;stm32u5xx_ll_bus.h;stm32u5xx_ll_system.h;stm32u5xx_ll_exti.h;stm32u5xx_ll_cortex.h;stm32u5xx_ll_utils.h;stm32u5xx_ll_pwr.h;stm32u5xx_ll_dma.h" 
    xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">

    <RefConfig Name="RCC_OSCConfig">
      
        <!--flash latency configuration-->

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_FLASH_SetLatency">
                <MethodArg Name="Latency" ParameterName="FLatency"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_0">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_0)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_1">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_2">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_2)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_3">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_3)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="FLatency=FLASH_LATENCY_4">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_4)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <!--voltage scaling configuration-->
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_PWR_SetRegulVoltageScaling">
                <MethodArg Name="VoltageScaling" ParameterName="PWR_Regulator_Voltage_Scale"/>           
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#twhile (LL_PWR_IsActiveFlag_VOS() == 0)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <!--IFCondition Expression ="PWR_Regulator_Voltage_Scale=PWR_REGULATOR_VOLTAGE_SCALE1_BOOST">
            <CallLibMethod Name="LL_PWR_EnableRange1BoostMode">
            </CallLibMethod>
        </IFCondition-->

        <!--Clock source activation-->
        <IFCondition Expression ="HSEUsed=1 &amp; (HSEByPass | HSEDIGByPass)">
            <CallLibMethod Name="LL_RCC_HSE_EnableBypass" />
        </IFCondition>
        <IFCondition Expression ="HSEUsed=1 &amp; HSEByPass">
            <CallLibMethod Name="LL_RCC_HSE_SetClockMode">
                <MethodArg Name="Value" FValue="LL_RCC_HSE_ANALOG_MODE"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="HSEUsed=1 &amp; HSEDIGByPass">
            <CallLibMethod Name="LL_RCC_HSE_SetClockMode">
                <MethodArg Name="Value" FValue="LL_RCC_HSE_DIGITAL_MODE"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="HSEUsed=1">
            <CallLibMethod Name="LL_RCC_HSE_Enable"/>
   
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSE is ready */#n#twhile(LL_RCC_HSE_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="SAES_Used">
            <CallLibMethod Name="LL_RCC_SHSI_Enable"/>
     
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSI is ready */#n#twhile(LL_RCC_SHSI_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="HSIUsed=1">
            <CallLibMethod Name="LL_RCC_HSI_Enable"/>
     
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSI is ready */#n#twhile(LL_RCC_HSI_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="HSIUsed=1">
            <CallLibMethod Name="LL_RCC_HSI_SetCalibTrimming">
                <MethodArg Name="Value" ParameterName="HSICalibrationValue"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="HSI48Used=1">
            <CallLibMethod Name="LL_RCC_HSI48_Enable"/>

            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till HSI48 is ready */#n#twhile(LL_RCC_HSI48_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
	
        <IFCondition Expression ="LSIUsed=1">
            <CallLibMethod Name="LL_RCC_LSI_Enable"/>

            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSI is ready */#n#twhile(LL_RCC_LSI_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="MSISUsed=1">
            <CallLibMethod Name="LL_RCC_MSIS_Enable"/>

            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till MSIS is ready */#n#twhile(LL_RCC_MSIS_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>			
        </IFCondition>
        
        <IFCondition Expression ="MSIKUsed=1">
            <CallLibMethod Name="LL_RCC_MSIK_Enable"/>

            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till MSIK is ready */#n#twhile(LL_RCC_MSIK_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>			
        </IFCondition>
		
        <IFCondition Expression ="MSISUsed=1|MSIKUsed=1">
            <CallLibMethod Name="LL_RCC_MSI_EnableRangeSelection"/>
        </IFCondition>
		
        <IFCondition Expression ="MSISUsed=1">
            <CallLibMethod Name="LL_RCC_MSIS_SetRange">
                <MethodArg Name="Range" ParameterName="MSIClockRange"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="MSIKUsed=1">
            <CallLibMethod Name="LL_RCC_MSIK_SetRange">
                <MethodArg Name="Range" ParameterName="MSIKClockRange"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="MSIUsed=1">
            <CallLibMethod Name="LL_RCC_MSI_SetCalibTrimming">
                <MethodArg Name="Value" ParameterName="MSICalibrationValue"/>
                <MethodArg Name="Oscillator" ParameterName="MSIClockRange"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="RTCUsed_ForRCC|LSCOConfig|(LSEUsed=1)">
            <CallLibMethod Name="LL_PWR_EnableBkUpAccess">
            </CallLibMethod>
        </IFCondition> 	 
		
        <IFCondition Expression ="LSEUsed=1 &amp; (LSEByPass | LSEByPassRTC)">
            <CallLibMethod Name="LL_RCC_LSE_EnableBypass"/>
        </IFCondition>
        <IFCondition Expression ="(LSEOscillator | LSEOscillatorRTC) &amp;(LSEUsed=1)">
            <CallLibMethod Name="LL_RCC_LSE_SetDriveCapability">
                <MethodArg Name="LSEDrive" ParameterName="LSE_Drive_Capability"/>
            </CallLibMethod>
        
        </IFCondition>
        <IFCondition Expression ="LSEUsed=1 &amp; (LSEByPass | LSEOscillator)">
            <CallLibMethod Name="LL_RCC_LSE_EnablePropagation"/>
        </IFCondition>
        <IFCondition Expression ="LSEUsed=1">
            <CallLibMethod Name="LL_RCC_LSE_Enable"/>
         
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSE is ready */#n#twhile(LL_RCC_LSE_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        
        
        <IFCondition Expression ="MSIKUsed=1&amp;MSIKAutoCalibrationON">
            <CallLibMethod Name="LL_RCC_SetMSIPLLMode">
                <MethodArg Name="Source" FValue="LL_RCC_PLLMODE_MSIK"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="MSISUsed=1&amp;MSIAutoCalibrationON">
            <CallLibMethod Name="LL_RCC_SetMSIPLLMode">
                <MethodArg Name="Source" FValue="LL_RCC_PLLMODE_MSIS"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="MSIUsed=1&amp;(MSIAutoCalibrationON | MSIKAutoCalibrationON)">
            <CallLibMethod Name="LL_RCC_MSI_EnablePLLMode"/>
        </IFCondition>

        <IFCondition Expression ="MSIUsed=1&amp; (MSIPLLFAST=true)">
            <CallLibMethod Name="LL_RCC_Enable_MSIPLLFAST"/>
        </IFCondition>

        <!--PLL configuration-->		
        <IFCondition Expression ="PLL1RUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1_ConfigDomain_SYS">
                <MethodArg Name="Source" ParameterName="PLLSource"/>
                <MethodArg Name="PLLM" ParameterName="PLLM"/>
                <MethodArg Name="PLLN" ParameterName="PLLN"/>
                <MethodArg Name="PLLR" ParameterName="PLL1R"/>
            </CallLibMethod>
        </IFCondition>		

        <IFCondition Expression ="PLL1PUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1_ConfigDomain_SAI">
                <MethodArg Name="Source" ParameterName="PLLSource"/>
                <MethodArg Name="PLLM" ParameterName="PLLM"/>
                <MethodArg Name="PLLN" ParameterName="PLLN"/>
                <MethodArg Name="PLLP" ParameterName="PLL1P"/>
            </CallLibMethod>
        </IFCondition>		

        <IFCondition Expression ="PLL1QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1_ConfigDomain_48M">
                <MethodArg Name="Source" ParameterName="PLLSource"/>
                <MethodArg Name="PLLM" ParameterName="PLLM"/>
                <MethodArg Name="PLLN" ParameterName="PLLN"/>
                <MethodArg Name="PLLQ" ParameterName="PLL1Q"/>
            </CallLibMethod>
        </IFCondition>

        <!--PLL activation-->
        <IFCondition Expression ="PLL1QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1_EnableDomain_48M"/>
        </IFCondition>		
		
        <IFCondition Expression ="PLL1RUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1_EnableDomain_SYS"/>
        </IFCondition>
		
        <IFCondition Expression ="PLL1PUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1_EnableDomain_SAI"/>
        </IFCondition>

        <IFCondition Expression ="PLLUsed=1">
            <CallLibMethod Name="LL_RCC_SetPll1EPodPrescaler">
                <MethodArg Name="BoostDiv" ParameterName="PLL1MBOOST"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="PLLUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1_SetVCOInputRange">
                <MethodArg Name="InputRange" ParameterName="PLL1_VCI_Range"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="PLLUsed=1">
            <CallLibMethod Name="LL_RCC_PLL1_Enable"/>
   
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till PLL is ready */#n#twhile(LL_RCC_PLL1_IsReady() != 1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="PLLUsed=1 &amp; !(PLLFRACN=0)">
            <CallLibMethod Name="LL_RCC_PLL1FRACN_Enable"/>
            <CallLibMethod Name="LL_RCC_PLL1_SetFRACN">
                <MethodArg Name="div" ParameterName="PLLFRACN"/>
            </CallLibMethod>
        </IFCondition>

        <!--sys clock source + AHB/APB configuration-->
        <IFCondition Expression ="(SYSCLKFreq_VALUEArg &gt; 80000000)" >

            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t   /* Intermediate AHB prescaler 2 when target frequency clock is higher than 80 MHz */#n#tLL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_2);#n#t"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetSysClkSource">
                <MethodArg Name="Source" ParameterName="SYSCLKSource"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SysSourcePLL">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL1)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SysSourceHSE">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSE)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SysSourceHSI">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSI)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SysSourceMSI">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till System clock is ready */#n#twhile(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_MSIS)#n#t{#n#t}#n"/>
            </CallLibMethod>
        </IFCondition>		
		
        <IFCondition Expression ="(SYSCLKFreq_VALUEArg &gt; 80000000)">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t/* Insure 1us transition state at intermediate medium speed clock*/#n#tfor (__IO uint32_t i = (160 >> 1); i !=0; i--);#n#t"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAHBPrescaler">
                <MethodArg Name="Prescaler" ParameterName="AHBCLKDivider"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">

            <CallLibMethod Name="LL_RCC_SetAPB1Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB1CLKDivider"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB2Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB2CLKDivider"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_RCC_SetAPB3Prescaler">
                <MethodArg Name="Prescaler" ParameterName="APB3CLKDivider"/>
            </CallLibMethod>
        </IFCondition>

        <!--system core frequency set,systick init,systick priority configuration-->
        <IFCondition Expression ="USE_FULL_LL_DRIVER">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_Init1msTick">
                <MethodArg Name="HCLKFrequency" ParameterName="CortexFreq_Value"/>
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="1=1">
            <CallLibMethod Name="LL_SetSystemCoreClock">
                <MethodArg Name="HCLKFrequency" ParameterName="HCLKFreq_Value"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="!USE_FULL_LL_DRIVER">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Update the time base */"/>
            </CallLibMethod>
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#tif (HAL_InitTick (TICK_INT_PRIORITY) != HAL_OK)#n#t{#n#t#tError_Handler();#t#n#t}"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="RCC_TZ_SEC_PRIV &amp; (RMVF_SEC|MSIRC_TZSEC|LSEOSC_TZSEC|HSEOSC_TZSEC|HSI48RC_TZSEC|PLLSource_TZSEC|AHBPrescaler_TZSEC|PLL2Source_TZSEC|PLL3Source_TZSEC|CK48Mult_TZSEC|SysClkSource_TZSEC|HSIRC_TZSEC|LSIRC_TZSEC)">
            <CallLibMethod Name="LL_RCC_EnableSecPrivilegedMode"/>
        </IFCondition>

        <IFCondition Expression ="RCC_TZ_SEC_PRIV">
            <CallLibMethod Name="LL_RCC_ConfigSecure">
                <MethodArg Name="Configuration" ParameterName="ItemSECPRIV"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="RCC_TZ_PRIV|RCC_TZ_NSEC_PRIV">
            <CallLibMethod Name="LL_RCC_EnableNSecPrivilegedMode"/>
        </IFCondition>

        <IFCondition Expression ="RCC_TZ_SEC_NPRIV">
            <CallLibMethod Name="LL_RCC_ConfigSecure">
                <MethodArg Name="Configuration" ParameterName="ItemSEC"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_MCO1Config">
        <!--MCO clock source -->
        <IFCondition Expression ="((Semaphore_input_Channel1TIM17 &amp; TIM17 &amp; SEM2RCC_MCO_REQUIRED_TIM17)|MCOConfig)">
            <CallLibMethod Name="LL_RCC_ConfigMCO">
                <MethodArg Name="MCOxPrescaler" ParameterName="RCC_MCODiv"/>
                <MethodArg Name="MCOxSource" ParameterName="RCC_MCO1SourceARG"/>
            </CallLibMethod>
        </IFCondition> 
    </RefConfig>
    <RefConfig Name="MSIKSTOP_ENABLE">
        <IFCondition Expression="MSIKERON=true">
            <CallLibMethod Name="LL_RCC_MSIK_EnableInStopMode"/>
        </IFCondition>
    </RefConfig>
    <RefConfig Name="MSIKSTOP_DISABLE">
        <IFCondition Expression="MSIKERON=false &amp;S_LPBAM_CONF">
            <CallLibMethod Name="LL_RCC_MSIK_DisableInStopMode"/>
        </IFCondition>
    </RefConfig>
    <RefConfig Name="HSISTOP_ENABLE">
        <IFCondition Expression="HSIKERON=true">
            <CallLibMethod Name="LL_RCC_HSI_EnableInStopMode"/>
        </IFCondition>
    </RefConfig>
    <RefConfig Name="HSISTOP_DISABLE">
        <IFCondition Expression="HSIKERON=false &amp;S_LPBAM_CONF">
            <CallLibMethod Name="LL_RCC_HSI_DisableInStopMode"/>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_PeriphClockConfig">
        <!--peripheral clock source configuration -->
        <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCSourceLSI">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSI)#n#t{"/>
            </CallLibMethod>
            <Else>
                <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCSourceLSE">                
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_LSE)#n#t{"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tFlagStatus       pwrclkchanged = RESET;"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t/* Update LSE configuration in Backup Domain control register    */"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t/* Requires to enable write access to Backup Domain if necessary */"/>
                    </CallLibMethod>
                
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tif (LL_AHB3_GRP1_IsEnabledClock (LL_AHB3_GRP1_PERIPH_PWR) != 1U)#n#t#t{"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#t/* Enables the PWR Clock and Enables access to the backup domain */"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#tLL_AHB3_GRP1_EnableClock(LL_AHB3_GRP1_PERIPH_PWR);"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#tpwrclkchanged = SET;#n#t#t}"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tif (LL_PWR_IsEnabledBkUpAccess () != 1U)#n#t#t{"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#t/* Enable write access to Backup domain */"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#tLL_PWR_EnableBkUpAccess();"/>
                    </CallLibMethod>
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#t#twhile (LL_PWR_IsEnabledBkUpAccess () == 0U)#n#t#t#t{#n#t#t#t}#n#t#t}"/>
                    </CallLibMethod>
                    <Else>
                        <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCSourceHSE">
                            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                                <HardCode Text="#tif(LL_RCC_GetRTCClockSource() != LL_RCC_RTC_CLKSOURCE_HSE_DIV32)#n#t{"/>
                            </CallLibMethod>
                        </IFCondition>
                    </Else>
                </IFCondition>
            </Else>
        </IFCondition>

        <IFCondition Expression ="RTCUsed_ForRCC">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_ForceBackupDomainReset();"/>
            </CallLibMethod>

            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_ReleaseBackupDomainReset();"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="RTCUsed_ForRCC &amp; LSEByPass &amp; RTCSourceLSE">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_LSE_EnableBypass();"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="RTCUsed_ForRCC &amp; (LSEOscillator | LSEOscillatorRTC) &amp; RTCSourceLSE">
            <CallLibMethod Name="LL_RCC_LSE_SetDriveCapability">
                <MethodArg Name="LSEDrive" ParameterName="LSE_Drive_Capability"/>
            </CallLibMethod>        
        </IFCondition>

        <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCSourceLSE">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_LSE_Enable();"/>
            </CallLibMethod>

            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#n#t /* Wait till LSE is ready */#n#t#twhile(LL_RCC_LSE_IsReady() != 1)#n#t#t{#n#t#t}"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCSourceLSI">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tLL_RCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_LSI);"/>
            </CallLibMethod>
            <Else>
                <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCSourceLSE">                
                    <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                        <HardCode Text="#t#tLL_RCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_LSE);"/>
                    </CallLibMethod>
                    <Else>
                        <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCSourceHSE">
                            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                                <HardCode Text="#t#tLL_RCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_HSE_DIV32);"/>
                            </CallLibMethod>
                        </IFCondition>
                    </Else>
                </IFCondition>
            </Else>
        </IFCondition>

        <IFCondition Expression ="RTCUsed_ForRCC &amp; RTCSourceLSE">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#t/* Restore clock configuration if changed */"/>
            </CallLibMethod>
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t#tif (pwrclkchanged == SET)#n#t#t{#n#t#t#tLL_APB1_GRP1_DisableClock(LL_AHB3_GRP1_PERIPH_PWR);#n#t#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="RTCUsed_ForRCC">
            <CallLibMethod Name="HardCode:RTC" Type="HardCode">
                <HardCode Text="#t}"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USART1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUSARTClockSource">
                <MethodArg Name="USARTxSource" ParameterName="USART1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPUARTUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetLPUARTClockSource">
                <MethodArg Name="LPUARTxSource" ParameterName="LPUART1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USART2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUSARTClockSource">
                <MethodArg Name="USARTxSource" ParameterName="USART2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USART3Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUSARTClockSource">
                <MethodArg Name="USARTxSource" ParameterName="USART3CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="USART6Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUSARTClockSource">
                <MethodArg Name="USARTxSource" ParameterName="USART6CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="UART4Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUARTClockSource">
                <MethodArg Name="UARTxSource" ParameterName="UART4CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="UART5Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUARTClockSource">
                <MethodArg Name="UARTxSource" ParameterName="UART5CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I2C1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I2C3Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C3CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I2C2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="I2C4Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C4CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="I2C5Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C5CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="I2C6Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetI2CClockSource">
                <MethodArg Name="I2CxSource" ParameterName="I2C6CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPTIM2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPTIM1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LPTIM3Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetLPTIMClockSource">
                <MethodArg Name="LPTIMxSource" ParameterName="LPTIM3CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="DSIUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetDSIClockSource">
                <MethodArg Name="DSIxSource" ParameterName="DSICLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="HSPI1_Used">
            <CallLibMethod Name="LL_RCC_SetHSPIClockSource">
                <MethodArg Name="Source" ParameterName="HSPICLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="LTDC_Used">
            <CallLibMethod Name="LL_RCC_SetLTDCClockSource">
                <MethodArg Name="Source" ParameterName="LTDCCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SAI1_SAIBUsed_ForRCC|SAI1_SAIAUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSAIClockSource">
                <MethodArg Name="SAIxSource" ParameterName="SAI1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SAI2_SAIBUsed_ForRCC|SAI2_SAIAUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSAIClockSource">
                <MethodArg Name="SAIxSource" ParameterName="SAI2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SDMMC1Used_ForRCC | SDMMC2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSDMMCKernelClockSource">
                <MethodArg Name="SDMMCxSource" ParameterName="SDMMCClockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="(SDMMC1Used_ForRCC | SDMMC2Used_ForRCC)&amp; SDMMC1SourceIsClock48">
            <CallLibMethod Name="LL_RCC_SetSDMMCClockSource">
                <MethodArg Name="SDMMCxSource" ParameterName="CK48CLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="RNGUsed_ForRCC ">
            <CallLibMethod Name="LL_RCC_SetRNGClockSource">
                <MethodArg Name="RNGxSource" ParameterName="RNGCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SAES_Used ">
            <CallLibMethod Name="LL_RCC_SetSAESClockSource">
                <MethodArg Name="Source" ParameterName="SAESSource"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="USB_OTG_FSUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUSBClockSource">
                <MethodArg Name="USBxSource" ParameterName="CK48CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="USB_OTG_HSUsed_ForRCC">
            <CallLibMethod Name="LL_RCC_SetUSBPHYClockSource">
                <MethodArg Name="USBxSource" ParameterName="USBPHYCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="(USE_ADC1 &amp;ADC1UsedAsynchronousCLK_ForRCC) | DAC1 | (USE_ADC2 &amp;ADCUsed_ForRCC) | (USE_ADC4&amp;ADCUsed_ForRCC)">
            <CallLibMethod Name="LL_RCC_SetADCDACClockSource">
                <MethodArg Name="ADCxSource" ParameterName="ADCCLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="DAC1">
            <CallLibMethod Name="LL_RCC_SetDAC1ClockSource">
                <MethodArg Name="Source" ParameterName="DACCLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        
        <IFCondition Expression ="MDF1_Used">
            <CallLibMethod Name="LL_RCC_SetMDF1ClockSource">
                <MethodArg Name="Source" ParameterName="MdfClockSelection"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="ADF1_Used">
            <CallLibMethod Name="LL_RCC_SetADF1ClockSource">
                <MethodArg Name="Source" ParameterName="AdfClockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="DFSDM1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetDFSDMClockSource">
                <MethodArg Name="DFSDMxSource" ParameterName="DFSDMCLockSelection"/>
            </CallLibMethod>
        </IFCondition>
 
        <IFCondition Expression ="DFSDM1Used_ForRCC &amp; SEM2RCC_SAI1_CK_REQUIRED_DFSDM1">
            <CallLibMethod Name="LL_RCC_SetDFSDMAudioClockSource">
                <MethodArg Name="DFSDMAudioxSource" ParameterName="DFSDMAudioCLockSelection"/>
            </CallLibMethod>
        </IFCondition>	

        <IFCondition Expression ="OCTOSPI1Used_ForRCC|OCTOSPI2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetOCTOSPIClockSource">
                <MethodArg Name="OCTOSPIxSource" ParameterName="OCTOSPIMCLockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="FDCAN1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetFDCANClockSource">
                <MethodArg Name="FDCANxSource" ParameterName="FDCANClockSelection"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="SPI1Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI1CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="SPI2Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI2CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="SPI3Used_ForRCC">
            <CallLibMethod Name="LL_RCC_SetSPIClockSource">
                <MethodArg Name="Source" ParameterName="SPI3CLockSelection"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_CommonPeriphClockConfig">
        <!--PLL2 configuration-->		
        <IFCondition Expression ="PLL2QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2_ConfigDomain_48M">
                <MethodArg Name="Source" ParameterName="PLL2Source"/>
                <MethodArg Name="PLL2M" ParameterName="PLL2M"/>
                <MethodArg Name="PLL2N" ParameterName="PLL2N"/>
                <MethodArg Name="PLL2Q" ParameterName="PLL2Q"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="PLL2PUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2_ConfigDomain_SAI">
                <MethodArg Name="Source" ParameterName="PLL2Source"/>
                <MethodArg Name="PLL2M" ParameterName="PLL2M"/>
                <MethodArg Name="PLL2N" ParameterName="PLL2N"/>
                <MethodArg Name="PLL2P" ParameterName="PLL2P"/>
            </CallLibMethod>
        </IFCondition>
		
        <IFCondition Expression ="PLL2RUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2_ConfigDomain_ADC">
                <MethodArg Name="Source" ParameterName="PLL2Source"/>
                <MethodArg Name="PLL2M" ParameterName="PLL2M"/>
                <MethodArg Name="PLL2N" ParameterName="PLL2N"/>
                <MethodArg Name="PLL2R" ParameterName="PLL2R"/>
            </CallLibMethod>
        </IFCondition>
        <!--PLL2 activation-->
        <IFCondition Expression ="PLL2QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2_EnableDomain_48M"/>
        </IFCondition>
		
        <IFCondition Expression ="PLL2RUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2_EnableDomain_ADC"/>
        </IFCondition> 

        <IFCondition Expression ="PLL2PUsed=1">
            <CallLibMethod Name="LL_RCC_PLL2_EnableDomain_SAI"/>
        </IFCondition>
        <IFCondition Expression ="PLL2Used=1">
            <CallLibMethod Name="LL_RCC_PLL2_SetVCOInputRange">
                <MethodArg Name="InputRange" ParameterName="PLL2_VCI_Range"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="PLL2Used=1">
            <CallLibMethod Name="LL_RCC_PLL2_Enable"/>
   
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till PLL2 is ready */#n#twhile(LL_RCC_PLL2_IsReady() != 1)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="PLL2Used=1  &amp; !(PLL2FRACN=0)">
            <CallLibMethod Name="LL_RCC_PLL2FRACN_Enable"/>
            <CallLibMethod Name="LL_RCC_PLL2_SetFRACN">
                <MethodArg Name="div" ParameterName="PLL2FRACN"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="PLL2Used=1 &amp; PLL3Used=1">
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n"/>
            </CallLibMethod>
        </IFCondition>

        <!--PLL3 configuration-->		
        <IFCondition Expression ="(PLL3PUsed=1)">
            <CallLibMethod Name="LL_RCC_PLL3_ConfigDomain_SAI">
                <MethodArg Name="Source" ParameterName="PLL3Source"/>
                <MethodArg Name="PLL3M" ParameterName="PLL3M"/>
                <MethodArg Name="PLL3N" ParameterName="PLL3N"/>
                <MethodArg Name="PLL3P" ParameterName="PLL3P"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="(PLL3RUsed=1)">
            <CallLibMethod Name="LL_RCC_PLL3_ConfigDomain_HSPI_LTDC">
                <MethodArg Name="Source" ParameterName="PLL3Source"/>
                <MethodArg Name="PLL3M" ParameterName="PLL3M"/>
                <MethodArg Name="PLL3N" ParameterName="PLL3N"/>
                <MethodArg Name="PLL3P" ParameterName="PLL3R"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="PLL3QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL3_ConfigDomain_48M">
                <MethodArg Name="Source" ParameterName="PLL3Source"/>
                <MethodArg Name="PLL3M" ParameterName="PLL3M"/>
                <MethodArg Name="PLL3N" ParameterName="PLL3N"/>
                <MethodArg Name="PLL3Q" ParameterName="PLL3Q"/>
            </CallLibMethod>
        </IFCondition>        

        <!--PLL3 activation-->
        <IFCondition Expression ="PLL3PUsed=1">
            <CallLibMethod Name="LL_RCC_PLL3_EnableDomain_SAI"/>
        </IFCondition>
        <IFCondition Expression ="PLL3QUsed=1">
            <CallLibMethod Name="LL_RCC_PLL3_EnableDomain_48M"/>
        </IFCondition>
        <IFCondition Expression ="PLL3RUsed=1">
            <CallLibMethod Name="LL_RCC_PLL3_EnableDomain_HSPI_LTDC"/>
        </IFCondition>        
        <IFCondition Expression ="PLL3Used=1">
            <CallLibMethod Name="LL_RCC_PLL3_SetVCOInputRange">
                <MethodArg Name="InputRange" ParameterName="PLL3_VCI_Range"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression ="PLL3Used=1">
            <CallLibMethod Name="LL_RCC_PLL3_Enable"/>
     
            <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#t /* Wait till PLL3 is ready */#n#twhile(LL_RCC_PLL3_IsReady() != 1)#n#t{#n#t}"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="PLL3Used=1  &amp; !(PLL3FRACN=0)">
            <CallLibMethod Name="LL_RCC_PLL3FRACN_Enable"/>
            <CallLibMethod Name="LL_RCC_PLL3_SetFRACN">
                <MethodArg Name="div" ParameterName="PLL3FRACN"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression ="USB_OTG_HSUsed_ForRCC &amp; OTG_DUAL_ROL_DEVICE_HS_FS">
            <CallLibMethod Name="LL_RCC_SetUSBPHYClockSource">
                <MethodArg Name="USBxSource" ParameterName="USBPHYCLockSelection"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_LSCOConfig">
        <!--LSCO  code gen-->
        <IFCondition Expression ="LSCOConfig">
            <CallLibMethod Name="LL_RCC_LSCO_Enable"/>
        </IFCondition>

        <IFCondition Expression ="LSCOConfig">
            <CallLibMethod Name="LL_RCC_LSCO_SetSource">
                <MethodArg Name="Source" ParameterName="LSCOSource1"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="RCC_CSS_Enable">
        <!--CSS enable code gen-->
        <IFCondition Expression ="CSSEnabled">
            <CallLibMethod Name="LL_RCC_HSE_EnableCSS"/>
        </IFCondition>
		
        <IFCondition Expression ="RCC_LSECSS_ENABLED">
            <CallLibMethod Name="LL_RCC_LSE_EnableCSS"/>
        </IFCondition>        
    </RefConfig>

    <RefConfig Name="RCC_CRSConfig">
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_CRS_SetSyncDivider">
                <MethodArg Name="Divider" ParameterName="Prescaler"/>
            </CallLibMethod>
            
            <CallLibMethod Name="LL_CRS_SetSyncPolarity">
                <MethodArg Name="Divider" ParameterName="Polarity"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_CRS_SetSyncSignalSource">
                <MethodArg Name="Source" ParameterName="Source"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_CRS_SetReloadCounter">
                <MethodArg Name="Value" ParameterName="ReloadValueARGLL"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_CRS_SetFreqErrorLimit">
                <MethodArg Name="Value" ParameterName="ErrorLimitValue"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_CRS_SetHSI48SmoothTrimming">
                <MethodArg Name="Value" ParameterName="HSI48CalibrationValue"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>
    <RefConfig Name="CRS_CLK_ENABLE">
        <IFCondition Expression ="EnableCRS">
            <CallLibMethod Name="LL_AHB3_GRP1_EnableClock">
                <MethodArg Name="Periphs" FValue="LL_APB1_GRP1_PERIPH_CRS"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_APB1_GRP1_ForceReset">
                <MethodArg Name="Periphs" FValue="LL_APB1_GRP1_PERIPH_CRS"/>
            </CallLibMethod>
        
            <CallLibMethod Name="LL_APB1_GRP1_ReleaseReset">
                <MethodArg Name="Periphs" FValue="LL_APB1_GRP1_PERIPH_CRS"/>
            </CallLibMethod>
        </IFCondition>         
    </RefConfig>
    
    <RefConfig Comment="Set the OTG PHY reference clock selection" Name="USB_OTG_PHY_CLK_CONFIG">
        <CallLibMethod Name="HAL_SYSCFG_SetOTGPHYReferenceClockSelection" ReturnHAL="false">
            <MethodArg Name="RefClockSelection" ParameterName="USBRefClockSelection"/>
        </CallLibMethod>
    </RefConfig>

    <LibMethod Comment="" Name="LL_PWR_SetRegulVoltageScaling">
        <Argument AddressOf="false" GenericType="simple" Name="VoltageScaling"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_FLASH_SetLatency">
        <Argument AddressOf="false" GenericType="simple" Name="FLatency"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_LSE_SetDriveCapability">
        <Argument AddressOf="false" GenericType="simple" Name="LSEDrive"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_HSE_EnableCSS"/>
          
    <LibMethod Comment="" Name="LL_RCC_HSE_EnableBypass" />
    
    <LibMethod Comment="" Name="LL_RCC_HSE_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_HSE_SetClockMode">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_HSI_Enable"/>
    
    <LibMethod Comment="" Name="LL_RCC_HSI48_Enable"/>
  
    <LibMethod Comment="" Name="LL_RCC_LSE_Enable"/>    
    <LibMethod Comment="" Name="LL_RCC_LSE_EnablePropagation"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSE_EnableBypass"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSE_EnableCSS"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSI_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_MSIS_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_MSIK_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_MSI_EnablePLLMode"/>
	
    <LibMethod Comment="" Name="LL_RCC_MSI_EnableRangeSelection">
     
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_MSIS_SetRange">
        <Argument AddressOf="false" GenericType="simple" Name="Range"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_MSIK_SetRange">
        <Argument AddressOf="false" GenericType="simple" Name="Range"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_MSI_SetCalibTrimming">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
        <Argument AddressOf="false" GenericType="simple" Name="Oscillator"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_HSI_SetCalibTrimming">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_LSCO_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_LSCO_SetSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSysClkSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetAHBPrescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetAPB1Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetAPB2Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetAPB3Prescaler">
        <Argument AddressOf="false" GenericType="simple" Name="Prescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_ConfigMCO">
        <Argument AddressOf="false" GenericType="simple" Name="MCOxSource"/>
        <Argument AddressOf="false" GenericType="simple" Name="MCOxPrescaler"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetUSARTClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="USARTxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetLPUARTClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="LPUARTxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetUARTClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="UARTxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetI2CClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="I2CxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetLPTIMClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="LPTIMxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSAIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="SAIxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetSDMMCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="SDMMCxSource"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetSDMMCKernelClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="SDMMCxSource"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetOCTOSPIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="OCTOSPIxSource"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetDFSDMAudioClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="DFSDMAudioxSource"/>
    </LibMethod>
    
    <LibMethod Comment="" Name="LL_RCC_PLL3_EnableDomain_LTDC"/>
    <LibMethod Comment="" Name="LL_PWR_EnableRange1BoostMode"/>
	
    <LibMethod Comment="" Name="LL_RCC_SetRNGClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="RNGxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetUSBClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="USBxSource"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetUSBPHYClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="USBxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetADCDACClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="ADCxSource"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetDAC1ClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetFDCANClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="FDCANxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetDFSDMClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="DFSDMxSource"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_SetRTCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_EnableRTC"/>
	
    <LibMethod Comment="" Name="LL_PWR_EnableBkUpAccess"/>
    <LibMethod Comment="" Name="#tLL_RCC_ForceBackupDomainReset"/>
    <LibMethod Comment="" Name="#tLL_RCC_ReleaseBackupDomainReset"/>
    <LibMethod Comment="" Name="LL_RCC_SHSI_Enable"/>    
    <LibMethod Comment="" Name="LL_RCC_PLL1_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL1_ConfigDomain_SYS">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLM"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLN"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLR"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_PLL1_ConfigDomain_SAI">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLM"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLN"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLP"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_PLL1_ConfigDomain_48M">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLM"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLN"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLLQ"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_PLL1_EnableDomain_SYS"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL1_EnableDomain_SAI"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL1_EnableDomain_48M"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL2_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL2_ConfigDomain_48M">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2M"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2N"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2Q"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_ConfigDomain_48M">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3M"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3N"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3Q"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_PLL2_ConfigDomain_SAI">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2M"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2N"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2P"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_PLL2_ConfigDomain_ADC">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2M"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2N"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL2R"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_PLL2_EnableDomain_48M"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3_EnableDomain_48M"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3_EnableDomain_HSPI_LTDC"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL2_EnableDomain_ADC"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL2_EnableDomain_SAI"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL3_Enable"/>
	
    <LibMethod Comment="" Name="LL_RCC_PLL3_ConfigDomain_SAI">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3M"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3N"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3P"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_ConfigDomain_HSPI_LTDC">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3M"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3N"/>
        <Argument AddressOf="false" GenericType="simple" Name="PLL3R"/>
    </LibMethod>
	
    <LibMethod Comment="" Name="LL_RCC_PLL3_EnableDomain_SAI"/>
	
    <LibMethod Comment="" Name="LL_SetSystemCoreClock">
        <Argument AddressOf="false" GenericType="simple" Name="HCLKFrequency"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_Init1msTick">
        <Argument AddressOf="false" GenericType="simple" Name="HCLKFrequency"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_AHB3_GRP1_EnableClock">
        <Argument AddressOf="false" GenericType="simple" Name="Periphs"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_APB1_GRP1_ForceReset">
        <Argument AddressOf="false" GenericType="simple" Name="Periphs"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_APB1_GRP1_ReleaseReset">
        <Argument AddressOf="false" GenericType="simple" Name="Periphs"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_AHB3_GRP1_DisableClock">
        <Argument AddressOf="false" GenericType="simple" Name="Periphs"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetSyncDivider">
        <Argument AddressOf="false" GenericType="simple" Name="Divider"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetSyncPolarity">
        <Argument AddressOf="false" GenericType="simple" Name="Polarity"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetSyncSignalSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetReloadCounter">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetFreqErrorLimit">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_CRS_SetHSI48SmoothTrimming">
        <Argument AddressOf="false" GenericType="simple" Name="Value"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_EnableSecPrivilegedMode"/>
    <LibMethod Comment="" Name="LL_RCC_EnableNSecPrivilegedMode"/>
    <LibMethod Comment="" Name="LL_RCC_ConfigSecure">
        <Argument AddressOf="false" GenericType="simple" Name="Configuration"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetSystickClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="SystickSource"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetMDF1ClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetADF1ClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetSPIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetPll1EPodPrescaler">
        <Argument AddressOf="false" GenericType="simple" Name="BoostDiv"/>
    </LibMethod>    
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetVCOInputRange">
        <Argument AddressOf="false" GenericType="simple" Name="InputRange"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetVCOInputRange">
        <Argument AddressOf="false" GenericType="simple" Name="InputRange"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetVCOInputRange">
        <Argument AddressOf="false" GenericType="simple" Name="InputRange"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL1_SetFRACN">
        <Argument AddressOf="false" GenericType="simple" Name="FRACN"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL2_SetFRACN">
        <Argument AddressOf="false" GenericType="simple" Name="FRACN"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL3_SetFRACN">
        <Argument AddressOf="false" GenericType="simple" Name="FRACN"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_PLL1FRACN_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL2FRACN_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_PLL3FRACN_Enable"/>
    <LibMethod Comment="" Name="LL_RCC_SetMSIPLLMode">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_RCC_SetSAESClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetDSIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="DSIxSource"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_SetHSPIClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
    
    
    <LibMethod Comment="" Name="LL_RCC_SetLTDCClockSource">
        <Argument AddressOf="false" GenericType="simple" Name="Source"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_RCC_MSIK_EnableInStopMode"/>
    <LibMethod Comment="" Name="LL_RCC_MSIK_DisableInStopMode"/>
    <LibMethod Comment="" Name="LL_RCC_HSI_EnableInStopMode"/>
    <LibMethod Comment="" Name="LL_RCC_HSI_DisableInStopMode"/>
    <LibMethod Comment="Configure the wakeup clock" Name="HAL_SYSCFG_SetOTGPHYReferenceClockSelection">
        <Argument AddressOf="false" GenericType="simple" Name="RefClockSelection" OptimizationCondition="equal"/>
    </LibMethod>
      
    <LibMethod Comment="" Name="LL_RCC_Enable_MSIPLLFAST"/>
    <RefComponent Cclass="HAL" Cgroup="RCC" Cversion="1.5.0">
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_bus.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_cortex.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_rcc.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_crs.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_system.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_utils.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_ll_utils.c"/> 
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_exti.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Src/stm32u5xx_ll_exti.c"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_pwr.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_gpio.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_dma.h"/>
        <File Category="header" Name="Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_ll_dmamux.h"/>
    </RefComponent>
</IP>
