<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="COMP" IncludeFile="stm32f3xx_ll_comp.h" Version="STM32Cube_FW_F3_V1.6.0" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">


    <RefConfig Name="Comp_Init">
        <CallLibMethod Name="LL_COMP_Init">
            <MethodArg Name="COMPx" ParameterName="Instance"/>
            <MethodArg Name="PowerMode" ParameterName="Mode"/>
            <MethodArg Name="InputPlus" ParameterName="NonInvertingInput"/>
            <MethodArg Name="InputMinus" ParameterName="InvertingInput"/>
            <MethodArg Name="InputHysteresis" ParameterName="Hysteresis"/>
            <MethodArg Name="OutputSelection" ParameterName="Output"/>
            <MethodArg Name="OutputPolarity" ParameterName="OutputPol"/>
            <MethodArg Name="OutputBlankingSource" ParameterName="BlankingSrce"/>
        </CallLibMethod>
       <IFCondition Expression="!(WindowMode=0) &amp; (WindowMode=COMP_WINDOWMODE_ENABLE) &amp; ($IpNumber=2)">
        <CallLibMethod Name="LL_COMP_SetCommonWindowMode">
           <MethodArg Name="COMPxy_COMMON"> 
                <CallLibMethod Name="__LL_COMP_COMMON_INSTANCE">
                   <MethodArg Name="COMPx" ParameterName="Instance"/>
                </CallLibMethod>
           </MethodArg> 
           <MethodArg Name="WindowMode" FValue="LL_COMP_WINDOWMODE_COMP1_INPUT_PLUS_COMMON"/>
        </CallLibMethod>
       </IFCondition>
     <IFCondition Expression="!(WindowMode=0) &amp; (WindowMode=COMP_WINDOWMODE_ENABLE) &amp; ($IpNumber=4)">
    <!--     <IFCondition Expression="$IpInstance=COMP4">-->
        <CallLibMethod Name="LL_COMP_SetCommonWindowMode">
           <MethodArg Name="COMPxy_COMMON"> 
                <CallLibMethod Name="__LL_COMP_COMMON_INSTANCE">
                   <MethodArg Name="COMPx" ParameterName="Instance"/>
                </CallLibMethod>
           </MethodArg> 
           <MethodArg Name="WindowMode" FValue="LL_COMP_WINDOWMODE_COMP3_INPUT_PLUS_COMMON"/>
        </CallLibMethod>
       </IFCondition>
       <IFCondition Expression="!(WindowMode=0) &amp; (WindowMode=COMP_WINDOWMODE_ENABLE) &amp; ($IpNumber=6)">
        <CallLibMethod Name="LL_COMP_SetCommonWindowMode">
           <MethodArg Name="COMPxy_COMMON"> 
                <CallLibMethod Name="__LL_COMP_COMMON_INSTANCE">
                   <MethodArg Name="COMPx" ParameterName="Instance"/>
                </CallLibMethod>
           </MethodArg> 
           <MethodArg Name="WindowMode" FValue="LL_COMP_WINDOWMODE_COMP5_INPUT_PLUS_COMMON"/>
        </CallLibMethod>
       </IFCondition>
       <IFCondition Expression="!(WindowMode=0) &amp; (WindowMode=COMP_WINDOWMODE_DISABLE) &amp; (($IpNumber=6)|($IpNumber=4)|($IpNumber=2))">
        <CallLibMethod Name="LL_COMP_SetCommonWindowMode">
           <MethodArg Name="COMPxy_COMMON"> 
                <CallLibMethod Name="__LL_COMP_COMMON_INSTANCE">
                   <MethodArg Name="COMPx" ParameterName="Instance"/>
                </CallLibMethod>
           </MethodArg> 
           <MethodArg Name="WindowMode" ParameterName="WindowMode"/>
        </CallLibMethod>
       </IFCondition>
        <ImplementCallBack Name="HAL_COMP_MspInit"/>
    </RefConfig>
   
    <LibMethod Comment="" Name="__LL_COMP_COMMON_INSTANCE">
	<Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_COMP_SetCommonWindowMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPxy_COMMON" TypeName="COMP_Common_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="WindowMode" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetCommonWindowMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPxy_COMMON" TypeName="COMP_Common_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_ConfigInputs">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="InputMinus" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="InputPlus" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetInputPlus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="InputPlus" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetInputPlus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetInputMinus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="InputMinus" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetInputMinus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetInputHysteresis">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="InputHysteresis" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetInputHysteresis">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetPowerMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="PowerMode" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetPowerMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetOutputSelection">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="OutputSelection" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetOutputSelection">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetOutputPolarity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="OutputPolarity" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetOutputPolarity">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetOutputBlankingSource">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="BlankingSource" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetOutputBlankingSource">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_DeInit">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_Init">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="true" GenericType="struct" Name="COMP_InitStruct" TypeName="LL_COMP_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="PowerMode" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputPlus" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputMinus" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputHysteresis" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OutputSelection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OutputPolarity" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OutputBlankingSource" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_StructInit">
        <Argument AddressOf="true" GenericType="struct" Name="COMP_InitStruct" TypeName="LL_COMP_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="PowerMode" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputPlus" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputMinus" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputHysteresis" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OutputSelection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OutputPolarity" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OutputBlankingSource" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_Disable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_IsEnabled">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_Lock">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_IsLocked">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_ReadOutputLevel">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <RefComponent Cclass="LL" Cgroup="COMP" Cversion="1.6.0">
        <File Category="header" Name="Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_comp.h"/>
        <File Category="source" Name="Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_ll_comp.c"/>
    </RefComponent>
</IP>
