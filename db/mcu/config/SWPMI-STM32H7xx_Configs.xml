<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="SWPMI" Version="STM32Cube_FW_H7_V0.2.0" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">
    <RefConfig Name="Swpmi_Init">
        <CallLibMethod Name="HAL_SWPMI_Init"/>
        <ImplementCallBack Name="HAL_SWPMI_MspInit"/>
        <ImplementCallBack Name="HAL_SWPMI_MspDeInit"/>
    </RefConfig>
	<!-- this Refconfig has been added for LL support (see LLConfig file). Concerning HAL based init, it is identical to the config Swpmi_Init above -->
	<RefConfig Name="Swpmi_ExternalTransceiver_Init">
        <CallLibMethod Name="HAL_SWPMI_Init"/>
        <ImplementCallBack Name="HAL_SWPMI_MspInit"/>
        <ImplementCallBack Name="HAL_SWPMI_MspDeInit"/>
    </RefConfig>
    <RefConfig Name="Swpmi_Loopback_Init">
        <CallLibMethod Name="HAL_SWPMI_Init"/>
		<CallLibMethod Name="HAL_SWPMI_EnableLoopback"/>
        <ImplementCallBack Name="HAL_SWPMI_MspInit"/>
        <ImplementCallBack Name="HAL_SWPMI_MspDeInit"/>
    </RefConfig>
    <LibMethod Comment="" Name="HAL_SWPMI_Init">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hswpmi" TypeName="SWPMI_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="SWPMI_TypeDef"/>
            <Argument AddressOf="false" GenericType="struct" Name="Init" TypeName="SWPMI_InitTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="VoltageClass" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="BitRate" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="TxBufferingMode" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="RxBufferingMode" OptimizationCondition="equal"/>
            </Argument>
            <Argument AddressOf="true" GenericType="simple" Name="pTxBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TxXferSize" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TxXferCount" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pRxBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="RxXferSize" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="RxXferCount" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmatx" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmarx" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
	<LibMethod Comment="" Name="HAL_SWPMI_EnableLoopback">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hswpmi" TypeName="SWPMI_HandleTypeDef">
         <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="SWPMI_TypeDef"/>
            <Argument AddressOf="false" GenericType="struct" Name="Init" TypeName="SWPMI_InitTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="VoltageClass" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="BitRate" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="TxBufferingMode" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="RxBufferingMode" OptimizationCondition="equal"/>
            </Argument>
            <Argument AddressOf="true" GenericType="simple" Name="pTxBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TxXferSize" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TxXferCount" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pRxBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="RxXferSize" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="RxXferCount" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmatx" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmarx" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
		</Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_SWPMI_MspInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hswpmi" TypeName="SWPMI_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="SWPMI_TypeDef"/>
            <Argument AddressOf="false" GenericType="struct" Name="Init" TypeName="SWPMI_InitTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="VoltageClass" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="BitRate" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="TxBufferingMode" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="RxBufferingMode" OptimizationCondition="equal"/>
            </Argument>
            <Argument AddressOf="true" GenericType="simple" Name="pTxBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TxXferSize" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TxXferCount" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pRxBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="RxXferSize" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="RxXferCount" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmatx" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmarx" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_SWPMI_MspDeInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hswpmi" TypeName="SWPMI_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="SWPMI_TypeDef"/>
            <Argument AddressOf="false" GenericType="struct" Name="Init" TypeName="SWPMI_InitTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="VoltageClass" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="BitRate" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="TxBufferingMode" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="RxBufferingMode" OptimizationCondition="equal"/>
            </Argument>
            <Argument AddressOf="true" GenericType="simple" Name="pTxBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TxXferSize" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TxXferCount" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pRxBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="RxXferSize" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="RxXferCount" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmatx" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmarx" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <RefComponent Cclass="HAL" Cgroup="SWPMI" Cversion="0.3.0">
        <File Category="header" Name="Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_swpmi.h"/>
        <File Category="header" Name="Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_swpmi.h"/>
        <File Category="source" Name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_swpmi.c"/>
    </RefComponent>
</IP>
