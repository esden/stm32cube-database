<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP DBVersion="V4.0" Name="" Version="STM32Cube_FW_U5_V1.0" IncludeFile="" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://mcd.rou.st.com/modules.php?name=mcu" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">


    <RefConfig Name="UART_TRANSMIT_CONFIG">
        <IFCondition Expression = "1=1">
            <CallLibMethod Name="ADV_LPBAM_UART_Transmit_SetConfigQ">
                <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
                <MethodArg Name="pInstance" FValue="LPDMA1"/> 
                <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
                <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_CONFIG"/>

                <MethodArg Name="Mode" ParameterName="Mode_TX_CONFIG"/>
                <MethodArg Name="AutonomousModeState" ParameterName="AM_State_TX_CONFIG"/>
                <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_TX_CONFIG"/>
                <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_TX_CONFIG"/>
                <MethodArg Name="DataSize" ParameterName="AM_DataSize_TX_CONFIG"/>
                <MethodArg Name="WakeupIT" ParameterName="WakeupIT_TX_CONFIG"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression = "!(TriggerPolarity_TRANSMIT_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
            <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
                <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMIT_CONFIG"/>
                <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMIT_CONFIG"/>
                <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMIT_CONFIG"/>
                <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMIT_CONFIG"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_CONFIG"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

    <RefConfig Name="UART_TRANSMIT_DATA">
        <IFCondition Expression = "1=1">
            <CallLibMethod Name="ADV_LPBAM_UART_Transmit_SetDataQ">
                <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
                <MethodArg Name="pInstance" FValue="LPDMA1"/> 
                <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
                <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_DATA"/>

                <MethodArg Name="Size" ParameterName="Size"/>
                <MethodArg Name="pData" ParameterName="BufferAddress"/>

            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression = "!(TriggerPolarity_TRANSMIT_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
            <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
                <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMIT_DATA"/>
                <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMIT_DATA"/>
                <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMIT_DATA"/>
                <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMIT_DATA"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_DATA"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestInc_TRANSMIT_DATA=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestDataWidth_TRANSMIT_DATA=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMIT_DATA=DISABLE) &amp;  (UpdateSrcSecure_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestSecure_TRANSMIT_DATA=DISABLE) )">
            <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
                <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMIT_DATA"/>
                <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMIT_DATA"/>
                <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMIT_DATA"/>
                <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMIT_DATA"/>
                <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMIT_DATA"/>
                <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMIT_DATA"/>
                <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMIT_DATA"/> 
                <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMIT_DATA"/> 
                <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMIT_DATA"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_DATA"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestInc_TRANSMIT_DATA=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestDataWidth_TRANSMIT_DATA=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMIT_DATA=DISABLE))">
            <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
                <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMIT_DATA"/>
                <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMIT_DATA"/>
                <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMIT_DATA"/>
                <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMIT_DATA"/>
                <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMIT_DATA"/>
                <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMIT_DATA"/>
                <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMIT_DATA"/> 
                <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMIT_DATA"/>
                <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMIT_DATA"/> 
                <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMIT_DATA"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_DATA"/>
            </CallLibMethod>
        </IFCondition>

    </RefConfig>

    <RefConfig Name="UART_TRANSMIT">
        <IFCondition Expression = "1=1">
            <CallLibMethod Name="ADV_LPBAM_UART_Transmit_SetFullQ">
                <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
                <MethodArg Name="pInstance" FValue="LPDMA1"/> 
                <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
                <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT"/>

                <MethodArg Name="Mode" ParameterName="Mode_TX"/>
                <MethodArg Name="AutonomousModeState" ParameterName="AM_State_TX"/>
                <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_TX"/>
                <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_TX"/>
                <MethodArg Name="DataSize" ParameterName="AM_DataSize_TX"/>
                <MethodArg Name="WakeupIT" ParameterName="WakeupIT_TX"/>
                <MethodArg Name="Size" ParameterName="Size"/>
                <MethodArg Name="pData" ParameterName="BufferAddress"/>

            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression = "!(TriggerPolarity_TRANSMIT=LPBAM_DMA_TRIG_POLARITY_MASKED)">
            <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
                <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMIT"/>
                <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMIT"/>
                <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMIT"/>
                <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMIT"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT"/>
            </CallLibMethod>
        </IFCondition>

        <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_TRANSMIT=DISABLE) &amp; (UpdateDestInc_TRANSMIT=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMIT=DISABLE) &amp; (UpdateDestDataWidth_TRANSMIT=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMIT=DISABLE) &amp;  (UpdateSrcSecure_TRANSMIT=DISABLE) &amp; (UpdateDestSecure_TRANSMIT=DISABLE) )">
            <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
                <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMIT"/>
                <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMIT"/>
                <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMIT"/>
                <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMIT"/>
                <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMIT"/>
                <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMIT"/>
                <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMIT"/> 
                <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMIT"/>
                <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMIT"/>
                <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMIT"/>
                <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMIT"/>
                <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMIT"/>
                <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMIT"/>
                <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMIT"/> 
                <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMIT"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT"/>
            </CallLibMethod>
        </IFCondition>
        <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_TRANSMIT=DISABLE) &amp; (UpdateDestInc_TRANSMIT=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMIT=DISABLE) &amp; (UpdateDestDataWidth_TRANSMIT=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMIT=DISABLE))">
            <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
                <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMIT"/>
                <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMIT"/>
                <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMIT"/>
                <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMIT"/>
                <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMIT"/>
                <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMIT"/>
                <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMIT"/> 
                <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMIT"/>
                <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMIT"/>
                <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMIT"/>
                <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMIT"/>
                <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMIT"/>
                <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMIT"/>
                <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMIT"/> 
                <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMIT"/>
                <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT"/>
            </CallLibMethod>
        </IFCondition>
    </RefConfig>

 


 <RefConfig Name="UART_RECEIVE_CONFIG">
     <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_UART_Receive_SetConfigQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_CONFIG"/>
       
       <MethodArg Name="Mode" ParameterName="Mode_RX_CONFIG"/>
       <MethodArg Name="AutonomousModeState" ParameterName="AM_State_RX_CONFIG"/>
       <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_RX_CONFIG"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_RX_CONFIG"/>
       <MethodArg Name="DataSize" ParameterName="AM_DataSize_RX_CONFIG"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_RX_CONFIG"/>

     </CallLibMethod>
      </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_RECEIVE_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_RECEIVE_CONFIG"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_RECEIVE_CONFIG"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_RECEIVE_CONFIG"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_RECEIVE_CONFIG"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_CONFIG"/>
    </CallLibMethod>
     </IFCondition>

  </RefConfig>

  <RefConfig Name="UART_RECEIVE_DATA">
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_UART_Receive_SetDataQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_DATA"/>
       
        <MethodArg Name="Size" ParameterName="Size"/>
        <MethodArg Name="pData" ParameterName="BufferAddress"/>

     </CallLibMethod>
       </IFCondition>
         <IFCondition Expression = "!(TriggerPolarity_RECEIVE_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_RECEIVE_DATA"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_RECEIVE_DATA"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_RECEIVE_DATA"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_RECEIVE_DATA"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_DATA"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_RECEIVE_DATA=DISABLE) &amp; (UpdateDestInc_RECEIVE_DATA=DISABLE) &amp; (UpdateSrcDataWidth_RECEIVE_DATA=DISABLE) &amp; (UpdateDestDataWidth_RECEIVE_DATA=DISABLE)  &amp; (UpdateTransferEventMode_RECEIVE_DATA=DISABLE) &amp;  (UpdateSrcSecure_RECEIVE_DATA=DISABLE) &amp; (UpdateDestSecure_RECEIVE_DATA=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_RECEIVE_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_RECEIVE_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_RECEIVE_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_RECEIVE_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_RECEIVE_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_RECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_RECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_RECEIVE_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_RECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_DATA"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_RECEIVE_DATA=DISABLE) &amp; (UpdateDestInc_RECEIVE_DATA=DISABLE) &amp; (UpdateSrcDataWidth_RECEIVE_DATA=DISABLE) &amp; (UpdateDestDataWidth_RECEIVE_DATA=DISABLE)  &amp; (UpdateTransferEventMode_RECEIVE_DATA=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_RECEIVE_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_RECEIVE_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_RECEIVE_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_RECEIVE_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_RECEIVE_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_RECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_RECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_RECEIVE_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_RECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_DATA"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>

  <RefConfig Name="UART_RECEIVE">

    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_UART_Receive_SetFullQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE"/>
       
       <MethodArg Name="Mode" ParameterName="Mode_RX"/>
       <MethodArg Name="AutonomousModeState" ParameterName="AM_State_RX"/>
       <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_RX"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_RX"/>
       <MethodArg Name="DataSize" ParameterName="AM_DataSize_RX"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_RX"/>
        <MethodArg Name="Size" ParameterName="Size"/>
        <MethodArg Name="pData" ParameterName="BufferAddress"/>

     </CallLibMethod>
       </IFCondition>
         <IFCondition Expression = "!(TriggerPolarity_RECEIVE=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_RECEIVE"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_RECEIVE"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_RECEIVE"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_RECEIVE"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE"/>
    </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_RECEIVE=DISABLE) &amp; (UpdateDestInc_RECEIVE=DISABLE) &amp; (UpdateSrcDataWidth_RECEIVE=DISABLE) &amp; (UpdateDestDataWidth_RECEIVE=DISABLE)  &amp; (UpdateTransferEventMode_RECEIVE=DISABLE) &amp;  (UpdateSrcSecure_RECEIVE=DISABLE) &amp; (UpdateDestSecure_RECEIVE=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_RECEIVE"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_RECEIVE"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_RECEIVE"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_RECEIVE"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_RECEIVE"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_RECEIVE"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_RECEIVE"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_RECEIVE"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_RECEIVE"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_RECEIVE"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_RECEIVE"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_RECEIVE"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_RECEIVE"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_RECEIVE"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_RECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_RECEIVE=DISABLE) &amp; (UpdateDestInc_RECEIVE=DISABLE) &amp; (UpdateSrcDataWidth_RECEIVE=DISABLE) &amp; (UpdateDestDataWidth_RECEIVE=DISABLE)  &amp; (UpdateTransferEventMode_RECEIVE=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_RECEIVE"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_RECEIVE"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_RECEIVE"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_RECEIVE"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_RECEIVE"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_RECEIVE"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_RECEIVE"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_RECEIVE"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_RECEIVE"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_RECEIVE"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_RECEIVE"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_RECEIVE"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_RECEIVE"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_RECEIVE"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_RECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE"/>
    </CallLibMethod>
    </IFCondition>
  </RefConfig>


<!--
LPBAM_Status_t ADV_LPBAM_UART_Transmit_SetConfigQ(USART_TypeDef              *const pInstance,
                                                  LPBAM_DMAListInfo_t        const *const pDMAListInfo,
                                                  LPBAM_UART_ConfigAdvConf_t const *const pTxConfig,
                                                  LPBAM_UART_TxConfigDesc_t  *const pDescriptor,
                                                  DMA_QListTypeDef           *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_UART_Transmit_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxConfig" TypeName="LPBAM_UART_ConfigAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="Mode"/>
       <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_UART_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="AutonomousModeState"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
           <Argument AddressOf="false" GenericType="simple" Name="DataSize"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_UART_TxConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>



<!--
LPBAM_Status_t ADV_LPBAM_UART_Transmit_SetDataQ(USART_TypeDef            *const pInstance,
                                                LPBAM_DMAListInfo_t      const *const pDMAListInfo,
                                                LPBAM_UART_DataAdvConf_t const *const pTxData,
                                                LPBAM_UART_TxDataDesc_t  *const pDescriptor,
                                                DMA_QListTypeDef         *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_UART_Transmit_SetDataQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxData" TypeName="LPBAM_UART_DataAdvConf_t">
       <Argument AddressOf="true" GenericType="simple" Name="pData"/>
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_UART_TxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>


<!--
LPBAM_Status_t ADV_LPBAM_UART_Transmit_SetFullQ(USART_TypeDef            *const pInstance,
                                                LPBAM_DMAListInfo_t      const *const pDMAListInfo,
                                                LPBAM_UART_FullAdvConf_t const *const pTxFull,
                                                LPBAM_UART_TxFullDesc_t  *const pDescriptor,
                                                DMA_QListTypeDef         *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_UART_Transmit_SetFullQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxFull" TypeName="LPBAM_UART_FullAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="Mode"/>
       <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_UART_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="AutonomousModeState"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
           <Argument AddressOf="false" GenericType="simple" Name="DataSize"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>
       <Argument AddressOf="true" GenericType="simple" Name="pData"/>
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_UART_TxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>



<!--
LPBAM_Status_t ADV_LPBAM_UART_Receive_SetConfigQ(USART_TypeDef              *const pInstance,
                                                 LPBAM_DMAListInfo_t        const *const pDMAListInfo,
                                                 LPBAM_UART_ConfigAdvConf_t const *const pRxConfig,
                                                 LPBAM_UART_RxConfigDesc_t  *const pDescriptor,
                                                 DMA_QListTypeDef           *const pQueue);
-->

<LibMethod Comment="" Name="ADV_LPBAM_UART_Receive_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxConfig" TypeName="LPBAM_UART_ConfigAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="Mode"/>
       <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_UART_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="AutonomousModeState"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
           <Argument AddressOf="false" GenericType="simple" Name="DataSize"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>  
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_UART_RxConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>


<!--
LPBAM_Status_t ADV_LPBAM_UART_Receive_SetDataQ(USART_TypeDef            *const pInstance,
                                               LPBAM_DMAListInfo_t      const *const pDMAListInfo,
                                               LPBAM_UART_DataAdvConf_t const *const pRxData,
                                               LPBAM_UART_RxDataDesc_t  *const pDescriptor,
                                               DMA_QListTypeDef         *const pQueue);
-->

<LibMethod Comment="" Name="ADV_LPBAM_UART_Receive_SetDataQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxData" TypeName="LPBAM_UART_DataAdvConf_t">
       <Argument AddressOf="true" GenericType="simple" Name="pData"/>
       <Argument AddressOf="false" GenericType="simple" Name="Size"/>  
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_UART_RxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>


<!--
LPBAM_Status_t ADV_LPBAM_UART_Receive_SetFullQ(USART_TypeDef            *const pInstance,
                                               LPBAM_DMAListInfo_t      const *const pDMAListInfo,
                                               LPBAM_UART_FullAdvConf_t const *const pRxFull,
                                               LPBAM_UART_RxFullDesc_t  *const pDescriptor,
                                               DMA_QListTypeDef         *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_UART_Receive_SetFullQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxFull" TypeName="LPBAM_UART_FullAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="Mode"/>
       <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_UART_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="AutonomousModeState"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
           <Argument AddressOf="false" GenericType="simple" Name="DataSize"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>
       <Argument AddressOf="true" GenericType="simple" Name="pData"/>
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_UART_RxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>





<!--LPBAM_Status_t ADV_LPBAM_Q_SetDataConfig(LPBAM_COMMON_DataAdvConf_t const *const pDataConfig,
                                         uint32_t                   DataNode,
                                         void                       const *const pDescriptor);

-->

  <LibMethod Comment="" Name="ADV_LPBAM_Q_SetDataConfig">
    <Argument AddressOf="true" GenericType="struct" Name="pDataConfig" TypeName="LPBAM_COMMON_DataAdvConf_t">
      <Argument AddressOf="true" GenericType="struct" Name="TransferConfig" TypeName="LPBAM_DMA_NodeConfTypeDef">
        <Argument AddressOf="true" GenericType="struct" Name="Transfer" TypeName="LPBAM_DMA_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="SrcInc"/>
            <Argument AddressOf="false" GenericType="simple" Name="DestInc"/>
            <Argument AddressOf="false" GenericType="simple" Name="SrcDataWidth"/>
            <Argument AddressOf="false" GenericType="simple" Name="DestDataWidth"/>
            <Argument AddressOf="false" GenericType="simple" Name="TransferEventMode"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="SrcSecure"/>  
        <Argument AddressOf="false" GenericType="simple" Name="DestSecure"/> 
      </Argument> 
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcInc"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestInc"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcDataWidth"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestDataWidth"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateTransferEventMode"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcSecure"/>  
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestSecure"/>
    </Argument>   

    <Argument AddressOf="false" GenericType="simple" Name="DataNode"/>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="DONTCARE" Optional="output">
      <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>   
 </LibMethod>







<!--LPBAM_Status_t ADV_LPBAM_Q_SetTriggerConfig(LPBAM_COMMON_TrigAdvConf_t const *const pTrigConfig,
                                            uint32_t                   NodeLevel,
                                            void                       const *const pDescriptor);
-->
   <LibMethod Comment="" Name="ADV_LPBAM_Q_SetTriggerConfig">
     <Argument AddressOf="true" GenericType="struct" Name="pTrigConfig" TypeName="LPBAM_COMMON_TrigAdvConf_t">
      <Argument AddressOf="true" GenericType="struct" Name="TriggerConfig" TypeName="LPBAM_DMA_TriggerConfTypeDef">
         <Argument AddressOf="false" GenericType="simple" Name="TriggerMode"/>  
         <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/> 
         <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/> 
      </Argument>  
    </Argument>   

    <Argument AddressOf="false" GenericType="simple" Name="NodeLevel"/>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="DONTCARE" Optional="output">
      <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>   
  </LibMethod>



  <RefComponent Cclass="HAL" Cgroup="LPBAM" Cversion="1.0">
    <File Category="header" Name="Utilities/lpbam/STM32U5/stm32_platform_lpbam_uart.h"/>
    <File Category="header" Name="Utilities/lpbam/stm32_adv_lpbam_uart.h"/>
    <File Category="header" Name="Utilities/lpbam/stm32_adv_lpbam_common.h"/>
    <File Category="source" Name="Utilities/lpbam/stm32_adv_lpbam_uart.c"/>
    <File Category="source" Name="Utilities/lpbam/stm32_adv_lpbam_common.c"/>
    <File Category="header" Name="Utilities/lpbam/STM32U5/stm32_platform_lpbam_uart.h"/>
    <File Category="header" Name="Utilities/lpbam/stm32_lpbam_uart.h"/>
    <File Category="source" Name="Utilities/lpbam/stm32_lpbam_uart.c"/>  
  </RefComponent>

</IP>
