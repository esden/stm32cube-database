<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP DBVersion="V4.0" Name="" Version="STM32Cube_FW_U5_V1.0" IncludeFile="" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://mcd.rou.st.com/modules.php?name=mcu" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">


  <RefConfig Name="SPI_TRANSMIT_CONFIG">
   <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_SPI_Tx_SetConfigQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_CONFIG"/>
       <MethodArg Name="CLKPolarity" ParameterName="CLKPolarity_TRANSMIT_CONFIG"/>
       <MethodArg Name="CLKPhase" ParameterName="CLKPhase_TRANSMIT_CONFIG"/>
       <MethodArg Name="FirstBit" ParameterName="FirstBit_TRANSMIT_CONFIG"/>
       <MethodArg Name="BaudRatePrescaler" ParameterName="BaudRatePrescaler_TRANSMIT_CONFIG"/>
       <MethodArg Name="DataSize" ParameterName="DataSize_TRANSMIT_CONFIG"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState_TRANSMIT_CONFIG"/>
       <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_TRANSMIT_CONFIG"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_TRANSMIT_CONFIG"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_TRANSMIT_CONFIG"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_TRANSMIT_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMIT_CONFIG"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMIT_CONFIG"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMIT_CONFIG"/>
       <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMIT_CONFIG"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_CONFIG"/>
     </CallLibMethod>
    </IFCondition>
  </RefConfig>

  <RefConfig Name="SPI_TRANSMIT_DATA">
    <IFCondition Expression = "1=1">
     <CallLibMethod Name="ADV_LPBAM_SPI_Tx_SetDataQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_DATA"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState"/>       
       <MethodArg Name="DataSize" ParameterName="DataSize_TRANSMIT_DATA"/>
       <MethodArg Name="Size" ParameterName="Size_TRANSMIT_DATA"/>
       <MethodArg Name="pTxData" ParameterName="WDBufferAddr_TRANSMIT_DATA"/>
       <MethodArg Name="pRxData" ParameterName="RDBufferAddr_TRANSMIT_DATA"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_TRANSMIT_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMIT_DATA"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMIT_DATA"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMIT_DATA"/>
        <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMIT_DATA"/>
        <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_DATA"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestInc_TRANSMIT_DATA=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestDataWidth_TRANSMIT_DATA=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMIT_DATA=DISABLE) &amp;  (UpdateSrcSecure_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestSecure_TRANSMIT_DATA=DISABLE) )">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMIT_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMIT_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMIT_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMIT_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMIT_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMIT_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMIT_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMIT_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMIT_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_DATA"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestInc_TRANSMIT_DATA=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMIT_DATA=DISABLE) &amp; (UpdateDestDataWidth_TRANSMIT_DATA=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMIT_DATA=DISABLE))">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMIT_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMIT_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMIT_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMIT_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMIT_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMIT_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMIT_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMIT_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMIT_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT_DATA"/>
     </CallLibMethod>
    </IFCondition>
  </RefConfig>

  <RefConfig Name="SPI_TRANSMIT">
    <IFCondition Expression = "1=1">
     <CallLibMethod Name="ADV_LPBAM_SPI_Tx_SetFullQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT"/>
       <MethodArg Name="CLKPolarity" ParameterName="CLKPolarity_TRANSMIT"/>
       <MethodArg Name="CLKPhase" ParameterName="CLKPhase_TRANSMIT"/>
       <MethodArg Name="FirstBit" ParameterName="FirstBit_TRANSMIT"/>
       <MethodArg Name="BaudRatePrescaler" ParameterName="BaudRatePrescaler_TRANSMIT"/>
       <MethodArg Name="DataSize" ParameterName="DataSize_TRANSMIT"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState_TRANSMIT"/>
       <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_TRANSMIT"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_TRANSMIT"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_TRANSMIT"/>
       <MethodArg Name="Size" ParameterName="Size_TRANSMIT"/>
       <MethodArg Name="pTxData" ParameterName="WDBufferAddr_TRANSMIT"/>
       <MethodArg Name="pRxData" ParameterName="RDBufferAddr_TRANSMIT"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_TRANSMIT=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMIT"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMIT"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMIT"/>
       <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMIT"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_TRANSMIT=DISABLE) &amp; (UpdateDestInc_TRANSMIT=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMIT=DISABLE) &amp; (UpdateDestDataWidth_TRANSMIT=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMIT=DISABLE) &amp;  (UpdateSrcSecure_TRANSMIT=DISABLE) &amp; (UpdateDestSecure_TRANSMIT=DISABLE) )">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMIT"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMIT"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMIT"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMIT"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMIT"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMIT"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMIT"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMIT"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMIT"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMIT"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMIT"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMIT"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMIT"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMIT"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMIT"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_TRANSMIT=DISABLE) &amp; (UpdateDestInc_TRANSMIT=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMIT=DISABLE) &amp; (UpdateDestDataWidth_TRANSMIT=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMIT=DISABLE))">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMIT"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMIT"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMIT"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMIT"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMIT"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMIT"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMIT"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMIT"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMIT"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMIT"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMIT"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMIT"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMIT"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMIT"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMIT"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMIT"/>
     </CallLibMethod>
    </IFCondition>
  </RefConfig>

  <RefConfig Name="SPI_RECEIVE_CONFIG">
    <IFCondition Expression = "1=1">
     <CallLibMethod Name="ADV_LPBAM_SPI_Rx_SetConfigQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_CONFIG"/>
       <MethodArg Name="CLKPolarity" ParameterName="CLKPolarity_RECEIVE_CONFIG"/>
       <MethodArg Name="CLKPhase" ParameterName="CLKPhase_RECEIVE_CONFIG"/>
       <MethodArg Name="FirstBit" ParameterName="FirstBit_RECEIVE_CONFIG"/>
       <MethodArg Name="BaudRatePrescaler" ParameterName="BaudRatePrescaler_RECEIVE_CONFIG"/>
       <MethodArg Name="DataSize" ParameterName="DataSize_RECEIVE_CONFIG"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState_RECEIVE_CONFIG"/>
       <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_RECEIVE_CONFIG"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_RECEIVE_CONFIG"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_RECEIVE_CONFIG"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_RECEIVE_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_RECEIVE_CONFIG"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_RECEIVE_CONFIG"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_RECEIVE_CONFIG"/>
       <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_RECEIVE_CONFIG"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_CONFIG"/>
     </CallLibMethod>
    </IFCondition>
  </RefConfig>

  <RefConfig Name="SPI_RECEIVE_DATA">
    <IFCondition Expression = "1=1">
     <CallLibMethod Name="ADV_LPBAM_SPI_Rx_SetDataQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_DATA"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState"/>
       <MethodArg Name="DataSize" ParameterName="DataSize_RECEIVE_DATA"/>
       <MethodArg Name="Size" ParameterName="Size_RECEIVE_DATA"/>
       <MethodArg Name="pTxData" ParameterName="WDBufferAddr_RECEIVE_DATA"/>
       <MethodArg Name="pRxData" ParameterName="RDBufferAddr_RECEIVE_DATA"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_RECEIVE_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_RECEIVE_DATA"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_RECEIVE_DATA"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_RECEIVE_DATA"/>
       <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_RECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_DATA"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_RECEIVE_DATA=DISABLE) &amp; (UpdateDestInc_RECEIVE_DATA=DISABLE) &amp; (UpdateSrcDataWidth_RECEIVE_DATA=DISABLE) &amp; (UpdateDestDataWidth_RECEIVE_DATA=DISABLE)  &amp; (UpdateTransferEventMode_RECEIVE_DATA=DISABLE) &amp;  (UpdateSrcSecure_RECEIVE_DATA=DISABLE) &amp; (UpdateDestSecure_RECEIVE_DATA=DISABLE) )">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_RECEIVE_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_RECEIVE_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_RECEIVE_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_RECEIVE_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_RECEIVE_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_RECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_RECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_RECEIVE_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_RECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_DATA"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_RECEIVE_DATA=DISABLE) &amp; (UpdateDestInc_RECEIVE_DATA=DISABLE) &amp; (UpdateSrcDataWidth_RECEIVE_DATA=DISABLE) &amp; (UpdateDestDataWidth_RECEIVE_DATA=DISABLE)  &amp; (UpdateTransferEventMode_RECEIVE_DATA=DISABLE))">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_RECEIVE_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_RECEIVE_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_RECEIVE_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_RECEIVE_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_RECEIVE_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_RECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_RECEIVE_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_RECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_RECEIVE_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_RECEIVE_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_RECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE_DATA"/>
     </CallLibMethod>
    </IFCondition>
  </RefConfig>

  <RefConfig Name="SPI_RECEIVE">
    <IFCondition Expression = "1=1">
     <CallLibMethod Name="ADV_LPBAM_SPI_Rx_SetFullQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE"/>
       <MethodArg Name="CLKPolarity" ParameterName="CLKPolarity_RECEIVE"/>
       <MethodArg Name="CLKPhase" ParameterName="CLKPhase_RECEIVE"/>
       <MethodArg Name="FirstBit" ParameterName="FirstBit_RECEIVE"/>
       <MethodArg Name="BaudRatePrescaler" ParameterName="BaudRatePrescaler_RECEIVE"/>
       <MethodArg Name="DataSize" ParameterName="DataSize_RECEIVE"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState_RECEIVE"/>
       <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_RECEIVE"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_RECEIVE"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_RECEIVE"/>
       <MethodArg Name="Size" ParameterName="Size_RECEIVE"/>
       <MethodArg Name="pTxData" ParameterName="WDBufferAddr_RECEIVE"/>
       <MethodArg Name="pRxData" ParameterName="RDBufferAddr_RECEIVE"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_RECEIVE=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_RECEIVE"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_RECEIVE"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_RECEIVE"/>
       <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_RECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE"/>
     </CallLibMethod>
    </IFCondition>

      <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_RECEIVE=DISABLE) &amp; (UpdateDestInc_RECEIVE=DISABLE) &amp; (UpdateSrcDataWidth_RECEIVE=DISABLE) &amp; (UpdateDestDataWidth_RECEIVE=DISABLE)  &amp; (UpdateTransferEventMode_RECEIVE=DISABLE) &amp;  (UpdateSrcSecure_RECEIVE=DISABLE) &amp; (UpdateDestSecure_RECEIVE=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_RECEIVE"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_RECEIVE"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_RECEIVE"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_RECEIVE"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_RECEIVE"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_RECEIVE"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_RECEIVE"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_RECEIVE"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_RECEIVE"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_RECEIVE"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_RECEIVE"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_RECEIVE"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_RECEIVE"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_RECEIVE"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_RECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_RECEIVE=DISABLE) &amp; (UpdateDestInc_RECEIVE=DISABLE) &amp; (UpdateSrcDataWidth_RECEIVE=DISABLE) &amp; (UpdateDestDataWidth_RECEIVE=DISABLE)  &amp; (UpdateTransferEventMode_RECEIVE=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_RECEIVE"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_RECEIVE"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_RECEIVE"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_RECEIVE"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_RECEIVE"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_RECEIVE"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_RECEIVE"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_RECEIVE"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_RECEIVE"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_RECEIVE"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_RECEIVE"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_RECEIVE"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_RECEIVE"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_RECEIVE"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_RECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_RECEIVE"/>
    </CallLibMethod>
    </IFCondition>
  </RefConfig>

  <RefConfig Name="SPI_TRANSMITRECEIVE_CONFIG">
    <IFCondition Expression = "1=1">
     <CallLibMethod Name="ADV_LPBAM_SPI_TxRx_SetConfigQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="CLKPolarity" ParameterName="CLKPolarity_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="CLKPhase" ParameterName="CLKPhase_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="FirstBit" ParameterName="FirstBit_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="BaudRatePrescaler" ParameterName="BaudRatePrescaler_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="DataSize" ParameterName="DataSize_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_TRANSMITRECEIVE_CONFIG"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_TRANSMITRECEIVE_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMITRECEIVE_CONFIG"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_CONFIG"/>
     </CallLibMethod>
    </IFCondition>
  </RefConfig>

  <RefConfig Name="SPI_TRANSMITRECEIVE_DATA">
    <IFCondition Expression = "1=1">
     <CallLibMethod Name="ADV_LPBAM_SPI_TxRx_SetDataQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pTxQueue" ParameterName="QUEUE_NAME_TX"/>
       <MethodArg Name="pRxQueue" ParameterName="QUEUE_NAME_RX"/>
       <MethodArg Name="pRxDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="pTxDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState"/>
       <MethodArg Name="DataSize" ParameterName="DataSize_TRANSMITRECEIVE_DATA"/>
       <MethodArg Name="Size" ParameterName="Size_TRANSMITRECEIVE_DATA"/>
       <MethodArg Name="pTxData" ParameterName="WDBufferAddr_TRANSMITRECEIVE_DATA"/>
       <MethodArg Name="pRxData" ParameterName="RDBufferAddr_TRANSMITRECEIVE_DATA"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_TRANSMITRECEIVE_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMITRECEIVE_DATA"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMITRECEIVE_DATA"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMITRECEIVE_DATA"/>
       <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMITRECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_DATA_TX"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_TRANSMITRECEIVE_DATA_TX=DISABLE) &amp; (UpdateDestInc_TRANSMITRECEIVE_DATA_TX=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMITRECEIVE_DATA_TX=DISABLE) &amp; (UpdateDestDataWidth_TRANSMITRECEIVE_DATA_TX=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMITRECEIVE_DATA_TX=DISABLE) &amp;  (UpdateSrcSecure_TRANSMITRECEIVE_DATA_TX=DISABLE) &amp; (UpdateDestSecure_TRANSMITRECEIVE_DATA_TX=DISABLE) )">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMITRECEIVE_DATA_TX"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMITRECEIVE_DATA_TX"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_DATA_TX"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_TRANSMITRECEIVE_DATA_TX=DISABLE) &amp; (UpdateDestInc_TRANSMITRECEIVE_DATA_TX=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMITRECEIVE_DATA_TX=DISABLE) &amp; (UpdateDestDataWidth_TRANSMITRECEIVE_DATA_TX=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMITRECEIVE_DATA_TX=DISABLE))">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMITRECEIVE_DATA_TX"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMITRECEIVE_DATA_TX"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMITRECEIVE_DATA_TX"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_DATA_TX"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_TRANSMITRECEIVE_DATA_RX=DISABLE) &amp; (UpdateDestInc_TRANSMITRECEIVE_DATA_RX=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMITRECEIVE_DATA_RX=DISABLE) &amp; (UpdateDestDataWidth_TRANSMITRECEIVE_DATA_RX=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMITRECEIVE_DATA_RX=DISABLE) &amp;  (UpdateSrcSecure_TRANSMITRECEIVE_DATA_RX=DISABLE) &amp; (UpdateDestSecure_TRANSMITRECEIVE_DATA_RX=DISABLE) )">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMITRECEIVE_DATA_RX"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMITRECEIVE_DATA_RX"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_DATA_RX"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_TRANSMITRECEIVE_DATA_RX=DISABLE) &amp; (UpdateDestInc_TRANSMITRECEIVE_DATA_RX=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMITRECEIVE_DATA_RX=DISABLE) &amp; (UpdateDestDataWidth_TRANSMITRECEIVE_DATA_RX=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMITRECEIVE_DATA_RX=DISABLE))">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMITRECEIVE_DATA_RX"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMITRECEIVE_DATA_RX"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMITRECEIVE_DATA_RX"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_DATA_RX"/>
     </CallLibMethod>
    </IFCondition>
  </RefConfig>
  
  <RefConfig Name="SPI_TRANSMITRECEIVE">
    <IFCondition Expression = "1=1">
     <CallLibMethod Name="ADV_LPBAM_SPI_TxRx_SetFullQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pTxQueue" ParameterName="QUEUE_NAME_TX"/>
       <MethodArg Name="pRxQueue" ParameterName="QUEUE_NAME_RX"/>
       <MethodArg Name="pRxDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="pTxDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="CLKPolarity" ParameterName="CLKPolarity_TRANSMITRECEIVE"/>
       <MethodArg Name="CLKPhase" ParameterName="CLKPhase_TRANSMITRECEIVE"/>
       <MethodArg Name="FirstBit" ParameterName="FirstBit_TRANSMITRECEIVE"/>
       <MethodArg Name="BaudRatePrescaler" ParameterName="BaudRatePrescaler_TRANSMITRECEIVE"/>
       <MethodArg Name="DataSize" ParameterName="DataSize_TRANSMITRECEIVE"/>
       <MethodArg Name="TriggerState" ParameterName="AM_TriggerState_TRANSMITRECEIVE"/>
       <MethodArg Name="TriggerSelection" ParameterName="AM_TriggerSelection_TRANSMITRECEIVE"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AM_TriggerPolarity_TRANSMITRECEIVE"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_TRANSMITRECEIVE"/>
       <MethodArg Name="Size" ParameterName="Size_TRANSMITRECEIVE"/>
       <MethodArg Name="pTxData" ParameterName="WDBufferAddr_TRANSMITRECEIVE"/>
       <MethodArg Name="pRxData" ParameterName="RDBufferAddr_TRANSMITRECEIVE"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!(TriggerPolarity_TRANSMITRECEIVE=LPBAM_DMA_TRIG_POLARITY_MASKED)">
     <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
       <MethodArg Name="NodeLevel" ParameterName="NodeLevel_TRANSMITRECEIVE"/>
       <MethodArg Name="TriggerMode" ParameterName="TriggerMode_TRANSMITRECEIVE"/>
       <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_TRANSMITRECEIVE"/>
       <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_TRANSMITRECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_TX"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_TRANSMITRECEIVE_TX=DISABLE) &amp; (UpdateDestInc_TRANSMITRECEIVE_TX=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMITRECEIVE_TX=DISABLE) &amp; (UpdateDestDataWidth_TRANSMITRECEIVE_TX=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMITRECEIVE_TX=DISABLE) &amp;  (UpdateSrcSecure_TRANSMITRECEIVE_TX=DISABLE) &amp; (UpdateDestSecure_TRANSMITRECEIVE_TX=DISABLE) )">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMITRECEIVE_TX"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMITRECEIVE_TX"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_TX"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_TRANSMITRECEIVE_TX=DISABLE) &amp; (UpdateDestInc_TRANSMITRECEIVE_TX=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMITRECEIVE_TX=DISABLE) &amp; (UpdateDestDataWidth_TRANSMITRECEIVE_TX=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMITRECEIVE_TX=DISABLE))">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMITRECEIVE_TX"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMITRECEIVE_TX"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMITRECEIVE_TX"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_TX"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_TRANSMITRECEIVE_RX=DISABLE) &amp; (UpdateDestInc_TRANSMITRECEIVE_RX=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMITRECEIVE_RX=DISABLE) &amp; (UpdateDestDataWidth_TRANSMITRECEIVE_RX=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMITRECEIVE_RX=DISABLE) &amp;  (UpdateSrcSecure_TRANSMITRECEIVE_RX=DISABLE) &amp; (UpdateDestSecure_TRANSMITRECEIVE_RX=DISABLE) )">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMITRECEIVE_RX"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMITRECEIVE_RX"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_RX"/>
     </CallLibMethod>
    </IFCondition>

    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_TRANSMITRECEIVE_RX=DISABLE) &amp; (UpdateDestInc_TRANSMITRECEIVE_RX=DISABLE) &amp; (UpdateSrcDataWidth_TRANSMITRECEIVE_RX=DISABLE) &amp; (UpdateDestDataWidth_TRANSMITRECEIVE_RX=DISABLE)  &amp; (UpdateTransferEventMode_TRANSMITRECEIVE_RX=DISABLE))">
     <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_TRANSMITRECEIVE_RX"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_TRANSMITRECEIVE_RX"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_TRANSMITRECEIVE_RX"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_TRANSMITRECEIVE_RX"/>
     </CallLibMethod>
    </IFCondition>
  </RefConfig>

<!--LPBAM_Status_t ADV_LPBAM_SPI_Tx_SetConfigQ(SPI_TypeDef               *const pInstance,
                                                 LPBAM_DMAListInfo_t       const *const pDMAListInfo,
                                                 LPBAM_SPI_ConfigAdvConf_t const *const pTxConfig,
                                                 LPBAM_SPI_TxConfigDesc_t  *const pDescriptor,
                                                 DMA_QListTypeDef          *const pQueue);

-->

<LibMethod Comment="" Name="ADV_LPBAM_SPI_Tx_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxConfig" TypeName="LPBAM_SPI_ConfigAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="CLKPolarity"/> 
       <Argument AddressOf="false" GenericType="simple" Name="CLKPhase"/> 
       <Argument AddressOf="false" GenericType="simple" Name="FirstBit"/> 
       <Argument AddressOf="false" GenericType="simple" Name="BaudRatePrescaler"/> 
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="true" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity" OptimizationCondition="equal"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_SPI_TxConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>



<!--LPBAM_Status_t ADV_LPBAM_SPI_Tx_SetDataQ(SPI_TypeDef             *const pInstance,
                                               LPBAM_DMAListInfo_t     const *const pDMAListInfo,
                                               LPBAM_SPI_DataAdvConf_t const *const pTxData,
                                               LPBAM_SPI_TxDataDesc_t  *const pDescriptor,
                                               DMA_QListTypeDef        *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_SPI_Tx_SetDataQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxDataStruct" TypeName="LPBAM_SPI_DataAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>           
	</Argument>
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pTxData"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pRxData"/> 
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_SPI_TxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>

<!--
LPBAM_Status_t ADV_LPBAM_SPI_Tx_SetFullQ(SPI_TypeDef             *const pInstance,
                                               LPBAM_DMAListInfo_t     const *const pDMAListInfo,
                                               LPBAM_SPI_FullAdvConf_t const *const pTxFull,
                                               LPBAM_SPI_TxFullDesc_t  *const pDescriptor,
                                               DMA_QListTypeDef        *const pQueue);
-->

<LibMethod Comment="" Name="ADV_LPBAM_SPI_Tx_SetFullQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxFull" TypeName="LPBAM_SPI_FullAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="CLKPolarity"/> 
       <Argument AddressOf="false" GenericType="simple" Name="CLKPhase"/> 
       <Argument AddressOf="false" GenericType="simple" Name="FirstBit"/> 
       <Argument AddressOf="false" GenericType="simple" Name="BaudRatePrescaler"/> 
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="true" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity" OptimizationCondition="equal"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pTxData"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pRxData"/> 
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_SPI_TxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>

<!--LPBAM_Status_t ADV_LPBAM_SPI_Rx_SetConfigQ(SPI_TypeDef               *const pInstance,
                                                LPBAM_DMAListInfo_t       const *const pDMAListInfo,
                                                LPBAM_SPI_ConfigAdvConf_t const *const pRxConfig,
                                                LPBAM_SPI_RxConfigDesc_t  *const pDescriptor,
                                                DMA_QListTypeDef          *const pQueue);
-->

<LibMethod Comment="" Name="ADV_LPBAM_SPI_Rx_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxConfig" TypeName="LPBAM_SPI_ConfigAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="CLKPolarity"/> 
       <Argument AddressOf="false" GenericType="simple" Name="CLKPhase"/> 
       <Argument AddressOf="false" GenericType="simple" Name="FirstBit"/> 
       <Argument AddressOf="false" GenericType="simple" Name="BaudRatePrescaler"/> 
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="true" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity" OptimizationCondition="equal"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_SPI_RxConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>

<!--LPBAM_Status_t ADV_LPBAM_SPI_Rx_SetDataQ(SPI_TypeDef             *const pInstance,
                                              LPBAM_DMAListInfo_t     const *const pDMAListInfo,
                                              LPBAM_SPI_DataAdvConf_t const *const pRxData,
                                              LPBAM_SPI_RxDataDesc_t  *const pDescriptor,
                                              DMA_QListTypeDef        *const pQueue);
-->

<LibMethod Comment="" Name="ADV_LPBAM_SPI_Rx_SetDataQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxDataStruct" TypeName="LPBAM_SPI_DataAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
	</Argument>
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pTxData"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pRxData"/> 
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_SPI_RxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>

<!--LPBAM_Status_t ADV_LPBAM_SPI_Rx_SetFullQ(SPI_TypeDef             *const pInstance,
                                              LPBAM_DMAListInfo_t     const *const pDMAListInfo,
                                              LPBAM_SPI_FullAdvConf_t const *const pRxFull,
                                              LPBAM_SPI_RxFullDesc_t  *const pDescriptor,
                                              DMA_QListTypeDef        *const pQueue);
-->

<LibMethod Comment="" Name="ADV_LPBAM_SPI_Rx_SetFullQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxFull" TypeName="LPBAM_SPI_FullAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="CLKPolarity"/> 
       <Argument AddressOf="false" GenericType="simple" Name="CLKPhase"/> 
       <Argument AddressOf="false" GenericType="simple" Name="FirstBit"/> 
       <Argument AddressOf="false" GenericType="simple" Name="BaudRatePrescaler"/> 
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="true" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity" OptimizationCondition="equal"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pTxData"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pRxData"/> 
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_SPI_RxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>

<!--LPBAM_Status_t ADV_LPBAM_SPI_TxRx_SetConfigQ(SPI_TypeDef                 *const pInstance,
                                                        LPBAM_DMAListInfo_t         const *const pDMAListInfo,
                                                        LPBAM_SPI_ConfigAdvConf_t   const *const pTxRxConfig,
                                                        LPBAM_SPI_TxRx_ConfigDesc_t *const pDescriptor,
                                                        DMA_QListTypeDef            *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_SPI_TxRx_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxRxConfig" TypeName="LPBAM_SPI_ConfigAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="CLKPolarity"/> 
       <Argument AddressOf="false" GenericType="simple" Name="CLKPhase"/> 
       <Argument AddressOf="false" GenericType="simple" Name="FirstBit"/> 
       <Argument AddressOf="false" GenericType="simple" Name="BaudRatePrescaler"/> 
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="true" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity" OptimizationCondition="equal"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_SPI_TxRx_ConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>


<!--

LPBAM_Status_t ADV_LPBAM_SPI_TxRx_SetDataQ(SPI_TypeDef                 *const pInstance,
                                                      LPBAM_DMAListInfo_t         const *const pDMAListInfo,
                                                      LPBAM_SPI_DataAdvConf_t     const *const pTxRxData,
                                                      LPBAM_SPI_TxRx_TxDataDesc_t *const pTxDescriptor,
                                                      LPBAM_SPI_TxRx_RxDataDesc_t *const pRxDescriptor,
                                                      DMA_QListTypeDef            *const pTxQueue,
                                                      DMA_QListTypeDef            *const pRxQueue);

-->




<LibMethod Comment="" Name="ADV_LPBAM_SPI_TxRx_SetDataQ"> 
     <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxRxData" TypeName="LPBAM_SPI_DataAdvConf_t">
       <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
	</Argument>
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pTxData"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pRxData"/>
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pTxDescriptor" TypeName="LPBAM_SPI_TxRx_TxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pRxDescriptor" TypeName="LPBAM_SPI_TxRx_RxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>


    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pTxQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
     <Argument Comment="" AddressOf="true" GenericType="struct" Name="pRxQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>

<!--

LPBAM_Status_t ADV_LPBAM_SPI_TxRx_SetFullQ(SPI_TypeDef                 *const pInstance,
                                                      LPBAM_DMAListInfo_t         const *const pDMAListInfo,
                                                      LPBAM_SPI_FullAdvConf_t     const *const pTxRxFull,
                                                      LPBAM_SPI_TxRx_TxFullDesc_t *const pTxDescriptor,
                                                      LPBAM_SPI_TxRx_RxFullDesc_t *const pRxDescriptor,
                                                      DMA_QListTypeDef            *const pTxQueue,
                                                      DMA_QListTypeDef            *const pRxQueue);

-->

<LibMethod Comment="" Name="ADV_LPBAM_SPI_TxRx_SetFullQ"> 
     <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxRxFull" TypeName="LPBAM_SPI_FullAdvConf_t">
       <Argument AddressOf="false" GenericType="simple" Name="CLKPolarity"/> 
       <Argument AddressOf="false" GenericType="simple" Name="CLKPhase"/> 
       <Argument AddressOf="false" GenericType="simple" Name="FirstBit"/> 
       <Argument AddressOf="false" GenericType="simple" Name="BaudRatePrescaler"/> 
       <Argument AddressOf="false" GenericType="simple" Name="DataSize"/> 
       <Argument AddressOf="true" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_SPI_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity" OptimizationCondition="equal"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 
       <Argument AddressOf="false" GenericType="simple" Name="Size"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pTxData"/> 
       <Argument AddressOf="false" GenericType="simple" Name="pRxData"/> 
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pTxDescriptor" TypeName="LPBAM_SPI_TxRx_TxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pRxDescriptor" TypeName="LPBAM_SPI_TxRx_RxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>


    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pTxQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
     <Argument Comment="" AddressOf="true" GenericType="struct" Name="pRxQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>


<!--
LPBAM_Status_t ADV_LPBAM_Q_SetDataConfig(LPBAM_COMMON_DataAdvConf_t const *const pDataConfig,
                                         uint32_t                   DataNode,
                                         void                       const *const pDescriptor);
-->


  <LibMethod Comment="" Name="ADV_LPBAM_Q_SetDataConfig">
    <Argument AddressOf="true" GenericType="struct" Name="pDataConfig" TypeName="LPBAM_COMMON_DataAdvConf_t">
      <Argument AddressOf="true" GenericType="struct" Name="TransferConfig" TypeName="LPBAM_DMA_NodeConfTypeDef">
        <Argument AddressOf="true" GenericType="struct" Name="Transfer" TypeName="LPBAM_DMA_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="SrcInc"/>
            <Argument AddressOf="false" GenericType="simple" Name="DestInc"/>
            <Argument AddressOf="false" GenericType="simple" Name="SrcDataWidth"/>
            <Argument AddressOf="false" GenericType="simple" Name="DestDataWidth"/>
            <Argument AddressOf="false" GenericType="simple" Name="TransferEventMode"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="SrcSecure"/>  
        <Argument AddressOf="false" GenericType="simple" Name="DestSecure"/> 
      </Argument> 
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcInc"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestInc"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcDataWidth"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestDataWidth"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateTransferEventMode"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcSecure"/>  
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestSecure"/>
    </Argument>   

    <Argument AddressOf="false" GenericType="simple" Name="DataNode"/>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="DONTCARE" Optional="output">
      <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>   
 </LibMethod>






<!--LPBAM_Status_t ADV_LPBAM_Q_SetTriggerConfig(LPBAM_COMMON_TrigAdvConf_t const *const pTrigConfig,
                                            uint32_t                   NodeLevel,
                                            void                       const *const pDescriptor);
-->
   <LibMethod Comment="" Name="ADV_LPBAM_Q_SetTriggerConfig">
     <Argument AddressOf="true" GenericType="struct" Name="pTrigConfig" TypeName="LPBAM_COMMON_TrigAdvConf_t">
      <Argument AddressOf="true" GenericType="struct" Name="TriggerConfig" TypeName="LPBAM_DMA_TriggerConfTypeDef">
         <Argument AddressOf="false" GenericType="simple" Name="TriggerMode"/>  
         <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/> 
         <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/> 
      </Argument>  
    </Argument>   

    <Argument AddressOf="false" GenericType="simple" Name="NodeLevel"/>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="DONTCARE" Optional="output">
      <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>   
  </LibMethod>



  <RefComponent Cclass="HAL" Cgroup="LPBAM" Cversion="1.0">
    <File Category="header" Name="Utilities/lpbam/stm32_adv_lpbam_spi.h"/>
    <File Category="header" Name="Utilities/lpbam/stm32_adv_lpbam_common.h"/>
    <File Category="source" Name="Utilities/lpbam/stm32_adv_lpbam_spi.c"/>
    <File Category="source" Name="Utilities/lpbam/stm32_adv_lpbam_common.c"/>
    <File Category="header" Name="Utilities/lpbam/STM32U5/stm32_platform_lpbam_spi.h"/>
    <File Category="header" Name="Utilities/lpbam/stm32_lpbam_spi.h"/>
    <File Category="source" Name="Utilities/lpbam/stm32_lpbam_spi.c"/>  
  </RefComponent>

</IP>
