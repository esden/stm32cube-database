<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" DBVersion="V4.0" Name="ThreadX" 

RootFolder="Middlewares/ST/threadx/"
	Version="1.0.0" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">
	<RefConfig Name="Core_Default">
		<Component Name="Middleware:ThreadX:Core:Default" />
		<ConfigFile Name="APP_THREADX_C" />
		<ConfigFile Name="APP_THREADX_H" />
	    <ConfigFile Name="APP_AZURE_RTOS_C" />
 		<ConfigFile Name="APP_AZURE_RTOS_H" /> 
		<ConfigFile Name="TX_USER_H" />
		<ConfigFile Name="TX_INITIALIZE_LOW_LEVEL_S" />
		<ConfigFile Name="AZURE_RTOS_CONFIG_H_FTL" />
        <Defines Name="TX_INCLUDE_USER_DEFINE_FILE" Condition="!S_SECURE | SEM_M33NS" Type="Cdefine"/>
		<!-- preprocessors defines when TZEN=0 -->
        <Defines Name="TX_SINGLE_MODE_NON_SECURE" Condition="!S_SECURE" Type="Adefine" Value="1"/>
        <Defines Name="TX_SINGLE_MODE_NON_SECURE" Condition="!S_SECURE" Type="Cdefine" Value="1"/>
		<!-- preprocessors defines when TZEN=1 for secure project -->
		<Defines Name="TX_THREAD_SECURE_STACK_MAXIMUM" Condition="(S_SECURE &amp; !SEM_M33NS) &amp; !SEMSTACK_MINIMUM" Type="Cdefine" Value="$TX_THREAD_SECURE_STACK_MAXIMUM"/>
		<Defines Name="TX_THREAD_SECURE_STACK_MINIMUM" Condition="(S_SECURE &amp; !SEM_M33NS) &amp; !SEMSTACK_MAXIMUM" Type="Cdefine" Value="$TX_THREAD_SECURE_STACK_MINIMUM"/>

		<Defines Name="TX_PORT_USE_BASEPRI " Condition="TX_ENABLE_BASEPRI_SUPPORT" Type="Cdefine"/>
		<Defines Name="TX_PORT_USE_BASEPRI " Condition="TX_ENABLE_BASEPRI_SUPPORT" Type="Adefine"/> 
		<Defines Name="TX_PORT_BASEPRI" Condition="TX_ENABLE_BASEPRI_SUPPORT" Type="Cdefine" Value="$TX_PORT_BASEPRI_VALUE"/>
		<Defines Name="TX_PORT_BASEPRI" Condition="TX_ENABLE_BASEPRI_SUPPORT" Type="Adefine" Value="$TX_PORT_BASEPRI_VALUE" />
	</RefConfig>
	
	<RefConfig Name="Performance_Default">
		<Component Name="Middleware:ThreadX:Performance:Default" />
		<ConfigFile Name="TX_USER_H" />
	</RefConfig>
	
	<RefConfig Name="TraceX_Support_Default">
		<Component Name="Middleware:ThreadX:TraceX_Support:Default" />
		<ConfigFile Name="TX_USER_H" />
	</RefConfig>
	
	<RefConfig Name="Low_Power_Support">
		<Component Name="Middleware:ThreadX:Low_Power_Support:true" />
		<Defines Condition="Low_Power_ENABLED &amp; (!S_SECURE | SEM_M33NS)" Name="TX_LOW_POWER" Type="Adefine"/>
	</RefConfig>
	
	<RefConfigFile Description="ThreadX initialisation file" Name="APP_THREADX_H" Template="azure_rtos/app_threadx_h.ftl" destinationFolder="Core/Inc">
		<File Category="header" Condition="!S_SECURE | SEM_M33NS" Name="app_threadx.h" />
   	    <Argument Added="true" AddressOf="false" GenericType="simple" Name="FILEX_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="NETXDUO_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXDEVICE_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXHOST_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBPD_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TSC_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="GUI_INTERFACE_ENABLED" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="AZRTOS_APP_MEM_ALLOCATION_METHOD" OptimizationCondition="equal" />
	    <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_GENERATE_INIT_CODE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_CREATION" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_THREAD_ENTRY" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_THREAD_NAME" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_THREAD_PRIO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_STACK_SIZE" OptimizationCondition="equal" />
    	<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_SEM_CREATION" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_SEMAPHORE_NAME" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_SEMAPHORE_COUNT" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_MUTEX_CREATION" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MUTEX_NAME" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MUTEX_INHERITANCE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_MSG_QUEUE_CREATION" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MSG_QUEUE_NAME" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MSG_SIZE_WORDS" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_NB_MSG" OptimizationCondition="equal" />
	</RefConfigFile>
	<RefConfigFile Description="ThreadX initialisation file" Name="APP_THREADX_C" Template="azure_rtos/app_threadx_c.ftl" destinationFolder="Core/Src">
		<File Category="source" Condition="!S_SECURE | SEM_M33NS" Name="app_threadx.c" />
		 <Argument Added="true" AddressOf="false" GenericType="simple" Name="FILEX_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="NETXDUO_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXDEVICE_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXHOST_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBPD_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TSC_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="GUI_INTERFACE_ENABLED" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="AZRTOS_APP_MEM_ALLOCATION_METHOD" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_TIMER_SETUP" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_USER_ENTER" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_USER_EXIT" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_USER_TIMER_ADJUST" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="AZRTOS_APP_MEM_ALLOCATION_METHOD" OptimizationCondition="equal" />
	    <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_GENERATE_INIT_CODE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_CREATION" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_THREAD_ENTRY" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_THREAD_NAME" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_THREAD_PRIO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_STACK_SIZE" OptimizationCondition="equal" />
    	<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_SEM_CREATION" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_SEMAPHORE_NAME" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_SEMAPHORE_COUNT" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_MUTEX_CREATION" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MUTEX_NAME" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MUTEX_INHERITANCE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_MSG_QUEUE_CREATION" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MSG_QUEUE_NAME" OptimizationCondition="equal" />
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MSG_SIZE_WORDS" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_NB_MSG" OptimizationCondition="equal" />
	</RefConfigFile>
	<RefConfigFile Description="" Name="APP_AZURE_RTOS_C" Template="azure_rtos/app_azrtos_c.ftl" destinationFolder="AZURE_RTOS/App">
		<File Category="source" Condition="!S_SECURE | SEM_M33NS" Name="app_azure_rtos.c" />
		 <Argument Added="true" AddressOf="false" GenericType="simple" Name="FILEX_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="NETXDUO_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXDEVICE_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXHOST_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBPD_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TSC_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="GUI_INTERFACE_ENABLED" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="THREADX_MEM_POOL_VAR_NAME" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="FILEX_MEM_POOL_VAR_NAME" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="USBX_HOST_MEM_POOL_VAR_NAME" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="USBX_DEVICE_MEM_POOL_VAR_NAME" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="NETXDUO_MEM_POOL_VAR_NAME" OptimizationCondition="equal"/>
	</RefConfigFile>
	<RefConfigFile Description="" Name="APP_AZURE_RTOS_h" Template="azure_rtos/app_azrtos_h.ftl" destinationFolder="AZURE_RTOS/App">
		<File Category="source" Condition="!S_SECURE | SEM_M33NS" Name="app_azure_rtos.h" />
		 <Argument Added="true" AddressOf="false" GenericType="simple" Name="FILEX_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="NETXDUO_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXDEVICE_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXHOST_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBPD_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TSC_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="GUI_INTERFACE_ENABLED" OptimizationCondition="equal"/>
	</RefConfigFile>
	<RefConfigFile Description="ThreadX User Configuration file" Name="TX_USER_H" Template="azure_rtos/tx_user_h.ftl" destinationFolder="Core/Inc">
		<File Category="header" Condition="(!S_SECURE | SEM_M33NS) &amp; SEMThreadXCcRTOSJjThreadXJjCore" Name="./tx_user.h" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_TIMER_SETUP" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_TICKLESS" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_USER_ENTER" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_USER_EXIT" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_LOW_POWER_USER_TIMER_ADJUST" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_NO_FILEX_POINTER" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="ThreadX_Version" OptimizationCondition="equal"/>
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MAX_PRIORITIES" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_TIMER_THREAD_STACK_SIZE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_TIMER_TICKS_PER_SECOND" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_BLOCK_POOL_ENABLE_PERFORMANCE_INFO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_DISABLE_NOTIFY_CALLBACKS" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_TRACE_TIME_MASK" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_REACTIVATE_INLINE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_TIMER_PROCESS_IN_ISR" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_DISABLE_STACK_FILLING" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_DISABLE_REDUNDANT_CLEARING" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_TIMER_ENABLE_PERFORMANCE_INFO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_QUEUE_ENABLE_PERFORMANCE_INFO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_THREAD_ENABLE_PERFORMANCE_INFO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_TRACE_TIME_SOURCE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_ENABLE_EVENT_TRACE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_NOT_INTERRUPTABLE" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_TIMER_THREAD_PRIORITY" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_SEMAPHORE_ENABLE_PERFORMANCE_INFO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_DISABLE_PREEMPTION_THRESHOLD" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MEMSET" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MINIMUM_STACK" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_INLINE_THREAD_RESUME_SUSPEND" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_THREAD_USER_EXTENSION" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="ALIGN_TYPE_VAL" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_MUTEX_ENABLE_PERFORMANCE_INFO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_SAFETY_CRITICAL" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_BYTE_POOL_ENABLE_PERFORMANCE_INFO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="ALIGN_TYPE_DEFINED" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_EVENT_FLAGS_ENABLE_PERFORMANCE_INFO" OptimizationCondition="equal" />
		<Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_DISABLE_ERROR_CHECKING" OptimizationCondition="equal"/>
	</RefConfigFile>
	<RefConfigFile Added="true" Description="ThreadX low level init file" Name="TX_INITIALIZE_LOW_LEVEL_S" Template="azure_rtos/tx_initialize_low_level_s.ftl" destinationFolder="Core/Src">
		<File Category="source" Condition="!S_SECURE | SEM_M33NS" Name="./tx_initialize_low_level.S"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_TIMER_TICKS_PER_SECOND" OptimizationCondition="equal"/>
         <Argument Added="true" AddressOf="false" GenericType="simple" Name="AZRTOS_APP_MEM_ALLOCATION_METHOD" OptimizationCondition="equal"/>
    </RefConfigFile>
	    <RefConfigFile Added="true" Description="ftl for app_azure_rtos_config.h" Name="AZURE_RTOS_CONFIG_H_FTL" Template="azure_rtos/app_azure_rtos_config_h.ftl" destinationFolder="AZURE_RTOS/App">
        <File Category="header" Condition="!S_SECURE | SEM_M33NS" Name="./app_azure_rtos_config.h"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="FX_APP_MEM_POOL_SIZE" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TX_APP_MEM_POOL_SIZE" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="UX_HOST_APP_MEM_POOL_SIZE" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="NX_APP_MEM_POOL_SIZE" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="UX_DEVICE_APP_MEM_POOL_SIZE" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBPD_DEVICE_APP_MEM_POOL_SIZE" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TOUCHSENSING_APP_MEM_POOL_SIZE" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="GUI_INTERFACE_APP_MEM_POOL_SIZE" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="AZRTOS_APP_MEM_ALLOCATION_METHOD" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="FILEX_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="NETXDUO_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXDEVICE_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBXHOST_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="USBPD_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="TSC_ENABLED" OptimizationCondition="equal"/>
        <Argument Added="true" AddressOf="false" GenericType="simple" Name="GUI_INTERFACE_ENABLED" OptimizationCondition="equal"/>
    </RefConfigFile>
	<RefComponent Cclass="Middleware" Cgroup="ThreadX" Cversion="6Gg2Gg0">
		<SubComponent Csub="Core" Cvariant="Default" Cversion="6Gg2Gg0">
			<File Category="header" Condition="all" Name="common/inc/tx_api.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_block_pool.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_byte_pool.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_event_flags.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_initialize.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_mutex.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_queue.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_semaphore.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_thread.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_timer.h" />
			<File Category="header" Condition="all" Name="common/inc/tx_trace.h" />
			<File Category="header" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33)" Name="ports/cortex_m33/iar/inc/*" />
			<File Category="header" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33) " Name="ports/cortex_m33/gnu/inc/*" />
			<File Category="header" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) " Name="ports/cortex_m33/ac6/inc/*" />
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_initialize_high_level.c" />
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_initialize_kernel_enter.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_initialize_kernel_setup.c" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_iar.c" />
                        <!-- tx_thread_secure_stack.c -->
                        <File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33S" Name="ports/cortex_m33/iar/src/tx_thread_secure_stack.c" />
                        <File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33S" Name="ports/cortex_m33/ac6/src/tx_thread_secure_stack.c" /> 
                        <File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33S" Name="ports/cortex_m33/gnu/src/tx_thread_secure_stack.c" /> 
                        <!-- tx_thread_secure_stack_initialize.S -->
                        <File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/iar/src/tx_thread_secure_stack_initialize.s" />
                        <File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/ac6/src/tx_thread_secure_stack_initialize.S" /> 
                        <File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/gnu/src/tx_thread_secure_stack_initialize.S" /> 
						<!-- tx_thread_secure_stack_allocate.s -->
                        <File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/iar/src/tx_thread_secure_stack_allocate.s" />
                        <File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/ac6/src/tx_thread_secure_stack_allocate.S" /> 
                        <File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/gnu/src/tx_thread_secure_stack_allocate.S" /> 
                        <!-- tx_thread_secure_stack_free.s -->
                        <File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/iar/src/tx_thread_secure_stack_free.s" />
                        <File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/ac6/src/tx_thread_secure_stack_free.S" /> 
                        <File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/gnu/src/tx_thread_secure_stack_free.S" /> 
                        <!-- txe_thread_secure_stack_allocate.c -->
                        <File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/iar/src/txe_thread_secure_stack_allocate.c" />
                        <File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/ac6/src/txe_thread_secure_stack_allocate.c" /> 
                        <File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/gnu/src/txe_thread_secure_stack_allocate.c" /> 
                        <!-- txe_thread_secure_stack_free.c -->
                        <File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/iar/src/txe_thread_secure_stack_free.c" />
                        <File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/ac6/src/txe_thread_secure_stack_free.c" /> 
                        <File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33)&amp; SEM_M33NS &amp; S_SECURE" Name="ports/cortex_m33/gnu/src/txe_thread_secure_stack_free.c" /> 
                        
                        <File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_thread_context_restore.s" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_thread_context_save.s" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_thread_interrupt_control.s" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_thread_interrupt_disable.s" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_thread_interrupt_restore.s" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_thread_schedule.s" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_thread_stack_build.s" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_thread_system_return.s" />
			<File Category="source" Condition="(SIiTcompilerIiIAR&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/iar/src/tx_timer_interrupt.s" />
			<File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/gnu/src/tx_thread_context_restore.S" />
			<File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/gnu/src/tx_thread_context_save.S" />
			<File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/gnu/src/tx_thread_interrupt_control.S" />
			<File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/gnu/src/tx_thread_schedule.S" />
			<File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/gnu/src/tx_thread_stack_build.S" />
			<File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/gnu/src/tx_thread_system_return.S" />
			<File Category="source" Condition="(SIiTcompilerIiGCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/gnu/src/tx_timer_interrupt.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_thread_context_restore.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_thread_context_save.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_thread_interrupt_control.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_thread_interrupt_disable.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_thread_interrupt_restore.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_thread_schedule.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_thread_stack_build.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_thread_system_return.S" />
			<File Category="source" Condition="(SIiTcompilerIiARMCC&amp;SIiDcoreIiCortexAaM33) &amp; (SEM_M33NS | !S_SECURE)" Name="ports/cortex_m33/ac6/src/tx_timer_interrupt.S" />
			
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_stack_error_handler.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_stack_error_notify.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_system_resume.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_allocate.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_pool_cleanup.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_pool_create.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_pool_delete.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_pool_info_get.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_pool_initialize.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_pool_prioritize.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_release.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_allocate.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_cleanup.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_create.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_delete.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_info_get.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_initialize.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_prioritize.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_search.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_release.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_cleanup.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_create.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_delete.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_get.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_info_get.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_initialize.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_set.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_set_notify.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_cleanup.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_create.c" />
			<File Category="source" Condition=" (SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_initialize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_prioritize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_priority_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_put.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_cleanup.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_flush.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_front_send.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_initialize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_prioritize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_receive.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_send.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_send_notify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_ceiling_put.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_cleanup.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_initialize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_prioritize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_put.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_put_notify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_entry_exit_notify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_identify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_initialize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_preemption_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_priority_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_relinquish.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_reset.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_resume.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_shell_entry.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_sleep.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_stack_analyze.c" />
                        <File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_suspend.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_system_preempt_check.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_system_suspend.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_terminate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_time_slice.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_time_slice_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_timeout.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_wait_abort.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_time_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_time_set.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_block_allocate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_block_pool_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_block_pool_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_block_pool_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_block_pool_prioritize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_block_release.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_byte_allocate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_byte_pool_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_byte_pool_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_byte_pool_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_byte_pool_prioritize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_byte_release.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_event_flags_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_event_flags_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_event_flags_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_event_flags_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_event_flags_set.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_event_flags_set_notify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_mutex_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_mutex_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_mutex_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_mutex_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_mutex_prioritize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_mutex_put.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_flush.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_front_send.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_prioritize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_receive.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_send.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_queue_send_notify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_semaphore_ceiling_put.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_semaphore_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_semaphore_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_semaphore_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_semaphore_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_semaphore_prioritize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_semaphore_put.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_semaphore_put_notify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_entry_exit_notify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_preemption_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_priority_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_relinquish.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_reset.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_resume.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_suspend.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_terminate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_time_slice_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_thread_wait_abort.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_activate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_deactivate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_expiration_process.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_initialize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_system_activate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_system_deactivate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_thread_entry.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_timer_activate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_timer_change.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_timer_create.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_timer_deactivate.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_timer_delete.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/txe_timer_info_get.c" />
		</SubComponent>
		<SubComponent Csub="Performance" Cvariant="Default" Cversion="6Gg2Gg0">
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_performance_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_thread_performance_system_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_pool_performance_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_block_pool_performance_system_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_performance_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_byte_pool_performance_system_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_performance_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_event_flags_performance_system_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_performance_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_mutex_performance_system_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_performance_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_queue_performance_system_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_performance_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_semaphore_performance_system_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_performance_info_get.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_timer_performance_system_info_get.c" />
		</SubComponent>
		<SubComponent Csub="TraceX_Support" Cvariant="Default" Cversion="6Gg2Gg0">
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_buffer_full_notify.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_disable.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_enable.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_event_filter.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_event_unfilter.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_initialize.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_interrupt_control.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_isr_enter_insert.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_isr_exit_insert.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_object_register.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_object_unregister.c" />
			<File Category="source"  Condition="(SEM_M33NS | !S_SECURE)" Name="common/src/tx_trace_user_event_insert.c" />
			
			
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; (SEMUSBXCcUSBJjUSBXJjUXOoHostOoCoreStackJjRTOSIiMODE_HS | SEMUSBXCcUSBJjUSBXJjUXOoHostOoCoreStackJjRTOSIiMODE_FS | SEMUSBXCcUSBJjUSBXJjUXOoDeviceOoCoreStackJjRTOSIiMODE_HS | SEMUSBXCcUSBJjUSBXJjUXOoDeviceOoCoreStackJjRTOSIiMODE_FS)" Name="../usbx/common/core/src/ux_trace_event_insert.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; (SEMUSBXCcUSBJjUSBXJjUXOoHostOoCoreStackJjRTOSIiMODE_HS | SEMUSBXCcUSBJjUSBXJjUXOoHostOoCoreStackJjRTOSIiMODE_FS | SEMUSBXCcUSBJjUSBXJjUXOoDeviceOoCoreStackJjRTOSIiMODE_HS | SEMUSBXCcUSBJjUSBXJjUXOoDeviceOoCoreStackJjRTOSIiMODE_FS)" Name="../usbx/common/core/src/ux_trace_event_update.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; (SEMUSBXCcUSBJjUSBXJjUXOoHostOoCoreStackJjRTOSIiMODE_HS | SEMUSBXCcUSBJjUSBXJjUXOoHostOoCoreStackJjRTOSIiMODE_FS | SEMUSBXCcUSBJjUSBXJjUXOoDeviceOoCoreStackJjRTOSIiMODE_HS | SEMUSBXCcUSBJjUSBXJjUXOoDeviceOoCoreStackJjRTOSIiMODE_FS)" Name="../usbx/common/core/src/ux_trace_object_register.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; (SEMUSBXCcUSBJjUSBXJjUXOoHostOoCoreStackJjRTOSIiMODE_HS | SEMUSBXCcUSBJjUSBXJjUXOoHostOoCoreStackJjRTOSIiMODE_FS | SEMUSBXCcUSBJjUSBXJjUXOoDeviceOoCoreStackJjRTOSIiMODE_HS | SEMUSBXCcUSBJjUSBXJjUXOoDeviceOoCoreStackJjRTOSIiMODE_FS)" Name="../usbx/common/core/src/ux_trace_object_unregister.c"/>
																			  
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; SEMFileXCcFileOoSystemJjFileXJjCore" Name="../filex/common/src/fx_trace_event_insert.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; SEMFileXCcFileOoSystemJjFileXJjCore" Name="../filex/common/src/fx_trace_event_update.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; SEMFileXCcFileOoSystemJjFileXJjCore" Name="../filex/common/src/fx_trace_object_register.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; SEMFileXCcFileOoSystemJjFileXJjCore" Name="../filex/common/src/fx_trace_object_unregister.c"/>
																			  
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; SEMNetXDuoCcNetworkJjNetXDuoJjNXOoCore" Name="../netxduo/common/src/nx_trace_event_insert.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; SEMNetXDuoCcNetworkJjNetXDuoJjNXOoCore" Name="../netxduo/common/src/nx_trace_event_update.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; SEMNetXDuoCcNetworkJjNetXDuoJjNXOoCore" Name="../netxduo/common/src/nx_trace_object_register.c"/>
			<File Category="source" Condition="(SEM_M33NS | !S_SECURE) &amp; SEMNetXDuoCcNetworkJjNetXDuoJjNXOoCore" Name="../netxduo/common/src/nx_trace_object_unregister.c"/>
		</SubComponent> 
		<SubComponent Csub="Low_Power_Support" Cvariant="true" Cversion="6Gg2Gg0">
		 <File Category="source" Condition="(SEM_M33NS | !S_SECURE)" Name="utility/low_power/tx_low_power.c"/>
            <File Category="header" Condition="(SEM_M33NS | !S_SECURE)" Name="utility/low_power/*"/>
		</SubComponent> 
	</RefComponent>
</IP>
