<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP DBVersion="V4.0" Name="" Version="STM32Cube_FW_U5_V1.0" IncludeFile="" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://mcd.rou.st.com/modules.php?name=mcu" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">


 <RefConfig Name="I2C_MASTERTRANSMIT_CONFIG">
  <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_MasterTx_SetConfigQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT_CONFIG"/>
       
	<MethodArg Name="Timing" ParameterName="Timing_MTX_CONFIG"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       <MethodArg Name="TriggerSelection" ParameterName="AutoModeTriggerSelection"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AutoModeTriggerPolarity"/>
       
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_MTX_CONFIG"/>

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_MASTERTRANSMIT_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_MASTERTRANSMIT_CONFIG"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_MASTERTRANSMIT_CONFIG"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_MASTERTRANSMIT_CONFIG"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_MASTERTRANSMIT_CONFIG"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT_CONFIG"/>
    </CallLibMethod>
     </IFCondition>

  </RefConfig>

  <RefConfig Name="I2C_MASTERTRANSMIT_DATA">
    <!--IFCondition Expression="1=1"> 
        <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#tuint32 data_size;"/>
        </CallLibMethod>
    </IFCondition-->
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_MasterTx_SetDataQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT_DATA"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       
       <MethodArg Name="AddressingMode" ParameterName="AddressingMode_MTX_DATA"/>
       <MethodArg Name="SequenceNumber" ParameterName="SequenceNumber_MTX_DATA"/>
       <MethodArg Name="pData" ParameterName="BufferAddress"/>
       <MethodArg Name="DevAddress" ParameterName="DevAddress_MTX_DATA"/>
       <!--MethodArg Name="Size" ParameterName="Size_MTX_DATA"/-->

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_MASTERTRANSMIT_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_MASTERTRANSMIT_DATA"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_MASTERTRANSMIT_DATA"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_MASTERTRANSMIT_DATA"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_MASTERTRANSMIT_DATA"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT_DATA"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_MASTERTRANSMIT_DATA=DISABLE) &amp; (UpdateDestInc_MASTERTRANSMIT_DATA=DISABLE) &amp; (UpdateSrcDataWidth_MASTERTRANSMIT_DATA=DISABLE) &amp; (UpdateDestDataWidth_MASTERTRANSMIT_DATA=DISABLE)  &amp; (UpdateTransferEventMode_MASTERTRANSMIT_DATA=DISABLE) &amp;  (UpdateSrcSecure_MASTERTRANSMIT_DATA=DISABLE) &amp; (UpdateDestSecure_MASTERTRANSMIT_DATA=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_MASTERTRANSMIT_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_MASTERTRANSMIT_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT_DATA"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_MASTERTRANSMIT_DATA=DISABLE) &amp; (UpdateDestInc_MASTERTRANSMIT_DATA=DISABLE) &amp; (UpdateSrcDataWidth_MASTERTRANSMIT_DATA=DISABLE) &amp; (UpdateDestDataWidth_MASTERTRANSMIT_DATA=DISABLE)  &amp; (UpdateTransferEventMode_MASTERTRANSMIT_DATA=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_MASTERTRANSMIT_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_MASTERTRANSMIT_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_MASTERTRANSMIT_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT_DATA"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>

  <RefConfig Name="I2C_MASTERTRANSMIT">
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_MasterTx_SetFullQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT"/>
	   
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       <MethodArg Name="TriggerSelection" ParameterName="AutoModeTriggerSelection"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AutoModeTriggerPolarity"/>
       
       <MethodArg Name="Timing" ParameterName="Timing_MTX"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_MTX"/>
       <MethodArg Name="AddressingMode" ParameterName="AddressingMode_MTX"/>
       <MethodArg Name="SequenceNumber" ParameterName="SequenceNumber_MTX"/>
       <MethodArg Name="pData" ParameterName="BufferAddress"/>
       <MethodArg Name="DevAddress" ParameterName="DevAddress_MTX"/>
       <!--MethodArg Name="Size" ParameterName="Size_MTX"/-->

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_MASTERTRANSMIT=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_MASTERTRANSMIT"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_MASTERTRANSMIT"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_MASTERTRANSMIT"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_MASTERTRANSMIT"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT"/>
    </CallLibMethod>
     </IFCondition>
     <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_MASTERTRANSMIT=DISABLE) &amp; (UpdateDestInc_MASTERTRANSMIT=DISABLE) &amp; (UpdateSrcDataWidth_MASTERTRANSMIT=DISABLE) &amp; (UpdateDestDataWidth_MASTERTRANSMIT=DISABLE)  &amp; (UpdateTransferEventMode_MASTERTRANSMIT=DISABLE) &amp;  (UpdateSrcSecure_MASTERTRANSMIT=DISABLE) &amp; (UpdateDestSecure_MASTERTRANSMIT=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_MASTERTRANSMIT"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_MASTERTRANSMIT"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_MASTERTRANSMIT"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_MASTERTRANSMIT"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_MASTERTRANSMIT"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_MASTERTRANSMIT"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_MASTERTRANSMIT"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_MASTERTRANSMIT"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_MASTERTRANSMIT"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_MASTERTRANSMIT=DISABLE) &amp; (UpdateDestInc_MASTERTRANSMIT=DISABLE) &amp; (UpdateSrcDataWidth_MASTERTRANSMIT=DISABLE) &amp; (UpdateDestDataWidth_MASTERTRANSMIT=DISABLE)  &amp; (UpdateTransferEventMode_MASTERTRANSMIT=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_MASTERTRANSMIT"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_MASTERTRANSMIT"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_MASTERTRANSMIT"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_MASTERTRANSMIT"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_MASTERTRANSMIT"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_MASTERTRANSMIT"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_MASTERTRANSMIT"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_MASTERTRANSMIT"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_MASTERTRANSMIT"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_MASTERTRANSMIT"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERTRANSMIT"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>

 <RefConfig Name="I2C_SLAVETRANSMIT">
  <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_SlaveTx_SetFullQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT"/>
	   
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       <MethodArg Name="TriggerSelection" ParameterName="AutoModeTriggerSelection"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AutoModeTriggerPolarity"/>
       
       <MethodArg Name="Timing" ParameterName="Timing_STX"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_STX"/>
       <MethodArg Name="AddressingMode" ParameterName="AddressingMode_STX"/>
       <MethodArg Name="SequenceNumber" ParameterName="SequenceNumber_STX"/>
       <MethodArg Name="pData" ParameterName="BufferAddress"/>

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_SLAVETRANSMIT=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_SLAVETRANSMIT"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_SLAVETRANSMIT"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_SLAVETRANSMIT"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_SLAVETRANSMIT"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT"/>
    </CallLibMethod>
     </IFCondition>

     <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_SLAVETRANSMIT=DISABLE) &amp; (UpdateDestInc_SLAVETRANSMIT=DISABLE) &amp; (UpdateSrcDataWidth_SLAVETRANSMIT=DISABLE) &amp; (UpdateDestDataWidth_SLAVETRANSMIT=DISABLE)  &amp; (UpdateTransferEventMode_SLAVETRANSMIT=DISABLE) &amp;  (UpdateSrcSecure_SLAVETRANSMIT=DISABLE) &amp; (UpdateDestSecure_SLAVETRANSMIT=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_SLAVETRANSMIT"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_SLAVETRANSMIT"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_SLAVETRANSMIT"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_SLAVETRANSMIT"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_SLAVETRANSMIT"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_SLAVETRANSMIT"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_SLAVETRANSMIT"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_SLAVETRANSMIT"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_SLAVETRANSMIT"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_SLAVETRANSMIT=DISABLE) &amp; (UpdateDestInc_SLAVETRANSMIT=DISABLE) &amp; (UpdateSrcDataWidth_SLAVETRANSMIT=DISABLE) &amp; (UpdateDestDataWidth_SLAVETRANSMIT=DISABLE)  &amp; (UpdateTransferEventMode_SLAVETRANSMIT=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_SLAVETRANSMIT"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_SLAVETRANSMIT"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_SLAVETRANSMIT"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_SLAVETRANSMIT"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_SLAVETRANSMIT"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_SLAVETRANSMIT"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_SLAVETRANSMIT"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_SLAVETRANSMIT"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_SLAVETRANSMIT"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_SLAVETRANSMIT"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>

   <RefConfig Name="I2C_SLAVETRANSMIT_DATA">
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_SlaveTx_SetDataQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT_DATA"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       
       <MethodArg Name="AddressingMode" ParameterName="AddressingMode_STX_DATA"/>
       <MethodArg Name="SequenceNumber" ParameterName="SequenceNumber_STX_DATA"/>
       <MethodArg Name="pData" ParameterName="BufferAddress"/>
	   
     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_SLAVETRANSMIT_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_SLAVETRANSMIT_DATA"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_SLAVETRANSMIT_DATA"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_SLAVETRANSMIT_DATA"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_SLAVETRANSMIT_DATA"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT_DATA"/>
    </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_SLAVETRANSMIT_DATA=DISABLE) &amp; (UpdateDestInc_SLAVETRANSMIT_DATA=DISABLE) &amp; (UpdateSrcDataWidth_SLAVETRANSMIT_DATA=DISABLE) &amp; (UpdateDestDataWidth_SLAVETRANSMIT_DATA=DISABLE)  &amp; (UpdateTransferEventMode_SLAVETRANSMIT_DATA=DISABLE) &amp;  (UpdateSrcSecure_SLAVETRANSMIT_DATA=DISABLE) &amp; (UpdateDestSecure_SLAVETRANSMIT_DATA=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_SLAVETRANSMIT_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_SLAVETRANSMIT_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT_DATA"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_SLAVETRANSMIT_DATA=DISABLE) &amp; (UpdateDestInc_SLAVETRANSMIT_DATA=DISABLE) &amp; (UpdateSrcDataWidth_SLAVETRANSMIT_DATA=DISABLE) &amp; (UpdateDestDataWidth_SLAVETRANSMIT_DATA=DISABLE)  &amp; (UpdateTransferEventMode_SLAVETRANSMIT_DATA=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_SLAVETRANSMIT_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_SLAVETRANSMIT_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_SLAVETRANSMIT_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT_DATA"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>


   <RefConfig Name="I2C_SLAVETRANSMIT_CONFIG">
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_SlaveTx_SetConfigQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT_CONFIG"/>
       
	<MethodArg Name="Timing" ParameterName="Timing_STX_CONFIG"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       <MethodArg Name="TriggerSelection" ParameterName="AutoModeTriggerSelection"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AutoModeTriggerPolarity"/>
       
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_STX_CONFIG"/>															   

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_SLAVETRANSMIT_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_SLAVETRANSMIT_CONFIG"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_SLAVETRANSMIT_CONFIG"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_SLAVETRANSMIT_CONFIG"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_SLAVETRANSMIT_CONFIG"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVETRANSMIT_CONFIG"/>
    </CallLibMethod>
     </IFCondition>

  </RefConfig>


 <RefConfig Name="I2C_MASTERRECEIVE_CONFIG">
  <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_MasterRx_SetConfigQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE_CONFIG"/>
       
	<MethodArg Name="Timing" ParameterName="Timing_MRX_CONFIG"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       <MethodArg Name="TriggerSelection" ParameterName="AutoModeTriggerSelection"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AutoModeTriggerPolarity"/>
       
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_MRX_CONFIG"/>

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_MASTERRECEIVE_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_MASTERRECEIVE_CONFIG"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_MASTERRECEIVE_CONFIG"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_MASTERRECEIVE_CONFIG"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_MASTERRECEIVE_CONFIG"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE_CONFIG"/>
    </CallLibMethod>
     </IFCondition>

  </RefConfig>

  <RefConfig Name="I2C_MASTERRECEIVE_DATA">
      <!--IFCondition Expression="1=1">
        <CallLibMethod Name="" Type="HardCode">
                <HardCode Text="#n#tuint32 data_size;"/>
        </CallLibMethod>
    </IFCondition-->
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_MasterRx_SetDataQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE_DATA"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       
       <MethodArg Name="AddressingMode" ParameterName="AddressingMode_MRX_DATA"/>
       <MethodArg Name="SequenceNumber" ParameterName="SequenceNumber_MRX_DATA"/>
       <MethodArg Name="pData" ParameterName="BufferAddress"/>
       <MethodArg Name="DevAddress" ParameterName="DevAddress_MRX_DATA"/>
       <!--MethodArg Name="Size" ParameterName="ActionNbre"/-->

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_MASTERRECEIVE_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_MASTERRECEIVE_DATA"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_MASTERRECEIVE_DATA"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_MASTERRECEIVE_DATA"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_MASTERRECEIVE_DATA"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE_DATA"/>
    </CallLibMethod>
     </IFCondition>


 <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_MASTERRECEIVE_DATA=DISABLE) &amp; (UpdateDestInc_MASTERRECEIVE_DATA=DISABLE) &amp; (UpdateSrcDataWidth_MASTERRECEIVE_DATA=DISABLE) &amp; (UpdateDestDataWidth_MASTERRECEIVE_DATA=DISABLE)  &amp; (UpdateTransferEventMode_MASTERRECEIVE_DATA=DISABLE) &amp;  (UpdateSrcSecure_MASTERRECEIVE_DATA=DISABLE) &amp; (UpdateDestSecure_MASTERRECEIVE_DATA=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_MASTERRECEIVE_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_MASTERRECEIVE_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_MASTERRECEIVE_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_MASTERRECEIVE_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_MASTERRECEIVE_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_MASTERRECEIVE_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_MASTERRECEIVE_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_MASTERRECEIVE_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_MASTERRECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE_DATA"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_MASTERRECEIVE_DATA=DISABLE) &amp; (UpdateDestInc_MASTERRECEIVE_DATA=DISABLE) &amp; (UpdateSrcDataWidth_MASTERRECEIVE_DATA=DISABLE) &amp; (UpdateDestDataWidth_MASTERRECEIVE_DATA=DISABLE)  &amp; (UpdateTransferEventMode_MASTERRECEIVE_DATA=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_MASTERRECEIVE_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_MASTERRECEIVE_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_MASTERRECEIVE_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_MASTERRECEIVE_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_MASTERRECEIVE_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_MASTERRECEIVE_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_MASTERRECEIVE_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_MASTERRECEIVE_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_MASTERRECEIVE_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_MASTERRECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE_DATA"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>

  <RefConfig Name="I2C_MASTERRECEIVE">
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_MasterRx_SetFullQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       <MethodArg Name="TriggerSelection" ParameterName="AutoModeTriggerSelection"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AutoModeTriggerPolarity"/>
       
       <MethodArg Name="Timing" ParameterName="Timing_MRX"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_MRX"/>
       <MethodArg Name="AddressingMode" ParameterName="AddressingMode_MRX"/>
       <MethodArg Name="SequenceNumber" ParameterName="SequenceNumber_MRX"/>
       <MethodArg Name="pData" ParameterName="BufferAddress"/>
       <MethodArg Name="DevAddress" ParameterName="DevAddress_MRX"/>
       <!--MethodArg Name="Size" ParameterName="Size_MRX"/-->

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_MASTERRECEIVE=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_MASTERRECEIVE"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_MASTERRECEIVE"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_MASTERRECEIVE"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_MASTERRECEIVE"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE"/>
    </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_MASTERRECEIVE=DISABLE) &amp; (UpdateDestInc_MASTERRECEIVE=DISABLE) &amp; (UpdateSrcDataWidth_MASTERRECEIVE=DISABLE) &amp; (UpdateDestDataWidth_MASTERRECEIVE=DISABLE)  &amp; (UpdateTransferEventMode_MASTERRECEIVE=DISABLE) &amp;  (UpdateSrcSecure_MASTERRECEIVE=DISABLE) &amp; (UpdateDestSecure_MASTERRECEIVE=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_MASTERRECEIVE"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_MASTERRECEIVE"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_MASTERRECEIVE"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_MASTERRECEIVE"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_MASTERRECEIVE"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_MASTERRECEIVE"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_MASTERRECEIVE"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_MASTERRECEIVE"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_MASTERRECEIVE"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_MASTERRECEIVE"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_MASTERRECEIVE"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_MASTERRECEIVE"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_MASTERRECEIVE"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_MASTERRECEIVE"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_MASTERRECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_MASTERRECEIVE=DISABLE) &amp; (UpdateDestInc_MASTERRECEIVE=DISABLE) &amp; (UpdateSrcDataWidth_MASTERRECEIVE=DISABLE) &amp; (UpdateDestDataWidth_MASTERRECEIVE=DISABLE)  &amp; (UpdateTransferEventMode_MASTERRECEIVE=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_MASTERRECEIVE"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_MASTERRECEIVE"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_MASTERRECEIVE"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_MASTERRECEIVE"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_MASTERRECEIVE"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_MASTERRECEIVE"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_MASTERRECEIVE"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_MASTERRECEIVE"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_MASTERRECEIVE"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_MASTERRECEIVE"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_MASTERRECEIVE"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_MASTERRECEIVE"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_MASTERRECEIVE"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_MASTERRECEIVE"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_MASTERRECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_MASTERRECEIVE"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>

<RefConfig Name="I2C_SLAVERECEIVE_CONFIG">
  <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_SlaveRx_SetConfigQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE_CONFIG"/>
       
	<MethodArg Name="Timing" ParameterName="Timing_SRX_CONFIG"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       <MethodArg Name="TriggerSelection" ParameterName="AutoModeTriggerSelection"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AutoModeTriggerPolarity"/>
       
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_SRX_CONFIG"/>

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_SLAVERECEIVE_CONFIG=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_SLAVERECEIVE_CONFIG"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_SLAVERECEIVE_CONFIG"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_SLAVERECEIVE_CONFIG"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_SLAVERECEIVE_CONFIG"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE_CONFIG"/>
    </CallLibMethod>
     </IFCondition>

  </RefConfig>

  <RefConfig Name="I2C_SLAVERECEIVE_DATA">
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_SlaveRx_SetDataQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE_DATA"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       
       <MethodArg Name="AddressingMode" ParameterName="AddressingMode_SRX_DATA"/>
       <MethodArg Name="SequenceNumber" ParameterName="SequenceNumber_SRX_DATA"/>
       <MethodArg Name="pData" ParameterName="BufferAddress"/>										 

     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_SLAVERECEIVE_DATA=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_SLAVERECEIVE_DATA"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_SLAVERECEIVE_DATA"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_SLAVERECEIVE_DATA"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_SLAVERECEIVE_DATA"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE_DATA"/>
    </CallLibMethod>
     </IFCondition>

     <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_SLAVERECEIVE_DATA=DISABLE) &amp; (UpdateDestInc_SLAVERECEIVE_DATA=DISABLE) &amp; (UpdateSrcDataWidth_SLAVERECEIVE_DATA=DISABLE) &amp; (UpdateDestDataWidth_SLAVERECEIVE_DATA=DISABLE)  &amp; (UpdateTransferEventMode_SLAVERECEIVE_DATA=DISABLE) &amp;  (UpdateSrcSecure_SLAVERECEIVE_DATA=DISABLE) &amp; (UpdateDestSecure_SLAVERECEIVE_DATA=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_SLAVERECEIVE_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_SLAVERECEIVE_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_SLAVERECEIVE_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_SLAVERECEIVE_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_SLAVERECEIVE_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_SLAVERECEIVE_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_SLAVERECEIVE_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_SLAVERECEIVE_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_SLAVERECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE_DATA"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_SLAVERECEIVE_DATA=DISABLE) &amp; (UpdateDestInc_SLAVERECEIVE_DATA=DISABLE) &amp; (UpdateSrcDataWidth_SLAVERECEIVE_DATA=DISABLE) &amp; (UpdateDestDataWidth_SLAVERECEIVE_DATA=DISABLE)  &amp; (UpdateTransferEventMode_SLAVERECEIVE_DATA=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_SLAVERECEIVE_DATA"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_SLAVERECEIVE_DATA"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_SLAVERECEIVE_DATA"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_SLAVERECEIVE_DATA"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_SLAVERECEIVE_DATA"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_SLAVERECEIVE_DATA"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_SLAVERECEIVE_DATA"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_SLAVERECEIVE_DATA"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_SLAVERECEIVE_DATA"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_SLAVERECEIVE_DATA"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE_DATA"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>

  <RefConfig Name="I2C_SLAVERECEIVE">
    <IFCondition Expression = "1=1">
    <CallLibMethod Name="ADV_LPBAM_I2C_SlaveRx_SetFullQ">
       <MethodArg Name="InstanceIP" ParameterName="InstanceHAL"/>  
       <MethodArg Name="pInstance" FValue="LPDMA1"/> 
       <MethodArg Name="QueueType" FValue="LPBAM_LINEAR_ADDRESSING_Q"/> 
       <MethodArg Name="pQueue" ParameterName="QUEUE_NAME"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE"/>
       
       <MethodArg Name="TriggerState" ParameterName="AutoModeTriggerState"/>
       <MethodArg Name="TriggerSelection" ParameterName="AutoModeTriggerSelection"/>
       <MethodArg Name="TriggerPolarity" ParameterName="AutoModeTriggerPolarity"/>
       
       <MethodArg Name="Timing" ParameterName="Timing_SRX"/>
       <MethodArg Name="WakeupIT" ParameterName="WakeupIT_SRX"/>
       <MethodArg Name="AddressingMode" ParameterName="AddressingMode_SRX"/>
       <MethodArg Name="SequenceNumber" ParameterName="SequenceNumber_SRX"/>
       <MethodArg Name="pData" ParameterName="BufferAddress"/>
	   
     </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "!(TriggerPolarity_SLAVERECEIVE=LPBAM_DMA_TRIG_POLARITY_MASKED)">
    <CallLibMethod Name="ADV_LPBAM_Q_SetTriggerConfig">
    <MethodArg Name="NodeLevel" ParameterName="NodeLevel_SLAVERECEIVE"/>
    <MethodArg Name="TriggerMode" ParameterName="TriggerMode_SLAVERECEIVE"/>
    <MethodArg Name="TriggerPolarity" ParameterName="TriggerPolarity_SLAVERECEIVE"/>
     <MethodArg Name="TriggerSelection" ParameterName="TriggerSelection_SLAVERECEIVE"/>
     <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE"/>
    </CallLibMethod>
     </IFCondition>

      <IFCondition Expression = "S_SECURE &amp; !( (UpdateSrcInc_SLAVERECEIVE=DISABLE) &amp; (UpdateDestInc_SLAVERECEIVE=DISABLE) &amp; (UpdateSrcDataWidth_SLAVERECEIVE=DISABLE) &amp; (UpdateDestDataWidth_SLAVERECEIVE=DISABLE)  &amp; (UpdateTransferEventMode_SLAVERECEIVE=DISABLE) &amp;  (UpdateSrcSecure_SLAVERECEIVE=DISABLE) &amp; (UpdateDestSecure_SLAVERECEIVE=DISABLE) )">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_SLAVERECEIVE"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_SLAVERECEIVE"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_SLAVERECEIVE"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_SLAVERECEIVE"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_SLAVERECEIVE"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_SLAVERECEIVE"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_SLAVERECEIVE"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_SLAVERECEIVE"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_SLAVERECEIVE"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_SLAVERECEIVE"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_SLAVERECEIVE"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_SLAVERECEIVE"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_SLAVERECEIVE"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_SLAVERECEIVE"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_SLAVERECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE"/>
    </CallLibMethod>
    </IFCondition>
    <IFCondition Expression = "!S_SECURE &amp; !( (UpdateSrcInc_SLAVERECEIVE=DISABLE) &amp; (UpdateDestInc_SLAVERECEIVE=DISABLE) &amp; (UpdateSrcDataWidth_SLAVERECEIVE=DISABLE) &amp; (UpdateDestDataWidth_SLAVERECEIVE=DISABLE)  &amp; (UpdateTransferEventMode_SLAVERECEIVE=DISABLE))">
    <CallLibMethod Name="ADV_LPBAM_Q_SetDataConfig">
       <MethodArg Name="SrcInc" ParameterName="SrcInc_SLAVERECEIVE"/>
       <MethodArg Name="DestInc" ParameterName="DestInc_SLAVERECEIVE"/>
       <MethodArg Name="SrcDataWidth" ParameterName="SrcDataWidth_SLAVERECEIVE"/>
       <MethodArg Name="DestDataWidth" ParameterName="DestDataWidth_SLAVERECEIVE"/>
       <MethodArg Name="TransferEventMode" ParameterName="TransferEventMode_SLAVERECEIVE"/>
       <MethodArg Name="SrcSecure" ParameterName="SrcSecure_SLAVERECEIVE"/>
       <MethodArg Name="DestSecure" ParameterName="DestSecure_SLAVERECEIVE"/> 
       <MethodArg Name="UpdateSrcInc" ParameterName="UpdateSrcInc_SLAVERECEIVE"/>
       <MethodArg Name="UpdateDestInc" ParameterName="UpdateDestInc_SLAVERECEIVE"/>
       <MethodArg Name="UpdateSrcDataWidth" ParameterName="UpdateSrcDataWidth_SLAVERECEIVE"/>
       <MethodArg Name="UpdateDestDataWidth" ParameterName="UpdateDestDataWidth_SLAVERECEIVE"/>
       <MethodArg Name="UpdateTransferEventMode" ParameterName="UpdateTransferEventMode_SLAVERECEIVE"/>
       <MethodArg Name="UpdateSrcSecure" ParameterName="UpdateSrcSecure_SLAVERECEIVE"/>
       <MethodArg Name="UpdateDestSecure" ParameterName="UpdateDestSecure_SLAVERECEIVE"/> 
       <MethodArg Name="DataNode" ParameterName="NodeLevel_Data_SLAVERECEIVE"/>
       <MethodArg Name="pDescriptor" ParameterName="DESCRIPTOR_NAME_SLAVERECEIVE"/>
    </CallLibMethod>
    </IFCondition>

  </RefConfig>


<!--LPBAM_Status_t ADV_LPBAM_I2C_MasterTransmit_SetConfigQ(I2C_TypeDef                    *const pInstance,
                                                       LPBAM_DMAListInfo_t            const *const pDMAListInfo,
                                                       LPBAM_I2C_ConfigAdvConf_t      const *const pTxConfig,
                                                       LPBAM_I2C_MasterTxConfigDesc_t *const pDescriptor,
                                                       DMA_QListTypeDef               *const pQueue);
-->

<LibMethod Comment="" Name="ADV_LPBAM_I2C_MasterTx_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxConfig" TypeName="LPBAM_I2C_ConfigAdvConf_t">
	<Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
	</Argument>
	<Argument AddressOf="false" GenericType="simple" Name="Timing"/> 
	<Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>	
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_MasterTxConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>


<!--LPBAM_Status_t ADV_LPBAM_I2C_MasterTransmit_SetDataQ(I2C_TypeDef                  *const pInstance,
                                                     LPBAM_DMAListInfo_t          const *const pDMAListInfo,
                                                     LPBAM_I2C_DataAdvConf_t      const *const pTxData,
                                                     LPBAM_I2C_MasterTxDataDesc_t *const pDescriptor,
                                                     DMA_QListTypeDef             *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_MasterTx_SetDataQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxData" TypeName="LPBAM_I2C_DataAdvConf_t">
       <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="AddressingMode"/> 
        <Argument AddressOf="false" GenericType="simple" Name="SequenceNumber"/>
        <Argument AddressOf="true" GenericType="simple" Name="pData"/> 
        <Argument AddressOf="false" GenericType="simple" Name="DevAddress"/>
        <Argument AddressOf="false" GenericType="simple" Name="Size"/>													   
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_MasterTxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--LPBAM_Status_t ADV_LPBAM_I2C_MasterTransmit_SetFullQ(I2C_TypeDef                  *const pInstance,
                                                     LPBAM_DMAListInfo_t          const *const pDMAListInfo,
                                                     LPBAM_I2C_FullAdvConf_t      const *const pTxFull,
                                                     LPBAM_I2C_MasterTxFullDesc_t *const pDescriptor,
                                                     DMA_QListTypeDef             *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_MasterTx_SetFullQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxFull" TypeName="LPBAM_I2C_FullAdvConf_t">
       <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="Timing"/>
        <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>
        <Argument AddressOf="false" GenericType="simple" Name="AddressingMode"/> 
        <Argument AddressOf="false" GenericType="simple" Name="SequenceNumber"/>
        <Argument AddressOf="true" GenericType="simple" Name="pData"/> 
        <Argument AddressOf="false" GenericType="simple" Name="DevAddress"/>
        <Argument AddressOf="false" GenericType="simple" Name="Size"/>											  
       
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_MasterTxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--LPBAM_Status_t ADV_LPBAM_I2C_SlaveTransmit_SetConfigQ(I2C_TypeDef                   *const pInstance,
                                                      LPBAM_DMAListInfo_t           const *const pDMAListInfo,
                                                      LPBAM_I2C_ConfigAdvConf_t     const *const pTxConfig,
                                                      LPBAM_I2C_SlaveTxConfigDesc_t *const pDescriptor,
                                                      DMA_QListTypeDef              *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_SlaveTx_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxConfig" TypeName="LPBAM_I2C_ConfigAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="Timing"/> 
        <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>														  
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_SlaveTxConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--LPBAM_Status_t ADV_LPBAM_I2C_SlaveTransmit_SetDataQ(I2C_TypeDef                 *const pInstance,
                                                    LPBAM_DMAListInfo_t         const *const pDMAListInfo,
                                                    LPBAM_I2C_DataAdvConf_t     const *const pTxData,
                                                    LPBAM_I2C_SlaveTxDataDesc_t *const pDescriptor,
                                                    DMA_QListTypeDef            *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_SlaveTx_SetDataQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxData" TypeName="LPBAM_I2C_DataAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="AddressingMode"/> 
        <Argument AddressOf="false" GenericType="simple" Name="SequenceNumber"/>
        <Argument AddressOf="true" GenericType="simple" Name="pData"/>
        <Argument AddressOf="false" GenericType="simple" Name="Size"/>												  
       
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_SlaveTxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--
LPBAM_Status_t ADV_LPBAM_I2C_SlaveTransmit_SetFullQ(I2C_TypeDef                 *const pInstance,
                                                    LPBAM_DMAListInfo_t         const *const pDMAListInfo,
                                                    LPBAM_I2C_FullAdvConf_t     const *const pTxFull,
                                                    LPBAM_I2C_SlaveTxFullDesc_t *const pDescriptor,
                                                    DMA_QListTypeDef            *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_SlaveTx_SetFullQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pTxFull" TypeName="LPBAM_I2C_FullAdvConf_t">
       <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="Timing"/>
        <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>
        <Argument AddressOf="false" GenericType="simple" Name="AddressingMode"/> 
        <Argument AddressOf="false" GenericType="simple" Name="SequenceNumber"/>
        <Argument AddressOf="true" GenericType="simple" Name="pData"/>
        <Argument AddressOf="false" GenericType="simple" Name="Size"/>
		
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_SlaveTxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--LPBAM_Status_t ADV_LPBAM_I2C_MasterReceive_SetDataQ(I2C_TypeDef                  *const pInstance,
                                                    LPBAM_DMAListInfo_t          const *const pDMAListInfo,
                                                    LPBAM_I2C_DataAdvConf_t      const *const pRxData,
                                                    LPBAM_I2C_MasterRxDataDesc_t *const pDescriptor,
                                                    DMA_QListTypeDef             *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_MasterRx_SetDataQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxData" TypeName="LPBAM_I2C_DataAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="AddressingMode"/> 
        <Argument AddressOf="false" GenericType="simple" Name="SequenceNumber"/>
        <Argument AddressOf="true" GenericType="simple" Name="pData"/> 
        <Argument AddressOf="false" GenericType="simple" Name="DevAddress"/>
        <Argument AddressOf="false" GenericType="simple" Name="Size"/>											  
       
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_MasterRxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--LPBAM_Status_t ADV_LPBAM_I2C_MasterReceive_SetFullQ(I2C_TypeDef                  *const pInstance,
                                                    LPBAM_DMAListInfo_t          const *const pDMAListInfo,
                                                    LPBAM_I2C_FullAdvConf_t      const *const pRxFull,
                                                    LPBAM_I2C_MasterRxFullDesc_t *const pDescriptor,
                                                    DMA_QListTypeDef             *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_MasterRx_SetFullQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxFull" TypeName="LPBAM_I2C_FullAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="Timing"/>
        <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>
        <Argument AddressOf="false" GenericType="simple" Name="AddressingMode"/> 
        <Argument AddressOf="false" GenericType="simple" Name="SequenceNumber"/>
        <Argument AddressOf="true" GenericType="simple" Name="pData"/> 
        <Argument AddressOf="false" GenericType="simple" Name="DevAddress"/>
        <Argument AddressOf="false" GenericType="simple" Name="Size"/>										  
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_MasterRxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--LPBAM_Status_t ADV_LPBAM_I2C_MasterReceive_SetConfigQ(I2C_TypeDef                    *const pInstance,
                                                      LPBAM_DMAListInfo_t            const *const pDMAListInfo,
                                                      LPBAM_I2C_ConfigAdvConf_t      const *const pRxConfig,
                                                      LPBAM_I2C_MasterRxConfigDesc_t *const pDescriptor,
                                                      DMA_QListTypeDef               *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_MasterRx_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxConfig" TypeName="LPBAM_I2C_ConfigAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="Timing"/> 
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 													  
        
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_MasterRxConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--
LPBAM_Status_t ADV_LPBAM_I2C_SlaveReceive_SetConfigQ(I2C_TypeDef                   *const pInstance,
                                                     LPBAM_DMAListInfo_t           const *const pDMAListInfo,
                                                     LPBAM_I2C_ConfigAdvConf_t     const *const pRxConfig,
                                                     LPBAM_I2C_SlaveRxConfigDesc_t *const pDescriptor,
                                                     DMA_QListTypeDef              *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_SlaveRx_SetConfigQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxConfig" TypeName="LPBAM_I2C_ConfigAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
           <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
           <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
       </Argument>
       <Argument AddressOf="false" GenericType="simple" Name="Timing"/> 
       <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/> 														  
       
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_SlaveRxConfigDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--
LPBAM_Status_t ADV_LPBAM_I2C_SlaveReceive_SetDataQ(I2C_TypeDef                 *const pInstance,
                                                   LPBAM_DMAListInfo_t         const *const pDMAListInfo,
                                                   LPBAM_I2C_DataAdvConf_t     const *const pRxData,
                                                   LPBAM_I2C_SlaveRxDataDesc_t *const pDescriptor,
                                                   DMA_QListTypeDef            *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_SlaveRx_SetDataQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxData" TypeName="LPBAM_I2C_DataAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="AddressingMode"/> 
        <Argument AddressOf="false" GenericType="simple" Name="SequenceNumber"/>
        <Argument AddressOf="true" GenericType="simple" Name="pData"/>
        <Argument AddressOf="false" GenericType="simple" Name="Size"/>												  
       
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_SlaveRxDataDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>




<!--
LPBAM_Status_t ADV_LPBAM_I2C_SlaveReceive_SetFullQ(I2C_TypeDef                 *const pInstance,
                                                   LPBAM_DMAListInfo_t         const *const pDMAListInfo,
                                                   LPBAM_I2C_FullAdvConf_t     const *const pRxFull,
                                                   LPBAM_I2C_SlaveRxFullDesc_t *const pDescriptor,
                                                   DMA_QListTypeDef            *const pQueue);
-->
<LibMethod Comment="" Name="ADV_LPBAM_I2C_SlaveRx_SetFullQ"> 
    <Argument AddressOf="false" GenericType="simple" Name="InstanceIP"/>

    <Argument AddressOf="true" GenericType="struct" Name="pDMAListInfo" TypeName="LPBAM_DMAListInfo_t">
       <Argument AddressOf="false" GenericType="simple" Name="QueueType"/> 
       <Argument AddressOf="true" GenericType="baseaddress" Name="pInstance" TypeName="DMA_TypeDef"/>
    </Argument>       

    <Argument AddressOf="true" GenericType="struct" Name="pRxFull" TypeName="LPBAM_I2C_FullAdvConf_t">
        <Argument AddressOf="false" GenericType="struct" Name="AutoModeConf" TypeName="LPBAM_I2C_AutonomousModeConf_t">
            <Argument AddressOf="false" GenericType="simple" Name="TriggerState"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/>
            <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="Timing"/>
        <Argument AddressOf="false" GenericType="simple" Name="WakeupIT"/>
        <Argument AddressOf="false" GenericType="simple" Name="AddressingMode"/> 
        <Argument AddressOf="false" GenericType="simple" Name="SequenceNumber"/>
        <Argument AddressOf="true" GenericType="simple" Name="pData"/>
        <Argument AddressOf="false" GenericType="simple" Name="Size"/> 											   
       
    </Argument> 

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="LPBAM_I2C_SlaveRxFullDesc_t" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pQueue" TypeName="DMA_QListTypeDef" Optional="output">
         <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>
    
</LibMethod>





<!--LPBAM_Status_t ADV_LPBAM_Q_SetDataConfig(LPBAM_COMMON_DataAdvConf_t const *const pDataConfig,
                                         uint32_t                   DataNode,
                                         void                       const *const pDescriptor);

-->

  <LibMethod Comment="" Name="ADV_LPBAM_Q_SetDataConfig">
    <Argument AddressOf="true" GenericType="struct" Name="pDataConfig" TypeName="LPBAM_COMMON_DataAdvConf_t">
      <Argument AddressOf="true" GenericType="struct" Name="TransferConfig" TypeName="LPBAM_DMA_NodeConfTypeDef">
        <Argument AddressOf="true" GenericType="struct" Name="Transfer" TypeName="LPBAM_DMA_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="SrcInc"/>
            <Argument AddressOf="false" GenericType="simple" Name="DestInc"/>
            <Argument AddressOf="false" GenericType="simple" Name="SrcDataWidth"/>
            <Argument AddressOf="false" GenericType="simple" Name="DestDataWidth"/>
            <Argument AddressOf="false" GenericType="simple" Name="TransferEventMode"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="SrcSecure"/>  
        <Argument AddressOf="false" GenericType="simple" Name="DestSecure"/> 
      </Argument> 
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcInc"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestInc"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcDataWidth"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestDataWidth"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateTransferEventMode"/>
      <Argument AddressOf="false" GenericType="simple" Name="UpdateSrcSecure"/>  
      <Argument AddressOf="false" GenericType="simple" Name="UpdateDestSecure"/>
    </Argument>   

    <Argument AddressOf="false" GenericType="simple" Name="DataNode"/>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="DONTCARE" Optional="output">
      <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>   
 </LibMethod>







<!--LPBAM_Status_t ADV_LPBAM_Q_SetTriggerConfig(LPBAM_COMMON_TrigAdvConf_t const *const pTrigConfig,
                                            uint32_t                   NodeLevel,
                                            void                       const *const pDescriptor);
-->
   <LibMethod Comment="" Name="ADV_LPBAM_Q_SetTriggerConfig">
     <Argument AddressOf="true" GenericType="struct" Name="pTrigConfig" TypeName="LPBAM_COMMON_TrigAdvConf_t">
      <Argument AddressOf="true" GenericType="struct" Name="TriggerConfig" TypeName="LPBAM_DMA_TriggerConfTypeDef">
         <Argument AddressOf="false" GenericType="simple" Name="TriggerMode"/>  
         <Argument AddressOf="false" GenericType="simple" Name="TriggerPolarity"/> 
         <Argument AddressOf="false" GenericType="simple" Name="TriggerSelection"/> 
      </Argument>  
    </Argument>   

    <Argument AddressOf="false" GenericType="simple" Name="NodeLevel"/>

    <Argument Comment="" AddressOf="true" GenericType="struct" Name="pDescriptor" TypeName="DONTCARE" Optional="output">
      <Argument Comment="" AddressOf="false" GenericType="simple" Name="fake_for_struct"/>
    </Argument>   
  </LibMethod>



  <RefComponent Cclass="HAL" Cgroup="LPBAM" Cversion="1.0">
    <File Category="header" Name="Utilities/lpbam/STM32U5/stm32_platform_lpbam_i2c.h"/>
    <File Category="header" Name="Utilities/lpbam/stm32_adv_lpbam_i2c.h"/>
    <File Category="header" Name="Utilities/lpbam/stm32_adv_lpbam_common.h"/>
    <File Category="source" Name="Utilities/lpbam/stm32_adv_lpbam_i2c.c"/>
    <File Category="source" Name="Utilities/lpbam/stm32_adv_lpbam_common.c"/>
    <File Category="header" Name="Utilities/lpbam/stm32_lpbam_i2c.h"/>
    <File Category="source" Name="Utilities/lpbam/stm32_lpbam_i2c.c"/>  
  </RefComponent>

</IP>
