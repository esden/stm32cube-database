<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu"
xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance"
CodeTemplate=""
DBVersion="V4.0"
IncludeFile=""
Name="STM32_WPAN"
RootFolder="Middlewares/"
Version="STM32Cube_FW_WBA_V0.2.0"
ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">

<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WBA IMPLEMENTATION BEGIN @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

    <RefConfig Comment="" Name="STM32_WPAN_Init">
        <CallLibMethod Name="APPE_Init" Phase="preOS"/>
        <Component Name="HAL:PKA"/>
        <Component Name="Middleware:WPAN_COMMON"/>
        <Component Name="Middleware:WPAN_LINK_LAYER"/>
        <Component Name="Middleware:BLE_HOST_COMMON:BLE_MODE_SKELETON:$BLE_MODE_SKELETON"/>
        <Component Name="Middleware:BLE_HOST_COMMON:BLE:$BLE"/>
<!--
        <Component Name="Middleware:MBED_CRYPTO:BLE:$BLE"/>
        <Component Name="Middleware:MBED_CRYPTO:THREAD:$THREAD"/>
        <Component Name="Middleware:MBED_CRYPTO:ZIGBEE:$ZIGBEE"/>
-->
    <!-- Core - inc -->
        <ConfigFile Name="WBA_APP_COMMON_H"/>
        <ConfigFile Name="WBA_APP_CONF_H"/>
        <ConfigFile Name="WBA_APP_ENTRY_H"/>
        <ConfigFile Name="WBA_UTILITIES_CONF_H"/>
    <!-- Core - src -->
        <ConfigFile Name="WBA_APP_ENTRY_C"/>
    <!-- System/Interfaces - inc -->
        <ConfigFile Name="WBA_HW_IF_H"/>
        <ConfigFile Name="STM32_LMP_IF_H"/>
        <ConfigFile Name="TIMER_IF_H"/>
        <ConfigFile Name="USART_IF_H"/>
        <ConfigFile Name="HW_H"/>
    <!-- System/Interfaces - src -->
        <ConfigFile Name="HW_AES_C"/>
        <!-- <ConfigFile Name="HW_INIT_C"/> -->
        <!-- <ConfigFile Name="HW_PKA_P256_C"/> -->
        <ConfigFile Name="HW_OTP_C"/>
        <ConfigFile Name="HW_PKA_C"/>
        <ConfigFile Name="HW_RNG_C"/>
        <ConfigFile Name="PKA_P256_C"/>
        <ConfigFile Name="STM32_LMP_IF_C"/>
        <ConfigFile Name="TIMER_IF_C"/>
        <ConfigFile Name="USART_IF_C"/>
    <!-- System/Modules - inc -->
        <ConfigFile Name="ADC_CTRL_H"/>
        <ConfigFile Name="WBA_STM32WBAXX_RESETHANDLER_S"/>
        <ConfigFile Name="APP_SYS_H"/>
        <ConfigFile Name="BLE_TIMER_H"/>
        <ConfigFile Name="DEBUG_TRACE_H"/>
        <ConfigFile Name="GENERAL_CONFIG_H"/>
        <ConfigFile Name="OTP_H"/>
        <ConfigFile Name="SCM_H"/>
        <ConfigFile Name="STM_LIST_H"/>
        <ConfigFile Name="UTILITIES_COMMON_H"/>
    <!-- System/Modules - src -->
        <ConfigFile Name="ADC_CTRL_C"/>
        <ConfigFile Name="APP_SYS_C"/>
        <ConfigFile Name="BLE_TIMER_C"/>
        <ConfigFile Name="OTP_C"/>
        <ConfigFile Name="SCM_C"/>
        <ConfigFile Name="STM_LIST_C"/>
    <!-- System/Modules/baes - inc -->
        <ConfigFile Name="BAES_H"/>
        <ConfigFile Name="BAES_GLOBAL_H"/>
    <!-- System/Modules/baes - src -->
        <ConfigFile Name="BAES_CMAC_C"/>
        <ConfigFile Name="BAES_ECB_C"/>
    <!-- System/Modules/flash - inc -->
        <ConfigFile Name="FLASH_DRIVER_H"/>
        <ConfigFile Name="FLASH_MANAGER_H"/>
        <ConfigFile Name="RF_TIMING_SYNCHRO_H"/>
        <ConfigFile Name="SIMPLE_NVM_ARBITER_COMMON_H"/>
        <ConfigFile Name="SIMPLE_NVM_ARBITER_H"/>
    <!-- System/Modules/flash - src -->
        <ConfigFile Name="FLASH_DRIVER_C"/>
        <ConfigFile Name="FLASH_MANAGER_C"/>
        <ConfigFile Name="RF_TIMING_SYNCHRO_C"/>
        <ConfigFile Name="SIMPLE_NVM_ARBITER_C"/>
    <!-- System/Modules/MemoryManager - inc -->
        <ConfigFile Name="ADVANCED_MEMORY_MANAGER_H"/>
        <ConfigFile Name="STM32_MM_H"/>
    <!-- System/Modules/MemoryManager - src -->
        <ConfigFile Name="ADVANCED_MEMORY_MANAGER_C"/>
        <ConfigFile Name="STM32_MM_C"/>
    <!-- System/Modules/Nvm - inc -->
        <ConfigFile Name="NVM_H"/>
    <!-- System/Modules/Nvm - src -->
        <ConfigFile Name="NVM_EMUL_C"/>
    <!-- System/Modules/RTDebug - src & inc -->
        <ConfigFile Name="DEBUG_SIGNALS_H"/>
        <ConfigFile Name="LOCAL_DEBUG_TABLES_H"/>
        <ConfigFile Name="RTDEBUG_H"/>
        <ConfigFile Name="RTDEBUG_C"/>
    <!-- System/Config/Debug_GPIO - src & inc -->
        <ConfigFile Name="APP_DEBUG_C"/>
        <ConfigFile Name="APP_DEBUG_H"/>
        <ConfigFile Name="APP_DEBUG_SIGNAL_DEF_H"/>
        <ConfigFile Name="DEBUG_CONFIG_H"/>
    <!-- System/Config/Flash - src & inc -->
        <ConfigFile Name="SIMPLE_NVM_ARBITER_CONF_H"/>
    <!-- STM32WPAN/App - src & inc -->
        <ConfigFile Name="BLE_APP_BLE_H"/>
        <ConfigFile Name="BLE_APP_BLE_C"/>
        <ConfigFile Name="BLE_CONF_H"/>
        <ConfigFile Name="BLE_DBG_CONF_H"/>
        <!-- <ConfigFile Name="TL_DBG_CONF_H"/> -->
        <!-- <ConfigFile Name="CRYPTO_CONFIG"/> -->
    <!-- STM32WPAN/Target - src & inc -->
        <ConfigFile Name="BLEPLAT_C"/>
        <ConfigFile Name="POWER_TABLE_C"/>
        <!-- <ConfigFile Name="BLE_DBG_IF_C"/> -->
        <!-- <ConfigFile Name="BLE_DDB_IF_C"/> -->
        <!-- <ConfigFile Name="BLE_MM_IF_C"/> -->
        <!-- <ConfigFile Name="CRYPTO_PKA_C"/> -->
        <ConfigFile Name="BPKA_C"/>
        <ConfigFile Name="BPKA_H"/>
        <ConfigFile Name="LINKLAYER_PLAT_C"/>
        <ConfigFile Name="LL_SYS_IF_C"/>
        <ConfigFile Name="LL_SYS_IF_H"/>
        <ConfigFile Name="HOST_STACK_IF_C"/>
        <ConfigFile Name="HOST_STACK_IF_H"/>

    <!-- Client Profile - src & inc -->
        <ConfigFile Name="BLE_GATT_CLIENT_APP_H"/>
        <ConfigFile Name="BLE_GATT_CLIENT_APP_C"/>

    <!-- TM Profile - src & inc -->
        <!-- <ConfigFile Name="BLE_TM_H"/> -->
        <!-- <ConfigFile Name="BLE_TM_C"/> -->
        <ConfigFile Name="BLE_LHCI_H"/>
        <ConfigFile Name="BLE_LHCI_C"/>

    <!-- Server Profile Custom Template - src & inc -->
        <ConfigFile Name="BLE_SERVICE0_C"/>
        <ConfigFile Name="BLE_SERVICE0_H"/>
        <ConfigFile Name="BLE_SERVICE0_APP_C"/>
        <ConfigFile Name="BLE_SERVICE0_APP_H"/>

    <!-- List of pre-processor defines -->
        <Defines Name="USE_FULL_ASSERT"/>
        <Defines Name="USE_FULL_LL_DRIVER"/>
        <Defines Name="PHY_2_10_a"/>
        <Defines Name="PHY_40nm_2_30_a_A1"/>
        <Defines Name="NVM_ADAPT"/>
        <!-- <Defines Name="MBEDTLS_NO_PLATFORM_ENTROPY"/> -->
        <!-- <Defines Name="MBEDTLS_CONFIG_FILE" Value="&lt;crypto_config.h&gt;"/> -->
        <Defines Name="BLE" Condition="S_BLE_HOST | S_BLE_HOST_SKELETON"/>
      <!-- list of pre-processor defines coming from WB; to be validated -->
        <Defines Name="OPENTHREAD_CONFIG_FILE" Value="&lt;openthread_api_config_ftd.h&gt;" Condition="S_FTD_CLI | S_FTD"/>
        <Defines Name="OPENTHREAD_CONFIG_FILE" Value="&lt;openthread_api_config_mtd.h&gt;" Condition="S_MTD"/>
        <Defines Name="THREAD_WB" Value="" Condition="S_THREAD"/>
        <Defines Name="ZIGBEE_WB" Value="" Condition="S_ZIGBEE"/>

    </RefConfig>

    <LibMethod Name="APPE_Init" Comment="Initialize the STM32_WPAN stack">
    </LibMethod>

<!-- STM32_WPAN RefComponents begin -->

    <RefComponent Cclass="HAL" Cgroup="PKA" Cversion="1.0.0">
        <File Category="header" Name="Drivers/STM32WBAxx_HAL_Driver/Inc/stm32wbaxx_ll_pka.h"/>
    </RefComponent>

    <RefComponent Cclass="Middleware" Cgroup="WPAN_COMMON" Cversion="1.0.0">
        <File Category="header" Name="ST/STM32_WPAN/stm32_wpan_common.h"/>
        <File Category="header" Name="ST/STM32_WPAN/stm32_assert.h"/>
    </RefComponent>

    <RefComponent Cclass="Middleware" Cgroup="WPAN_LINK_LAYER" Cversion="1.0.0">
        <!-- Header files for link_layer -->
        <File Category="header" Name="ST/STM32_WPAN/link_layer/ll_cmd_lib/config/ble_basic/ll_fw_config.h"/>
        <File Category="header" Name="ST/STM32_WPAN/link_layer/ll_cmd_lib/inc/*.h"/> <!-- ok -->
        <File Category="header" Name="ST/STM32_WPAN/link_layer/ll_cmd_lib/inc/*"/>
        <File Category="header" Name="ST/STM32_WPAN/link_layer/ll_cmd_lib/inc/_40nm_reg_files/*.h"/>
        <File Category="header" Name="ST/STM32_WPAN/link_layer/ll_sys/inc/*.h"/>

        <!-- Library files for link_layer -->
        <!-- <File Category="library" Name="ST/STM32_WPAN/link_layer/ll_cmd_lib/lib/*.a"/> MAX en standby pour la step 2.1 -->
        <File Category="library" Name="ST/STM32_WPAN/link_layer/ll_cmd_lib/lib/LinkLayer_BLE_Basic_lib.a" Condition="Semaphore_BLE_STACK_TYPE_BASIC"/>
        <File Category="library" Name="ST/STM32_WPAN/link_layer/ll_cmd_lib/lib/LinkLayer_BLE_Full_lib.a" Condition="Semaphore_BLE_STACK_TYPE_FULL"/>

        <!-- Source files for ll_sys -->
        <File Category="source" Name="ST/STM32_WPAN/link_layer/ll_sys/src/*.c"/>
    </RefComponent>

<!-- BLE RefComponents begin -->
    <RefComponent Cclass="Middleware" Cgroup="BLE_HOST_COMMON" Cversion="1.0.0">
        <SubComponent Csub="BLE" Cvariant="Enabled">
        <!-- Header files for ble/ -->
            <File Category="header" Name="ST/STM32_WPAN/ble/*.h"/>
        <!-- Header files for ble/stack/include -->
            <File Category="header" Name="ST/STM32_WPAN/ble/stack/include/*.h"/>
        <!-- Header files for ble/stack/include/auto -->
            <File Category="header" Name="ST/STM32_WPAN/ble/stack/include/auto/*.h"/>
        <!-- Header files for ble/stack/lib -->
            <!-- <File Category="library" Name="ST/STM32_WPAN/ble/stack/lib/*.a"/> MAX en standby pour la step 2.1 -->
            <File Category="library" Name="ST/STM32_WPAN/ble/stack/lib/stm32wba_ble_stack_basic.a" Condition="Semaphore_BLE_STACK_TYPE_BASIC"/>
            <File Category="library" Name="ST/STM32_WPAN/ble/stack/lib/stm32wba_ble_stack_full.a" Condition="Semaphore_BLE_STACK_TYPE_FULL"/>
        <!-- Header files for ble/svc/Inc -->
            <File Category="header" Name="ST/STM32_WPAN/ble/svc/Inc/*.h"/>
       <!-- Source files for ble/svc/Src -->
            <File Category="source" Name="ST/STM32_WPAN/ble/svc/Src/svc_ctl.c"/>
            <File Category="header" Name="ST/STM32_WPAN/ble/svc/Src/svc_ctl.h"/>
            <File Category="header" Name="ST/STM32_WPAN/ble/svc/Src/uuid.h"/>
        </SubComponent>
        <SubComponent Csub="BLE_MODE_SKELETON" Cvariant="Enabled">
        <!-- Header files for ble/ -->
            <File Category="header" Name="ST/STM32_WPAN/ble/*.h"/>
        <!-- Header files for ble/stack/include -->
            <File Category="header" Name="ST/STM32_WPAN/ble/stack/include/*.h"/>
        <!-- Header files for ble/stack/include/auto -->
            <File Category="header" Name="ST/STM32_WPAN/ble/stack/include/auto/*.h"/>
        <!-- Header files for ble/stack/lib -->
            <!-- <File Category="library" Name="ST/STM32_WPAN/ble/stack/lib/*.a"/> MAX en standby pour la step 2.1 -->
            <File Category="library" Name="ST/STM32_WPAN/ble/stack/lib/stm32wba_ble_stack_basic.a" Condition="Semaphore_BLE_STACK_TYPE_BASIC"/>
            <File Category="library" Name="ST/STM32_WPAN/ble/stack/lib/stm32wba_ble_stack_full.a" Condition="Semaphore_BLE_STACK_TYPE_FULL"/>
        <!-- Header files for ble/svc/Inc -->
            <File Category="header" Name="ST/STM32_WPAN/ble/svc/Inc/*.h"/>
       <!-- Source files for ble/svc/Src -->
            <File Category="source" Name="ST/STM32_WPAN/ble/svc/Src/svc_ctl.c"/>
            <File Category="header" Name="ST/STM32_WPAN/ble/svc/Src/svc_ctl.h"/>
            <File Category="header" Name="ST/STM32_WPAN/ble/svc/Src/uuid.h"/>
        </SubComponent>
    </RefComponent>
<!-- BLE RefComponents end -->

<!-- Thread RefComponents begin -->
    <RefComponent Cclass="Middleware" Cgroup="THREAD" Cversion="1.0.0">
        <SubComponent Csub="THREAD" Cvariant="Enabled">
            <!-- list here all the remaining files to be copy/paste in case of minimal distribution -->
            <!-- Header files for -->
            <File Category="header" Name="ST/STM32_WPAN/thread/openthread/stack/third_party/mbedtls/repo/include/*"/>
            <File Category="header" Name="ST/STM32_WPAN/thread/openthread/stack/third_party/mbedtls/repo/include/mbedtls/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/thread/openthread/core/openthread_api/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/thread/openthread/stack/include/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/thread/openthread/stack/include/openthread/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/thread/openthread/stack/include/openthread/platform/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/interface/patterns/ble_thread/tl/tl_thread_hci.h"/>
           <!-- Source files for -->
            <File Category="source" Name="ST/STM32_WPAN/thread/openthread/core/openthread_api/*.c"/>
            <File Category="source" Name="ST/STM32_WPAN/interface/patterns/ble_thread/tl/tl_thread_hci.c"/>
            <File Category="source" Name="ST/STM32_WPAN/interface/patterns/ble_thread/tl/shci_tl.c"/>
            <File Category="source" Name="ST/STM32_WPAN/interface/patterns/ble_thread/tl/shci_tl_if.c"/>
         </SubComponent>
    </RefComponent>
<!-- Thread RefComponents end -->

<!-- Zigbee RefComponents begin -->
    <RefComponent Cclass="Middleware" Cgroup="ZIGBEE" Cversion="1.0.0">
        <SubComponent Csub="ZIGBEE" Cvariant="Enabled">
            <!-- Files for stack -->
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/extras/zigbee.extras.h"/>
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/mac/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/zcl/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/zcl/key/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/zcl/se/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/zcl/security/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/zcl/general/*.h"/>
            <File Category="header" Name="ST/STM32_WPAN/zigbee/stack/include/zgp/zgp.proxybasic.h"/>
            <!-- Files for platform -->
            <File Category="header" Name="ST/STM32_WPAN/zigbee/platform/*.h"/>
            <File Category="source" Name="ST/STM32_WPAN/zigbee/platform/*.c"/>
            <!-- Files for core -->
            <File Category="header" Name="ST/STM32_WPAN/zigbee/core/inc/*.h"/>
            <File Category="source" Name="ST/STM32_WPAN/zigbee/core/src/*.c"/>
            <!-- Libraries -->
            <File Category="library" Condition="KEIL6;!(SIiTideIiMDKAaARMOoV5 | SIiTideIiMDKAaARMOoV5Gg27 | SIiTideIiMDKAaARMOoV5Gg32)" Name="ST/STM32_WPAN/zigbee/lib/stm32wb_zigbee_wb_lib.a" Version=""/>
            <File Category="library" Condition="KEIL5;(SIiTideIiMDKAaARMOoV5 | SIiTideIiMDKAaARMOoV5Gg27 | SIiTideIiMDKAaARMOoV5Gg32)" Name="ST/STM32_WPAN/zigbee/lib/stm32wb_zigbee_wb_lib_keil.lib" Version=""/>
            <!-- Files for patterns -->
            <File Category="header" Name="ST/STM32_WPAN/interface/patterns/ble_thread/tl/tl_zigbee_hci.h"/>
            <File Category="source" Name="ST/STM32_WPAN/interface/patterns/ble_thread/tl/tl_zigbee_hci.c"/>
            <File Category="source" Name="ST/STM32_WPAN/interface/patterns/ble_thread/tl/shci_tl.c"/>
            <File Category="source" Name="ST/STM32_WPAN/interface/patterns/ble_thread/tl/shci_tl_if.c"/>
        </SubComponent>
    </RefComponent>
<!-- Zigbee RefComponents end -->

    <!-- <RefComponent Cclass="Middleware" Cgroup="MBED_CRYPTO" Cversion="1.1.0"> -->
        <!-- <SubComponent Csub="BLE" Cvariant="Enabled"> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/kremlin/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/kremlin/internal/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/vs2010/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/include/mbedtls/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/include/psa/*.h"/> -->
            <!-- <File Category="source" Name="Third_Party/mbed-crypto/library/*.c"/> -->
        <!-- </SubComponent> -->
        <!-- <SubComponent Csub="THREAD" Cvariant="Enabled"> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/kremlin/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/kremlin/internal/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/vs2010/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/include/mbedtls/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/include/psa/*.h"/> -->
            <!-- <File Category="source" Name="Third_Party/mbed-crypto/library/*.c"/> -->
        <!-- </SubComponent> -->
        <!-- <SubComponent Csub="ZIGBEE" Cvariant="Enabled"> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/kremlin/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/kremlin/internal/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/3rdparty/everest/include/everest/vs2010/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/include/mbedtls/*.h"/> -->
            <!-- <File Category="header" Name="Third_Party/mbed-crypto/include/psa/*.h"/> -->
            <!-- <File Category="source" Name="Third_Party/mbed-crypto/library/*.c"/> -->
        <!-- </SubComponent> -->
    <!-- </RefComponent> -->
<!-- STM32_WPAN RefComponents end -->

<!-- STM32_WPAN RefConfig begin -->

<!-- Core/inc begin -->

    <RefConfigFile Description="" Name="WBA_APP_COMMON_H" Template="stm32wba/stm32_wpan_app_common_h.ftl" destinationFolder="Core/Inc/">
        <File Category="header" Condition="all" Name="app_common.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="WBA_APP_CONF_H" Template="stm32wba/stm32_wpan_app_conf_h.ftl" destinationFolder="Core/Inc/">
        <File Category="header" Condition="all" Name="app_conf.h" Version="1.0"/>
    <!-- ftl specific items begin-->
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="BLE_CFG_PERIPHERAL" GenericType="Simple" Comment="0 to 1 (1 by default)"/>
        <Argument Name="BLE_APPLICATION_TYPE" GenericType="Simple"/>
        <Argument Name="BLE_MODE_TRANSPARENT_UART" GenericType="Simple"/>
        <Argument Name="BLE_MODE_CENTRAL" GenericType="Simple"/>
        <Argument Name="BLE_MODE_PERIPHERAL_CENTRAL" GenericType="Simple"/>
        <Argument Name="BLE_MODE_PERIPHERAL" GenericType="Simple"/>
        <Argument Name="THREAD_APPLICATION" GenericType="Simple"/>
        <Argument Name="THREAD" GenericType="Simple"/>
        <Argument Name="THREAD_SKELETON" GenericType="Simple"/>
        <Argument Name="BLE" GenericType="Simple"/>
        <Argument Name="BLE_MODE_SKELETON" GenericType="Simple"/>
        <Argument Name="ZIGBEE" GenericType="Simple"/>
        <Argument Name="ZIGBEE_SKELETON" GenericType="Simple"/>
        <Argument Name="CFG_TX_POWER" GenericType="Simple"/>
        <Argument Name="CFG_ADV_BD_ADDRESS" GenericType="Simple"/>
        <Argument Name="CFG_BLE_ADDRESS_TYPE" GenericType="Simple"/>
        <Argument Name="ADV_TYPE" GenericType="Simple"/>
        <Argument Name="CFG_STATIC_RANDOM_ADDRESS" GenericType="Simple"/>
        <Argument Name="STATIC_RANDOM_ADDRESS" GenericType="Simple"/>
        <Argument Name="ADV_INTERVAL_MIN" GenericType="Simple"/>
        <Argument Name="ADV_INTERVAL_MAX" GenericType="Simple"/>
        <Argument Name="ADV_INTERVAL_MIN_HEXA" GenericType="Simple"/>
        <Argument Name="ADV_INTERVAL_MAX_HEXA" GenericType="Simple"/>
        <Argument Name="CFG_BONDING_MODE" GenericType="Simple"/>
        <Argument Name="CFG_USED_FIXED_PIN" GenericType="Simple"/>
        <Argument Name="CFG_FIXED_PIN" GenericType="Simple"/>
        <Argument Name="CFG_ENCRYPTION_KEY_SIZE_MAX" GenericType="Simple"/>
        <Argument Name="CFG_ENCRYPTION_KEY_SIZE_MIN" GenericType="Simple"/>
        <Argument Name="CFG_IDENTITY_ADDRESS_TYPE" GenericType="Simple"/>
        <Argument Name="CFG_IO_CAPABILITY" GenericType="Simple"/>
        <Argument Name="CFG_MITM_PROTECTION" GenericType="Simple"/>
        <Argument Name="CFG_SC_SUPPORT" GenericType="Simple"/>
        <Argument Name="CFG_KEYPRESS_NOTIFICATION_SUPPORT" GenericType="Simple"/>
        <Argument Name="CFG_BLE_IRK" GenericType="Simple"/>
        <Argument Name="CFG_BLE_ERK" GenericType="Simple"/>
        <Argument Name="CFG_BLE_IRK_HEX" GenericType="Simple"/>
        <Argument Name="CFG_BLE_ERK_HEX" GenericType="Simple"/>
        <Argument Name="CFG_BLE_NUM_LINK" GenericType="Simple"/>
        <Argument Name="CFG_BLE_NUM_GATT_SERVICES" GenericType="Simple"/>
        <Argument Name="CFG_BLE_NUM_GATT_ATTRIBUTES" GenericType="Simple"/>
        <Argument Name="CFG_BLE_MAX_ATT_MTU" GenericType="Simple"/>
        <Argument Name="CFG_BLE_ATT_VALUE_ARRAY_SIZE" GenericType="Simple"/>
        <Argument Name="CFG_BLE_ATTR_PREPARE_WRITE_VALUE_SIZE" GenericType="Simple"/>
        <Argument Name="CFG_BLE_MBLOCK_COUNT_MARGIN" GenericType="Simple"/>
        <Argument Name="CFG_BLE_MAX_COC_NUMBER" GenericType="Simple"/>
        <Argument Name="CFG_BLE_MAX_COC_MPS" GenericType="Simple"/>
        <Argument Name="CFG_BLE_MAX_COC_INITIATOR_NBR" GenericType="Simple"/>
        <Argument Name="CFG_BLE_OPTIONS" GenericType="Simple"/>
        <Argument Name="CFG_BLE_OPTIONS_LL" GenericType="Simple"/>
        <Argument Name="CFG_BLE_OPTIONS_SVC" GenericType="Simple"/>
        <Argument Name="CFG_BLE_OPTIONS_DEVICE_NAME" GenericType="Simple"/>
        <Argument Name="CFG_BLE_OPTIONS_POWER_CLASS" GenericType="Simple"/>
        <Argument Name="CFG_BLE_MAX_DDB_ENTRIES" GenericType="Simple"/>
        <Argument Name="CFG_FULL_LOW_POWER" GenericType="Simple"/>
        <Argument Name="CFG_LPM_SUPPORTED" GenericType="Simple"/>
        <Argument Name="CFG_LPM_STDBY_SUPPORTED" GenericType="Simple"/>
        <Argument Name="ADV_TRACE_TIMESTAMP_ENABLE" GenericType="Simple"/>
        <Argument Name="CFG_DEBUG_APP_TRACE" GenericType="Simple"/>
        <Argument Name="CFG_DEBUG_TRACE_LIGHT" GenericType="Simple"/>
        <Argument Name="CFG_DEBUG_TRACE_FULL" GenericType="Simple"/>
        <Argument Name="DBG_TRACE_USE_CIRCULAR_QUEUE" GenericType="Simple"/>
        <Argument Name="DBG_TRACE_MSG_QUEUE_SIZE" GenericType="Simple"/>
        <Argument Name="SYS_MAX_MSG" GenericType="Simple"/>
        <Argument Name="INITIAL_ADV_TIMEOUT" GenericType="Simple"/>
        <Argument Name="APPLI_CONFIG_LOG_LEVEL" GenericType="Simple"/>
        <Argument Name="APPLI_PRINT_FILE_FUNC_LINE" GenericType="Simple"/>
        <Argument Name="CFG_NVM_ALIGN" GenericType="Simple"/>
        <Argument Name="RT_DEBUG_GPIO_MODULE" GenericType="Simple"/>
        <Argument Name="USE_RADIO_LOW_ISR" GenericType="Simple"/>
        <Argument Name="NEXT_EVENT_SCHEDULING_FROM_ISR" GenericType="Simple"/>
        <Argument Name="USE_TEMPERATURE_BASED_RADIO_CALIBRATION" GenericType="Simple"/>
        <Argument Name="RADIO_INTR_PRIO_HIGH" GenericType="Simple"/>
        <Argument Name="RADIO_INTR_PRIO_LOW" GenericType="Simple"/>
        <Argument Name="RADIO_SW_LOW_INTR_NUM" GenericType="Simple"/>
        <Argument Name="RADIO_SW_LOW_INTR_PRIO" GenericType="Simple"/>
        <Argument Name="CFG_HW_RNG_POOL_SIZE" GenericType="Simple"/>
        <Argument Name="CFG_MM_POOL_SIZE" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_MEMORY_NUMBER" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_1" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_1" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_1" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_2" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_2" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_2" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_3" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_3" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_3" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_4" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_4" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_4" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_5" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_5" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_5" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_6" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_6" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_6" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_7" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_7" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_7" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_8" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_8" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_8" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_9" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_9" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_9" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_10" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_10" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_10" GenericType="Simple"/>
        <Argument Name="ADV_FILTER" GenericType="Simple"/>
        <Argument Name="CFG_GAP_DEVICE_NAME" GenericType="Simple"/>
        <Argument Name="CFG_GAP_DEVICE_NAME_LENGTH" GenericType="Simple"/>
        <Argument Name="MAX_DBG_TRACE_MSG_SIZE" GenericType="Simple"/>
        <Argument Name="SNVMA_NVM_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BANK_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BANK_SIZE" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BANK_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BANK_SIZE" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BANK_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BANK_SIZE" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BANK_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BANK_SIZE" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="WBA_APP_ENTRY_H" Template="stm32wba/stm32_wpan_app_entry_h.ftl" destinationFolder="Core/Inc/"> 
        <File Category="header" Condition="all" Name="app_entry.h" Version="1.0"/>
        <!-- ftl specific items begin-->
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <!-- ftl specific items end-->
    </RefConfigFile>

    <RefConfigFile Description="" Name="WBA_UTILITIES_CONF_H" Template="stm32wba/stm32_wpan_utilities_conf_h.ftl" destinationFolder="Core/Inc/">
        <File Category="header" Condition="all" Name="utilities_conf.h" Version="1.0"/>
    </RefConfigFile> 

<!-- Core/src begin -->
    
    <RefConfigFile Description="" Name="WBA_APP_ENTRY_C" Template="stm32wba/stm32_wpan_app_entry_c.ftl" destinationFolder="Core/Src/">
        <File Category="source" Condition="all" Name="app_entry.c" Version="1.0"/>
        <!-- ftl specific items begin-->
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="BLE_MODE_TRANSPARENT_UART" GenericType="Simple"/>
        <Argument Name="BLE_MODE_CENTRAL" GenericType="Simple"/>
        <Argument Name="BLE_MODE_PERIPHERAL_CENTRAL" GenericType="Simple"/>
        <Argument Name="BLE_MODE_PERIPHERAL" GenericType="Simple"/>
        <Argument Name="BLE" GenericType="Simple"/>
        <Argument Name="THREAD" GenericType="Simple"/>
        <Argument Name="ZIGBEE" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_MEMORY_NUMBER" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_1" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_1" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_1" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_2" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_2" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_2" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_3" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_3" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_3" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_4" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_4" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_4" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_5" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_5" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_5" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_6" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_6" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_6" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_7" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_7" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_7" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_8" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_8" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_8" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_9" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_9" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_9" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NBR_10" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_ID_NAME_10" GenericType="Simple"/>
        <Argument Name="CFG_AMM_VIRTUAL_BUFFER_SIZE_10" GenericType="Simple"/>
        <!-- ftl specific items end-->

    </RefConfigFile>

<!-- System/Interface/inc begin -->

    <RefConfigFile Description="" Name="WBA_HW_IF_H" Template="stm32wba/stm32_wpan_hw_if_h.ftl" destinationFolder="System/Interfaces/">
        <File Category="header" Condition="All" Name="hw_if.h" Version="1.0"/>
    </RefConfigFile> 
    
    <RefConfigFile Description="" Name="STM32_LMP_IF_H" Template="stm32wba/stm32_wpan_stm32_lpm_if_h.ftl" destinationFolder="System/Interfaces/">
        <File Category="header" Condition="all" Name="stm32_lpm_if.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="TIMER_IF_H" Template="stm32wba/stm32_wpan_timer_if_h.ftl" destinationFolder="System/Interfaces/">
        <File Category="header" Condition="all" Name="timer_if.h" Version="1.0"/>
    </RefConfigFile>

	<RefConfigFile Description="" Name="USART_IF_H" Template="stm32wba/usart_if_h.ftl" destinationFolder="System/Interfaces/">
        <File Category="header" Condition="!(Semaphore_ADV_TRACE_TIMESTAMP_ENABLE | CFG_DEBUG_APP_TRACE | CFG_DEBUG_TRACE_LIGHT | CFG_DEBUG_TRACE_FULL)" Name="usart_if.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="HW_H" Template="stm32wba/stm32_wpan_hw_h.ftl" destinationFolder="System/Interfaces/">
        <File Category="header" Condition="all" Name="hw.h" Version="1.0"/>
    </RefConfigFile>

<!-- System/Interface/src begin -->

    <RefConfigFile Description="" Name="HW_AES_C" Template="stm32wba/stm32_wpan_hw_aes_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="hw_aes.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="HW_INIT_C" Template="stm32wba/stm32_wpan_hw_init_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="hw_init.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="HW_OTP_C" Template="stm32wba/stm32_wpan_hw_otp_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="hw_otp.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="HW_PKA_P256_C" Template="stm32wba/stm32_wpan_hw_pka_p256_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="hw_pka_p256.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="HW_PKA_C" Template="stm32wba/stm32_wpan_hw_pka_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="hw_pka.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="HW_RNG_C" Template="stm32wba/stm32_wpan_hw_rng_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="hw_rng.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="PKA_P256_C" Template="stm32wba/stm32_wpan_pka_p256_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="pka_p256.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="STM32_LMP_IF_C" Template="stm32wba/stm32_wpan_stm32_lpm_if_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="stm32_lpm_if.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="TIMER_IF_C" Template="stm32wba/stm32_wpan_timer_if_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="all" Name="timer_if.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="USART_IF_C" Template="stm32wba/usart_if_c.ftl" destinationFolder="System/Interfaces/">
        <File Category="source" Condition="!(Semaphore_ADV_TRACE_TIMESTAMP_ENABLE | CFG_DEBUG_APP_TRACE | CFG_DEBUG_TRACE_LIGHT | CFG_DEBUG_TRACE_FULL)" Name="usart_if.c" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/inc begin -->

    <RefConfigFile Description="" Name="ADC_CTRL_H" Template="stm32wba/stm32_wpan_adc_ctrl_h.ftl" destinationFolder="System/Modules/">
        <File Category="header" Condition="all" Name="adc_ctrl.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_TIMER_H" Template="stm32wba/stm32_wpan_ble_timer_h.ftl" destinationFolder="System/Modules/">
        <File Category="header" Condition="all" Name="ble_timer.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="DEBUG_TRACE_H" Template="stm32wba/stm32_wpan_dbg_trace_h.ftl" destinationFolder="System/Modules/">
        <File Category="header" Condition="all" Name="dbg_trace.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="GENERAL_CONFIG_H" Template="stm32wba/stm32_wpan_general_config_h.ftl" destinationFolder="System/Modules/">
        <File Category="header" Condition="all" Name="general_config.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="OTP_H" Template="stm32wba/stm32_wpan_otp_h.ftl" destinationFolder="System/Modules/">
        <File Category="header" Condition="all" Name="otp.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="SCM_H" Template="stm32wba/stm32_wpan_scm_h.ftl" destinationFolder="System/Modules/">
        <File Category="header" Condition="all" Name="scm.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="STM_LIST_H" Template="stm32wba/stm32_wpan_stm_list_h.ftl" destinationFolder="System/Modules/">
        <File Category="header" Condition="all" Name="stm_list.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="UTILITIES_COMMON_H" Template="stm32wba/stm32_wpan_utilities_common_h.ftl" destinationFolder="System/Modules/">
        <File Category="header" Condition="all" Name="utilities_common.h" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/src begin -->

    <RefConfigFile Description="" Name="ADC_CTRL_C" Template="stm32wba/stm32_wpan_adc_ctrl_c.ftl" destinationFolder="System/Modules/">
        <File Category="source" Condition="all" Name="adc_ctrl.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="APP_SYS_C" Template="stm32wba/stm32_wpan_app_sys_c.ftl" destinationFolder="System/Modules/">
        <File Category="source" Condition="all" Name="app_sys.c" Version="1.0"/>
        <!-- ftl specific items begin-->
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <!-- ftl specific items end-->
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_TIMER_C" Template="stm32wba/stm32_wpan_ble_timer_c.ftl" destinationFolder="System/Modules/">
        <File Category="source" Condition="all" Name="ble_timer.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="OTP_C" Template="stm32wba/stm32_wpan_otp_c.ftl" destinationFolder="System/Modules/">
        <File Category="source" Condition="all" Name="otp.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="SCM_C" Template="stm32wba/stm32_wpan_scm_c.ftl" destinationFolder="System/Modules/">
        <File Category="source" Condition="all" Name="scm.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="STM_LIST_C" Template="stm32wba/stm32_wpan_stm_list_c.ftl" destinationFolder="System/Modules/">
        <File Category="source" Condition="all" Name="stm_list.c" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/baes/src begin -->

    <RefConfigFile Description="" Name="BAES_CMAC_C" Template="stm32wba/stm32_wpan_baes_cmac_c.ftl" destinationFolder="System/Modules/baes/">
        <File Category="source" Condition="all" Name="baes_cmac.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BAES_ECB_C" Template="stm32wba/stm32_wpan_baes_ecb_c.ftl" destinationFolder="System/Modules/baes/">
        <File Category="source" Condition="all" Name="baes_ecb.c" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/baes/inc begin -->

    <RefConfigFile Description="" Name="BAES_H" Template="stm32wba/stm32_wpan_baes_h.ftl" destinationFolder="System/Modules/baes/">
        <File Category="header" Condition="all" Name="baes.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BAES_GLOBAL_H" Template="stm32wba/stm32_wpan_baes_global_h.ftl" destinationFolder="System/Modules/baes/">
        <File Category="header" Condition="all" Name="baes_global.h" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/Flash/src begin -->

    <RefConfigFile Description="" Name="FLASH_DRIVER_C" Template="stm32wba/stm32_wpan_flash_driver_c.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="source" Condition="all" Name="flash_driver.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="FLASH_MANAGER_C" Template="stm32wba/stm32_wpan_flash_manager_c.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="source" Condition="all" Name="flash_manager.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="RF_TIMING_SYNCHRO_C" Template="stm32wba/stm32_wpan_rf_timing_synchro_c.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="source" Condition="all" Name="rf_timing_synchro.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="SIMPLE_NVM_ARBITER_C" Template="stm32wba/stm32_wpan_simple_nvm_arbiter_c.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="source" Condition="all" Name="simple_nvm_arbiter.c" Version="1.0"/>
        <Argument Name="SNVMA_NVM_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    </RefConfigFile>

<!-- System/Modules/Flash/inc begin -->

    <RefConfigFile Description="" Name="FLASH_DRIVER_H" Template="stm32wba/stm32_wpan_flash_driver_h.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="header" Condition="all" Name="flash_driver.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="FLASH_MANAGER_H" Template="stm32wba/stm32_wpan_flash_manager_h.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="header" Condition="all" Name="flash_manager.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="RF_TIMING_SYNCHRO_H" Template="stm32wba/stm32_wpan_rf_timing_synchro_h.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="header" Condition="all" Name="rf_timing_synchro.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="SIMPLE_NVM_ARBITER_COMMON_H" Template="stm32wba/stm32_wpan_simple_nvm_arbiter_common_h.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="header" Condition="all" Name="simple_nvm_arbiter_common.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="SIMPLE_NVM_ARBITER_H" Template="stm32wba/stm32_wpan_simple_nvm_arbiter_h.ftl" destinationFolder="System/Modules/Flash/">
        <File Category="header" Condition="all" Name="simple_nvm_arbiter.h" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/MemoryManager/inc begin -->

    <RefConfigFile Description="" Name="ADVANCED_MEMORY_MANAGER_H" Template="stm32wba/stm32_wpan_advanced_memory_manager_h.ftl" destinationFolder="System/Modules/MemoryManager/">
        <File Category="header" Condition="all" Name="advanced_memory_manager.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="STM32_MM_H" Template="stm32wba/stm32_wpan_stm32_mm_h.ftl" destinationFolder="System/Modules/MemoryManager/">
        <File Category="header" Condition="all" Name="stm32_mm.h" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/MemoryManager/src begin -->

    <RefConfigFile Description="" Name="ADVANCED_MEMORY_MANAGER_C" Template="stm32wba/stm32_wpan_advanced_memory_manager_c.ftl" destinationFolder="System/Modules/MemoryManager/">
        <File Category="source" Condition="all" Name="advanced_memory_manager.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="STM32_MM_C" Template="stm32wba/stm32_wpan_stm32_mm_c.ftl" destinationFolder="System/Modules/MemoryManager/">
        <File Category="source" Condition="all" Name="stm32_mm.c" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/Nvm/inc begin -->

    <RefConfigFile Description="" Name="NVM_H" Template="stm32wba/stm32_wpan_nvm_h.ftl" destinationFolder="System/Modules/Nvm/">
        <File Category="header" Condition="all" Name="nvm.h" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/Nvm/src begin -->

    <RefConfigFile Description="" Name="NVM_EMUL_C" Template="stm32wba/stm32_wpan_nvm_emul_c.ftl" destinationFolder="System/Modules/Nvm/">
        <File Category="source" Condition="all" Name="nvm_emul.c" Version="1.0"/>
    </RefConfigFile>

<!-- System/Modules/RTDebug - src & inc -->

    <RefConfigFile Description="" Name="DEBUG_SIGNALS_H" Template="stm32wba/stm32_wpan_debug_signals_h.ftl" destinationFolder="System/Modules/RTDebug/">
        <File Category="header" Condition="all" Name="debug_signals.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="LOCAL_DEBUG_TABLES_H" Template="stm32wba/stm32_wpan_local_debug_tables_h.ftl" destinationFolder="System/Modules/RTDebug/">
        <File Category="header" Condition="all" Name="local_debug_tables.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="RTDEBUG_H" Template="stm32wba/stm32_wpan_RTDebug_h.ftl" destinationFolder="System/Modules/RTDebug/">
        <File Category="header" Condition="all" Name="RTDebug.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="RTDEBUG_C" Template="stm32wba/stm32_wpan_RTDebug_c.ftl" destinationFolder="System/Modules/RTDebug/">
        <File Category="source" Condition="all" Name="RTDebug.c" Version="1.0"/>
    </RefConfigFile>

<!-- System/Startup - startup files -->

    <RefConfigFile Description="" Name="WBA_STM32WBAXX_RESETHANDLER_S" Template="stm32wba/stm32wbaxx_ResetHandler_s.ftl" destinationFolder="System/Startup/">
        <File Category="header" Condition="all" Name="stm32wbaxx_ResetHandler.S" Version="1.0"/>
        <!-- <File Category="header" Condition="SIiTcompilerIiIAR" Name="stm32wbaxx_ResetHandler.S" Version="1.0"/> -->
    </RefConfigFile>
    <!-- <RefConfigFile Description="" Name="WBA_STM32WBAXX_RESETHANDLER_GCC_S" Template="stm32wba/stm32wbaxx_ResetHandler_GCC_s.ftl" destinationFolder="System/Startup/"> -->
        <!-- <File Category="header" Condition="SIiTcompilerIiGCC" Name="stm32wbaxx_ResetHandler_GCC.s" Version="1.0"/> -->
    <!-- </RefConfigFile> -->
    <!-- <RefConfigFile Description="" Name="WBA_STM32WBAXX_RESETHANDLER_MDK-ARM_S" Template="stm32wba/stm32wbaxx_ResetHandler_MDK-ARM_s.ftl" destinationFolder="System/Startup/"> -->
        <!-- <File Category="header" Condition="SIiTcompilerIiARMCC" Name="stm32wbaxx_ResetHandler_MDK-ARM.s" Version="1.0"/> -->
    <!-- </RefConfigFile> -->

<!-- System/Config/Debug_GPIO - src & inc -->

    <RefConfigFile Description="" Name="APP_DEBUG_C" Template="stm32wba/stm32_wpan_app_debug_c.ftl" destinationFolder="System/Config/Debug_GPIO/">
        <File Category="source" Condition="all" Name="app_debug.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="APP_DEBUG_H" Template="stm32wba/stm32_wpan_app_debug_h.ftl" destinationFolder="System/Config/Debug_GPIO/">
        <File Category="header" Condition="all" Name="app_debug.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="APP_DEBUG_SIGNAL_DEF_H" Template="stm32wba/stm32_wpan_app_debug_signal_def_h.ftl" destinationFolder="System/Config/Debug_GPIO/">
        <File Category="header" Condition="all" Name="app_debug_signal_def.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="DEBUG_CONFIG_H" Template="stm32wba/stm32_wpan_debug_config_h.ftl" destinationFolder="System/Config/Debug_GPIO/">
        <File Category="header" Condition="all" Name="debug_config.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="APP_SYS_H" Template="stm32wba/stm32_wpan_app_sys_h.ftl" destinationFolder="System/Config/LowPower/">
        <File Category="header" Condition="all" Name="app_sys.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="SIMPLE_NVM_ARBITER_CONF_H" Template="stm32wba/stm32_wpan_reduced_simple_nvm_arbiter_conf_h.ftl" destinationFolder="System/Config/Flash/">
        <File Category="header" Condition="all" Name="simple_nvm_arbiter_conf.h" Version="1.0"/>
        <Argument Name="SNVMA_NVM_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_POLY_CRC16" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BANK_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BANK_SIZE" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BANK_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BANK_SIZE" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BANK_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BANK_SIZE" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BANK_NUMBER" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BANK_SIZE" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BUFFER_NBR" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BUFFER_1_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BUFFER_2_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BUFFER_3_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_1_BUFFER_4_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BUFFER_NBR" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BUFFER_1_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BUFFER_2_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BUFFER_3_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_2_BUFFER_4_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BUFFER_NBR" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BUFFER_1_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BUFFER_2_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BUFFER_3_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_3_BUFFER_4_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BUFFER_NBR" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BUFFER_1_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BUFFER_2_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BUFFER_3_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SNVMA_NVM_ID_4_BUFFER_4_NAME" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    </RefConfigFile>

<!-- STM32_WPAN/app begin -->

    <RefConfigFile Description="" Name="BLE_APP_BLE_C" Template="stm32wba/stm32_wpan_ble_app_ble_c.ftl">
        <File Category="source" Name="App/app_ble.c" Version="1.0" Condition="S_BLE_HOST &amp; (S_BLE_SP | S_BLE_RP | S_BLE_CP | S_BLE_TM)"/>
    <!-- ftl specific items begin-->
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="BLE_CFG_PERIPHERAL" GenericType="Simple" Comment="0 to 1 (1 by default)"/>
        <Argument Name="BLE_APPLICATION_TYPE" GenericType="Simple"/>
        <Argument Name="BLE_MODE_TRANSPARENT_UART" GenericType="Simple"/>
        <Argument Name="BLE_MODE_CENTRAL" GenericType="Simple"/>
        <Argument Name="BLE_MODE_PERIPHERAL_CENTRAL" GenericType="Simple"/>
        <Argument Name="BLE_STACK_TYPE" GenericType="Simple"/>
        <Argument Name="CUSTOM_P2P_SERVER" GenericType="Simple"/>
        <Argument Name="BLE_MODE_PERIPHERAL" GenericType="Simple"/>
        <Argument Name="P2P_SERVER_NUMBER" GenericType="Simple"/>
        <Argument Name="ADV_TYPE" GenericType="Simple"/>
        <Argument Name="CFG_BLE_ADDRESS_TYPE" GenericType="Simple"/>
        <Argument Name="ADV_FILTER" GenericType="Simple"/>
        <!-- <Argument Name="GAP_PERIPHERAL_ROLE" GenericType="Simple"/> -->
        <!-- <Argument Name="GAP_BROADCASTER_ROLE" GenericType="Simple"/> -->
        <!-- <Argument Name="GAP_CENTRAL_ROLE" GenericType="Simple"/> -->
        <!-- <Argument Name="GAP_OBSERVER_ROLE" GenericType="Simple"/> -->
        <Argument Name="CFG_GAP_DEVICE_NAME" GenericType="Simple"/>
        <Argument Name="CFG_GAP_DEVICE_NAME_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_DATA_LENGTH" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_TX_POWER_LEVEL" GenericType="Simple"/>
        <Argument Name="AD_TYPE_TX_POWER_LEVEL_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_TX_POWER_LEVEL" GenericType="Simple"/>
        <Argument Name="AD_TYPE_TX_POWER_LEVEL_DBM" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_COMPLETE_LOCAL_NAME" GenericType="Simple"/>
        <Argument Name="AD_TYPE_COMPLETE_LOCAL_NAME_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_COMPLETE_LOCAL_NAME" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_SHORTENED_LOCAL_NAME" GenericType="Simple"/>
        <Argument Name="AD_TYPE_SHORTENED_LOCAL_NAME_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_SHORTENED_LOCAL_NAME" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_APPEARANCE" GenericType="Simple"/>
        <Argument Name="AD_TYPE_APPEARANCE_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_APPEARANCE" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_ADVERTISING_INTERVAL" GenericType="Simple"/>
        <Argument Name="AD_TYPE_ADVERTISING_INTERVAL_VALUE" GenericType="Simple"/>
        <Argument Name="AD_TYPE_ADVERTISING_INTERVAL_VALUE_HEXA" GenericType="Simple"/>
        <Argument Name="ADV_INTERVAL_MIN_HEXA" GenericType="Simple"/>
        <Argument Name="ADV_INTERVAL_MIN" GenericType="Simple"/>
        <Argument Name="ADV_INTERVAL_MAX_HEXA" GenericType="Simple"/>
        <Argument Name="ADV_INTERVAL_MAX" GenericType="Simple"/>
        <Argument Name="AD_TYPE_ADVERTISING_INTERVAL_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_ADVERTISING_INTERVAL" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_LE_ROLE" GenericType="Simple"/>
        <Argument Name="AD_TYPE_LE_ROLE_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_LE_ROLE" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_16_BIT_SERV_UUID_CMPLT_LIST" GenericType="Simple"/>
        <Argument Name="AD_TYPE_16_BIT_SERV_UUID_CMPLT_LIST_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_NBR" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_1" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_1_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_2" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_2_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_3" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_3_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_4" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_4_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_5" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_5_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_6" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_6_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_7" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_7_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_8" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_8_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_9" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_9_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_10" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_10_INV" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_11" GenericType="Simple"/>
        <Argument Name="AD_SERVICE_CLASS_UUID_11_INV" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_128_BIT_SERV_UUID_CMPLT_LIST" GenericType="Simple"/>
        <Argument Name="AD_TYPE_128_BIT_SERV_UUID_CMPLT_LIST_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_128_BIT_SERV_UUID_CMPLT_LIST" GenericType="Simple"/>
        <Argument Name="AD_TYPE_128_BIT_SERV_UUID_CMPLT_LIST_INV" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_SLAVE_CONN_INTERVAL" GenericType="Simple"/>
        <Argument Name="AD_TYPE_SLAVE_CONN_INTERVAL_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_SLAVE_CONN_INTERVAL_MIN_MAX" GenericType="Simple"/>
        <Argument Name="AD_TYPE_SLAVE_CONN_INTERVAL_MIN" GenericType="Simple"/>
        <Argument Name="AD_TYPE_SLAVE_CONN_INTERVAL_MIN_HEXA" GenericType="Simple"/>
        <Argument Name="AD_TYPE_SLAVE_CONN_INTERVAL_MAX" GenericType="Simple"/>
        <Argument Name="AD_TYPE_SLAVE_CONN_INTERVAL_MAX_HEXA" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_URI" GenericType="Simple"/>
        <Argument Name="AD_TYPE_URI_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_URI_CODE_POINT" GenericType="Simple"/>
        <Argument Name="AD_TYPE_URI_DATA" GenericType="Simple"/>
        <Argument Name="AD_TYPE_URI_DATA_LENGTH" GenericType="Simple"/>
        <Argument Name="INCLUDE_AD_TYPE_MANUFACTURER_SPECIFIC_DATA" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_SPECIFIC_DATA_LENGTH" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_SPECIFIC_DATA_COMPANY_IDENTIFIER" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_NBR" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_1" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_1" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_2" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_2" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_3" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_3" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_4" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_4" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_5" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_5" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_6" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_6" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_7" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_7" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_8" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_8" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_9" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_9" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_10" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_10" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_11" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_11" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_12" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_12" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_13" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_13" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_14" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_14" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_15" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_15" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_16" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_16" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_17" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_17" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_18" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_18" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_19" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_19" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_20" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_20" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_21" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_21" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_22" GenericType="Simple"/>
        <Argument Name="AD_TYPE_MANUFACTURER_DATA_COMMENT_22" GenericType="Simple"/>
        <Argument Name="NUMBER_OF_SERVICES" GenericType="Simple"/>
        <Argument Name="CFG_STATIC_RANDOM_ADDRESS" GenericType="Simple"/>
        <Argument Name="CFG_RNG" GenericType="Simple"/>
        <Argument Name="SERVICE1_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE2_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE3_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE4_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE5_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE6_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE7_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE8_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE9_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE10_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE1_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE2_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE3_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE4_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE5_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE6_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE7_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE8_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE9_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE10_LONG_NAME" GenericType="Simple"/>

        <!-- ftl specific items end-->
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_APP_BLE_H" Template="stm32wba/stm32_wpan_ble_app_ble_h.ftl">
        <File Category="header" Name="App/app_ble.h" Version="1.0" Condition="S_BLE_HOST"/>
    <!-- ftl specific items begin-->
        <Argument Name="BLE_MODE_CENTRAL" GenericType="Simple"/>
        <Argument Name="BLE_MODE_PERIPHERAL_CENTRAL" GenericType="Simple"/>
        <Argument Name="BLE_MODE_PERIPHERAL" GenericType="Simple"/>
        <Argument Name="BLE_MODE_TRANSPARENT_UART" GenericType="Simple"/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    <!-- ftl specific items end-->
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_CONF_H" Template="stm32wba/stm32_wpan_ble_conf_h.ftl">
        <File Category="header" Condition="S_BLE_HOST | S_BLE_HOST_SKELETON" Name="App/ble_conf.h" Version="1.0"/>
        <Argument Name="BLE_CFG_PERIPHERAL" GenericType="Simple" Comment="0 to 1 (1 by default)"/>
        <Argument Name="BLE_CFG_CENTRAL" GenericType="Simple" Comment="0 to 1 (1 by default)"/>
        <Argument Name="BLE_CFG_SVC_MAX_NBR_CB" GenericType="Simple" Comment="0 to 8 (5 by default)"/>
        <Argument Name="BLE_CFG_CLT_MAX_NBR_CB" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_DBG_CONF_H" Template="stm32wba/stm32_wpan_ble_dbg_conf_h.ftl">
        <File Category="header" Condition="S_BLE_HOST | S_BLE_HOST_SKELETON" Name="App/ble_dbg_conf.h" Version="1.0"/>
        <Argument Name="BLE_DBG_APP_EN" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    </RefConfigFile> 

    <RefConfigFile Description="" Name="TL_DBG_CONF_H" Template="stm32wba/stm32_wpan_tl_dbg_conf_h.ftl">
        <File Category="header" Condition="S_BLE_HOST | S_THREAD | S_ZIGBEE" Name="App/tl_dbg_conf.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="CRYPTO_CONFIG" Template="stm32wba/stm32_wpan_crypto_config_h.ftl">
        <File Category="header" Condition="S_BLE_HOST | S_THREAD | S_ZIGBEE" Name="App/crypto_config.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_GATT_CLIENT_APP_C" Template="stm32wba/stm32_wpan_ble_gatt_client_app_c.ftl">
        <File Category="source" Condition="(S_BLE_CP|S_BLE_RP) &amp; S_BLE_HOST" Name="App/gatt_client_app.c" Version="1.0"/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_GATT_CLIENT_APP_H" Template="stm32wba/stm32_wpan_ble_gatt_client_app_h.ftl">
        <File Category="header" Condition="(S_BLE_CP|S_BLE_RP) &amp; S_BLE_HOST" Name="App/gatt_client_app.h" Version="1.0"/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_LHCI_C" Template="stm32wba/stm32_wpan_ble_lhci_c.ftl">
        <File Category="source" Condition="S_BLE_TM &amp; S_BLE_HOST" Name="App/lhci.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_LHCI_H" Template="stm32wba/stm32_wpan_ble_lhci_h.ftl">
        <File Category="header" Condition="S_BLE_TM &amp; S_BLE_HOST" Name="App/lhci.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_SERVICE0_C" Template="stm32wba/stm32_wpan_ble_service0_c.ftl">
        <File Category="source" Name="App/%service0%.c" Version="1.0" Condition="(S_BLE_SP | S_BLE_RP) &amp; S_SERVICE0"/>
        <!-- ftl specific items begin-->
        <!-- WARNING START -->
        <!-- THIS ITEM MUST BE THE FIRST IN THE LIST -->
        <Argument Name="SERVICE0" GenericType="Simple"/>
        <!-- WARNING END -->
        <Argument Name="SERVICE0_NUMBER_OF_CHARACTERISTICS" GenericType="Simple"/>

        <Argument Name="SERVICE0_LONG_NAME" GenericType="Simple"/>
        <!-- MZA Start -->
        <Argument Name="SERVICE0_SHORT_NAME" GenericType="Simple" RenameFileName="true"/>
        <!-- MZA End -->

        <Argument Name="SERVICE0_CHAR0_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE0_TYPE" GenericType="Simple"/>
        <Argument Name="SERVICE0_UUID" GenericType="Simple"/>
        <Argument Name="SERVICE0_UUID_TYPE" GenericType="Simple"/>
        <Argument Name="SERVICE0_UUID_128_INPUT_TYPE" GenericType="Simple"/>
        <Argument Name="SERVICE0_MAX_ATTRIBUTES_RECORDS" GenericType="Simple"/>

        <Argument Name="SERVICE0_CHAR0_UUID" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_UUID_TYPE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_UUID_128_INPUT_TYPE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_VALUE_OFFSET" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_VALUE_LENGTH" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_LENGTH_CHARACTERISTIC" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_ENC_KEY_SIZE" GenericType="Simple"/>

        <Argument Name="SERVICE_CHAR_PROP_NONE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_BROADCAST" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_READ" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_WRITE_WITHOUT_RESP" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_WRITE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_NOTIFY" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_INDICATE" GenericType="Simple"/>

        <Argument Name="SERVICE_CHAR_ATTR_PERMISSION_NONE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_ATTR_PERMISSION_AUTHEN_READ" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_ATTR_PERMISSION_AUTHOR_READ" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_ATTR_PERMISSION_ENCRY_READ" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_ATTR_PERMISSION_AUTHEN_WRITE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_ATTR_PERMISSION_AUTHOR_WRITE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_ATTR_PERMISSION_ENCRY_WRITE" GenericType="Simple"/>

        <Argument Name="SERVICE_CHAR_GATT_DONT_NOTIFY_EVENTS" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_GATT_NOTIFY_ATTRIBUTE_WRITE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_GATT_NOTIFY_WRITE_REQ_AND_WAIT_FOR_APPL_RESP" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP" GenericType="Simple"/>
        
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>

    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_SERVICE0_H" Template="stm32wba/stm32_wpan_ble_service0_h.ftl">
        <File Category="header" Name="App/%service0%.h" Version="1.0" Condition="(S_BLE_SP | S_BLE_RP) &amp; S_SERVICE0"/>
        <!-- ftl specific items begin-->
        <!-- WARNING START -->
        <!-- THIS ITEM MUST BE THE FIRST IN THE LIST -->
        <Argument Name="SERVICE0" GenericType="Simple"/>
        <!-- WARNING END -->
        <Argument Name="SERVICE0_NUMBER_OF_CHARACTERISTICS" GenericType="Simple"/>

        <Argument Name="SERVICE0_LONG_NAME" GenericType="Simple"/>

        <!-- MZA Start -->
        <Argument Name="SERVICE0_SHORT_NAME" GenericType="Simple" RenameFileName="true"/>
        <!-- MZA End -->

        <Argument Name="SERVICE0_CHAR0_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_BROADCAST" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_READ" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_WRITE_WITHOUT_RESP" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_WRITE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_NOTIFY" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_INDICATE" GenericType="Simple"/>

    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_SERVICE0_APP_C" Template="stm32wba/stm32_wpan_ble_service0_app_c.ftl">
        <File Category="source" Name="App/%service0%_app.c" Version="1.0" Condition="(S_BLE_SP | S_BLE_RP) &amp; S_SERVICE0"/>
        <!-- ftl specific items begin-->
        <!-- WARNING START -->
        <!-- THIS ITEM MUST BE THE FIRST IN THE LIST -->
        <Argument Name="SERVICE0" GenericType="Simple"/>
        <!-- WARNING END -->
        <Argument Name="SERVICE0_NUMBER_OF_CHARACTERISTICS" GenericType="Simple"/>

        <Argument Name="SERVICE0_LONG_NAME" GenericType="Simple"/>
        <!-- MZA Start -->
        <Argument Name="SERVICE0_SHORT_NAME" GenericType="Simple" RenameFileName="true"/>
        <!-- MZA End -->
        <Argument Name="SERVICE0_CHAR0_LONG_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_SHORT_NAME" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_BROADCAST" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_READ" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_WRITE_WITHOUT_RESP" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_WRITE" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_NOTIFY" GenericType="Simple"/>
        <Argument Name="SERVICE0_CHAR0_PROP_INDICATE" GenericType="Simple"/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment=""/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment=""/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment=""/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_SERVICE0_APP_H" Template="stm32wba/stm32_wpan_ble_service0_app_h.ftl">
        <File Category="header" Name="App/%service0%_app.h" Version="1.0" Condition="(S_BLE_SP | S_BLE_RP) &amp; S_SERVICE0"/>
        <Argument Name="SERVICE0_SHORT_NAME" GenericType="Simple" RenameFileName="true"/>
        <Argument Name="SERVICE0" GenericType="Simple" RenameFileName="true"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="THREAD_APP_THREAD_C" Template="stm32wba/stm32_wpan_thread_app_thread_c.ftl">
        <File Category="source" Condition="S_THREAD" Name="App/app_thread.c" Version="1.0"/>
        <Argument Name="THREAD_APPLICATION" GenericType="Simple" Comment="String (Full Thread Device with Command Line Interface by default)"/>
        <Argument Name="CFG_CLI_UART" GenericType="Simple" Comment=""/>
        <Argument Name="PANID" GenericType="Simple" Comment=""/>
        <Argument Name="CHANNEL" GenericType="Simple" Comment=""/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment=""/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment=""/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment=""/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="THREAD_APP_THREAD_H" Template="stm32wba/stm32_wpan_thread_app_thread_h.ftl">
        <File Category="header" Condition="S_THREAD" Name="App/app_thread.h" Version="1.0"/>
        <Argument Name="THREAD_APPLICATION" GenericType="Simple" Comment="String (Full Thread Device with Command Line Interface by default)"/>
    </RefConfigFile>

    <!-- STM32_WPAN/App end -->

    <!-- STM32_WPAN/Target begin -->
    <RefConfigFile Description="" Name="BLE_TIMER_IF_C" Template="stm32wba/stm32_wpan_ble_timer_if_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="S_BLE_HOST"  Name="ble_timer_if.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLEPLAT_C" Template="stm32wba/stm32_wpan_ble_bleplat_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="S_BLE_HOST | S_BLE_HOST_SKELETON"  Name="bleplat.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="POWER_TABLE_C" Template="stm32wba/stm32_wpan_power_table_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <!-- <File Category="source" Condition="S_BLE_HOST | S_THREAD | S_ZIGBEE"  Name="power_table.c" Version="1.0"/> -->
        <File Category="source" Condition="all"  Name="power_table.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_DBG_IF_C" Template="stm32wba/stm32_wpan_ble_dbg_if_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="S_BLE_HOST"  Name="ble_dbg_if.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_DDB_IF_C" Template="stm32wba/stm32_wpan_ble_ddb_if_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="S_BLE_HOST"  Name="ble_ddb_if.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BLE_MM_IF_C" Template="stm32wba/stm32_wpan_ble_mm_if_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="S_BLE_HOST"  Name="ble_mm_if.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="CRYPTO_PKA_C" Template="stm32wba/stm32_wpan_crypto_pka_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="S_BLE_HOST | S_THREAD | S_ZIGBEE" Name="crypto_pka.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="LINKLAYER_PLAT_C" Template="stm32wba/stm32_wpan_linklayer_plat_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="all"  Name="linklayer_plat.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BPKA_C" Template="stm32wba/stm32_wpan_bpka_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="all"  Name="bpka.c" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="BPKA_H" Template="stm32wba/stm32_wpan_bpka_h.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="header" Condition="all"  Name="bpka.h" Version="1.0"/>
    </RefConfigFile>

    <RefConfigFile Description="" Name="LL_SYS_IF_C" Template="stm32wba/stm32_wpan_ll_sys_if_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="all" Name="ll_sys_if.c" Version="1.0"/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    </RefConfigFile>
    
    <RefConfigFile Description="" Name="LL_SYS_IF_H" Template="stm32wba/stm32_wpan_ll_sys_if_h.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="header" Condition="all" Name="ll_sys_if.h" Version="1.0"/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
    </RefConfigFile>

	<RefConfigFile Description="" Name="HOST_STACK_IF_C" Template="stm32wba/host_stack_if_c.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="source" Condition="all" Name="host_stack_if.c" Version="1.0"/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="BLE" GenericType="Simple"/>
        <Argument Name="BLE_MODE_SKELETON" GenericType="Simple"/>
        <Argument Name="THREAD" GenericType="Simple"/>
        <Argument Name="THREAD_SKELETON" GenericType="Simple"/>
        <Argument Name="ZIGBEE" GenericType="Simple"/>
        <Argument Name="ZIGBEE_SKELETON" GenericType="Simple"/>
    </RefConfigFile>
	
	<RefConfigFile Description="" Name="HOST_STACK_IF_H" Template="stm32wba/host_stack_if_h.ftl" destinationFolder="STM32_WPAN/Target/">
        <File Category="header" Condition="all" Name="host_stack_if.h" Version="1.0"/>
        <Argument Name="FREERTOS_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="THREADX_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="SEQUENCER_STATUS" GenericType="Simple" Comment="0 to 1 (0 by default)"/>
        <Argument Name="BLE" GenericType="Simple"/>
        <Argument Name="BLE_MODE_SKELETON" GenericType="Simple"/>
        <Argument Name="THREAD" GenericType="Simple"/>
        <Argument Name="THREAD_SKELETON" GenericType="Simple"/>
        <Argument Name="ZIGBEE" GenericType="Simple"/>
        <Argument Name="ZIGBEE_SKELETON" GenericType="Simple"/>
    </RefConfigFile>

    <!-- STM32_WPAN/Target end -->

	<!-- BSP Virtual PortCom Begin -->
    <RefBspComponent Name="Serial Link for Traces" BspIpName="(LPU|US)ART" BspModeName="Asynchronous">
        <File Category="template" Name="stm32wba/usart_if_c.ftl" src="System/Interfaces/"/>
        <File Category="template" Name="stm32wba/usart_if_h.ftl" src="System/Interfaces/"/>
    </RefBspComponent>
    <RefBspComponent Name="Serial Link for CubeMonitor RF" BspIpName="(LPU|US)ART" BspModeName="Asynchronous">
        <File Category="template" Name="stm32wba/usart_if_c.ftl" src="System/Interfaces/"/>
        <File Category="template" Name="stm32wba/usart_if_h.ftl" src="System/Interfaces/"/>
        <File Category="template" Name="stm32wba/app_ble_c.ftl" src="STM32_WPAN/App/"/>
    </RefBspComponent>

<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WBA IMPLEMENTATION END @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->


<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WBA IMPLEMENTATION END @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

    <RefConfigFile Description="" Name="THREAD_ZGB_STM_LOGGING_H" Template="stm32wba/stm32_wpan_stm_logging_h.ftl" destinationFolder="Core/Inc/">
        <File Category="header" Condition="Semaphore_THREAD | Semaphore_ZIGBEE" Name="stm_logging.h" Version="1.0"/>
        <Argument Name="THREAD" GenericType="Simple"/>
        <Argument Name="ZIGBEE" GenericType="Simple"/>
    </RefConfigFile>

<!-- Core/inc end -->

    <RefConfigFile Description="" Name="FREERTOS_PORT_C" Template="stm32wba/stm32_wpan_freertos_port_c.ftl" destinationFolder="Core/Src/">
        <File Category="source" Condition="S_FREERTOS$context" Name="freertos_port.c" Version="1.0"/>
    </RefConfigFile>
	
    <RefConfigFile Description="" Name="THREAD_ZGB_STM_LOGGING_C" Template="stm32wba/stm32_wpan_stm_logging_c.ftl" destinationFolder="Core/Src/">
        <File Category="source" Condition="Semaphore_THREAD | Semaphore_ZIGBEE" Name="stm_logging.c" Version="1.0"/>
        <Argument Name="THREAD" GenericType="Simple"/>
        <Argument Name="ZIGBEE" GenericType="Simple"/>
    </RefConfigFile>

<!-- Core/src end -->

<!-- STM32_WPAN/app begin -->
    

    <RefConfigFile Description="" Name="ZIGBEE_APP_ZIGBEE_C" Template="stm32wba/stm32_wpan_zigbee_app_zigbee_c.ftl">
        <File Category="source" Condition="Semaphore_ZIGBEE" Name="App/app_zigbee.c" Version="1.0"/>
        <!-- Application parameters -->
        <Argument Name="ZGB_APPLICATION" GenericType="Simple"/>
        <Argument Name="ZGB_NW_MODE" GenericType="Simple"/>
        <Argument Name="ZGB_DEVICE_ROLE" GenericType="Simple"/>
        <Argument Name="ZGB_TOUCHLINK_CAPABILITY" GenericType="Simple"/>
        <Argument Name="ZGB_NB_ENDPOINTS" GenericType="Simple"/>
        <Argument Name="ZGB_CHANNEL" GenericType="Simple"/>
        <Argument Name="ZGB_SLEEPY_MODE" GenericType="Simple"/>
        <!-- Endpoint1 parameters -->
        <Argument Name="ENDPOINT1_ID_ZGB" GenericType="Simple"/>
        <Argument Name="ZGB_ENDPOINT1_PROFILE_ID" GenericType="Simple"/>
        <Argument Name="ENDPOINT1_DEVICE_ID" GenericType="Simple"/>
        <!-- zcl callbacks definitions: the comment field is constructed in two different ways:
                1 - {base_of_callback_fcts}:{specific_name_of_first_fct}({args})/{specific_name_of_second_fct}({args})/etc...  => when args are too specific
                2 - {base_of_callback_fcts}:{specific_name_of_first_fct}/{specific_name_of_second_fct}/etc... => when args follow an identified pattern
                
                This parameter has no value, only the comment is used in generateZgbCallbacks 
                Name has to contains CALLBACKS, Name has to contains the ClusterName, Comments has to contains Server or Client
        -->
        
        <!-- <Cluster Type>:<name of the MasterCB structure>: <name of the masterCB> -->
        
       
     
        
        <Argument Name="ZCL_BASIC_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.basic.h:basic:basic:::ZbZclBasic$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)::"/>
        
        <Argument Name="ZCL_IDENTIFY_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.identify.h:identify:identify:::ZbZclIdentify$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, NULL)"/>
       
        <Argument Name="ZCL_ALARM_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.alarm.h:alarm:alarm:static ZbZclAlarm$ROLECallbackT:Alarm$ROLECallbacks_$ENDPOINT:ZbZclAlarm$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, AlarmClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, ZCL_ALARM_LOG_ENTRY_NB_$ENDPOINT, zigbee_app_info.time_server_$ENDPOINT)"/>
        <Argument Name="CB_ALARM_CLIENT_ENDPOINT1" GenericType="Simple" Comment="::"/>
        <Argument Name="ZPARAM_ALARM_LOGSIZE_ENDPOINT1" GenericType="Simple" Comment="alarm:ZCL_ALARM_LOG_ENTRY_NB_"/>
        
        <Argument Name="ZCL_TIME_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.time.h:time:time:static struct ZbZclTime$ROLECallbacks:Time$ROLECallbacks_$ENDPOINT:ZbZclTime$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;TimeServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_TIME_SERVER_GETTIME_ENDPOINT1" GenericType="Simple" Comment="get_time:static uint32_t:(struct ZbZclClusterT *cluster, void *arg)"/>
        <Argument Name="CB_TIME_SERVER_SETTIME_ENDPOINT1" GenericType="Simple" Comment="set_time:static void:(struct ZbZclClusterT *cluster, uint32_t time_val, void *arg)"/>

        <!-- 8 elements in Comment = <headerFile><clusterName>:<clusterFuntionName>:<name_MasterCB_Type>:<name_MasterCB_Definition>:<AllocNameFunction>:<AllocSpecificParamClient>:<AllocSpecificParamServer> -->
        <Argument Name="ZCL_COMMISSIONING_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.commission.h:commissioning:commission:static struct ZbZclCommission$ROLECallbacksT:Commission$ROLECallbacks_$ENDPOINT:ZbZclCommission$ROLEAlloc:(zigbee_app_info.zb, COMMISSIONING_DEST_ENDPOINT_$ENDPOINT, $PROFILEID, APS_SECURED_$ENDPOINT):(zigbee_app_info.zb, COMMISSIONING_DEST_ENDPOINT_$ENDPOINT, $PROFILEID, APS_SECURED_$ENDPOINT, &amp;CommissionServerCallbacks_$ENDPOINT, NULL)"/>
        <!-- 3 elements in comment = <pointer name>:<structure type of the CB>:<parameters of the CB>  -->
        <Argument Name="CB_COMMISSIONING_SERVER_RESTART_ENDPOINT1"          GenericType="Simple" Comment="restart_device:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclCommissionClientRestartDev *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COMMISSIONING_SERVER_SAVESTARTUP_ENDPOINT1"      GenericType="Simple" Comment="save_startup:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclCommissionClientSaveStartup *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COMMISSIONING_SERVER_RESTORESTARTUP_ENDPOINT1"   GenericType="Simple" Comment="restore_startup:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclCommissionClientRestoreStartup *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COMMISSIONING_SERVER_STARTUP_ENDPOINT1"          GenericType="Simple" Comment="reset_startup:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclCommissionClientResetStartup *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="ZPARAM_COMMISSIONING_APS_SECURED_ENDPOINT1" GenericType="Simple" Comment="commissioning:APS_SECURED_"/>
        <Argument Name="ZPARAM_COMMISSIONING_DEST_ZBEP_ENDPOINT1" GenericType="Simple" Comment="commissioning:COMMISSIONING_DEST_ENDPOINT_"/>
        <Argument Name="ZCL_GROUPS_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.groups.h:groups:groups:::ZbZclGroups$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>

        <Argument Name="ZCL_SCENES_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.scenes.h:scenes:scenes:::ZbZclScenes$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, ZCL_SCENES_MAX_SCENES_$ENDPOINT)"/>
        <Argument Name="ZPARAM_SCENES_MAX_ENDPOINT1" GenericType="Simple" Comment="scenes:ZCL_SCENES_MAX_SCENES_"/>


        <Argument Name="ZCL_OCCUPANCY_SENSING_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.occupancy.h:occupancy:occupancy:::ZbZclOccupancy$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>

        <Argument Name="ZCL_DIAGNOSTICS_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.diagnostics.h:diagnostics:diagnostics:::ZbZclDiag$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, ZCL_PROFILE_HOME_AUTOMATION, MIN_SECURITY_$ENDPOINT)"/>
        <Argument Name="ZPARAM_DIAGNOSTIC_MIN_SECURITY_ENDPOINT1" GenericType="Simple" Comment="diagnostics:MIN_SECURITY_"/>
      
        <Argument Name="ZCL_POLL_CONTROL_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.poll.control.h:poll_control:pollControl:static struct ZbZclPollControl$ROLECallbackT:PollControl$ROLECallbacks_$ENDPOINT:zcl_poll_$LOWERROLE_alloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;PollControlClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;PollControlServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_POLL_CONTROL_CLIENT_CHECKINRSPCALLBACK_ENDPOINT1" GenericType="Simple" Comment="checkin_rsp_callback:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct zcl_poll_checkin_rsp_t *rsp_info, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POLL_CONTROL_SERVER_CHECKINRSP_ENDPOINT1" GenericType="Simple" Comment="checkin_rsp:static void:(struct ZbZclClusterT *cluster, struct zcl_poll_checkin_rsp_t *rsp_info, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>

        <Argument Name="ZCL_POWER_CONFIGURATION_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.power.config.h:power_config:powerConfig:::ZbZclPowerConfig$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>
       
        <Argument Name="ZCL_POWER_PROFILE_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.power.profile.h:power_profile:powerProf:static struct ZbZclPowerProf$ROLECallbacks:PowerProf$ROLECallbacks_$ENDPOINT:ZbZclPowerProf$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;PowerProfClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;PowerProfServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_POWER_PROFILE_SERVER_PROFILEREQ_ENDPOINT1" GenericType="Simple" Comment="profile_req:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfCliProfileReq *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_SERVER_STATEREQ_ENDPOINT1" GenericType="Simple" Comment="state_req:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_SERVER_PHASESNOTIFY_ENDPOINT1" GenericType="Simple" Comment="phases_notify:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfCliPhasesNotify *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_SERVER_SCHEDCONTRAINTSREQ_ENDPOINT1" GenericType="Simple" Comment="sched_contraints_req:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfCliProfileReq *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_SERVER_PHASESSCHEDSTATEREQ_ENDPOINT1" GenericType="Simple" Comment="phases_sched_state_req:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfCliProfileReq *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_CLIENT_PROFILENOTIFY_ENDPOINT1" GenericType="Simple" Comment="profile_notify:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfSvrProfileRsp *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_CLIENT_GETPRICE_ENDPOINT1" GenericType="Simple" Comment="get_price:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfCliProfileReq *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_CLIENT_STATENOTIFY_ENDPOINT1" GenericType="Simple" Comment="state_notify:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfSvrStateRsp *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_CLIENT_GETSCHEDPRICE_ENDPOINT1" GenericType="Simple" Comment="get_sched_price:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_CLIENT_PHASESREQ_ENDPOINT1" GenericType="Simple" Comment="phases_req:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfCliProfileReq *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_CLIENT_PHASESNOTIFY_ENDPOINT1" GenericType="Simple" Comment="phases_notify:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfSvrPhasesRsp *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_CLIENT_CONSTRAINTSNOTIFY_ENDPOINT1" GenericType="Simple" Comment="constraints_notify:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfSvrConstraintsNotify *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_POWER_PROFILE_CLIENT_GETPRICEEXT_ENDPOINT1" GenericType="Simple" Comment="get_price_ext:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclPowerProfSvrGetPriceExtReq *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        
          <!-- 7 elements in Comment = <clusterName>:<clusterFuntionName>:<name_MasterCB_Type>:<name_MasterCB_Definition>:<AllocNameFunction>:<AllocSpecificParamClient>:<AllocSpecificParamServer> -->
        <Argument Name="ZCL_RSSI_LOCATION_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.rssi.loc.h:rssi_location:rssiLoc:static struct zcl_rssi_loc_$LOWERROLE_callbacks_t:RssiLoc$ROLECallbacks_$ENDPOINT:ZbZclRssiLoc$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;RssiLocClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;RssiLocServerCallbacks_$ENDPOINT, NULL)"/>
        <!-- 3 elements in comment = <pointer name>:<structure type of the CB>:<parameters of the CB>  -->
        <Argument Name="CB_RSSI_LOCATION_SERVER_GETDEVCONFIG_ENDPOINT1" GenericType="Simple" Comment="get_dev_config:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_get_dev_config *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_SERVER_GETLOCDATA_ENDPOINT1" GenericType="Simple" Comment="get_loc_data:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_get_loc_data *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_SERVER_SENDPINGS_ENDPOINT1" GenericType="Simple" Comment="send_pings:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_send_pings *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_SERVER_ANCHORNODEANNC_ENDPOINT1" GenericType="Simple" Comment="anchor_node_annc:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_anchor_node_annc *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_CLIENT_LOCDATANOTIF_ENDPOINT1" GenericType="Simple" Comment="loc_data_notif:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_loc_data_notif *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_CLIENT_COMPDATANOTIF_ENDPOINT1" GenericType="Simple" Comment="comp_data_notif:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_comp_data_notif *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_CLIENT_RSSIPING_ENDPOINT1" GenericType="Simple" Comment="rssi_ping:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_rssi_ping *req,  struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_CLIENT_RSSIREQ_ENDPOINT1" GenericType="Simple" Comment="rssi_req:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_rssi_req *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_CLIENT_REPORTRSSI_ENDPOINT1" GenericType="Simple" Comment="report_rssi:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_report_rssi *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_RSSI_LOCATION_CLIENT_REQOWNLOC_ENDPOINT1" GenericType="Simple" Comment="req_own_loc:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct rssi_loc_req_own_loc *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>

        <Argument Name="ZCL_PRESSURE_MEASUREMENT_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.press.meas.h:pressure_meas:pressure_meas:::ZbZclPressMeas$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT,PRESS_MIN_$ENDPOINT,PRESS_MAX_$ENDPOINT)"/>
        <Argument Name="ZPARAM_PRESSURE_MEASUREMENT_MAX_ENDPOINT1" GenericType="Simple" Comment="pressure_meas:PRESS_MAX_"/>
        <Argument Name="ZPARAM_PRESSURE_MEASUREMENT_MIN_ENDPOINT1" GenericType="Simple" Comment="pressure_meas:PRESS_MIN_"/>
       
        <Argument Name="ZCL_DEVICE_TEMPERATURE_CONFIGURATION_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.device.temp.h:device_temperature:device_temperature:::ZbZclDevTemp$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>

        <Argument Name="ZCL_TEMPERATURE_MEASUREMENT_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.temp.meas.h:temperature_meas:temperature_meas:::ZbZclTempMeas$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, TEMP_MIN_$ENDPOINT, TEMP_MAX_$ENDPOINT, TEMP_TOLERANCE_$ENDPOINT)"/>
        <Argument Name="ZPARAM_TEMPERATURE_MEASUREMENT_MIN_ENDPOINT1" GenericType="Simple" Comment="temperature_meas:TEMP_MIN_"/>
        <Argument Name="ZPARAM_TEMPERATURE_MEASUREMENT_MAX_ENDPOINT1" GenericType="Simple" Comment="temperature_meas:TEMP_MAX_"/>
        <Argument Name="ZPARAM_TEMPERATURE_MEASUREMENT_TOLERANCE_ENDPOINT1" GenericType="Simple" Comment="temperature_meas:TEMP_TOLERANCE_"/>
       
        
        <Argument Name="ZCL_THERMOSTAT_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.therm.h:thermostat:therm:static struct ZbZclTherm$ROLECallbacksT:Therm$ROLECallbacks_$ENDPOINT:ZbZclTherm$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;ThermServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_THERMOSTAT_SERVER_SETPOINTRAISELOWER_ENDPOINT1" GenericType="Simple" Comment="setpoint_raise_lower:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclThermCliSetpointT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_THERMOSTAT_SERVER_SETWEEKLY_ENDPOINT1" GenericType="Simple" Comment="set_weekly:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclThermWeeklySchedT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_THERMOSTAT_SERVER_GETWEEKLY_ENDPOINT1" GenericType="Simple" Comment="get_weekly:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclThermCliGetWeeklyT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_THERMOSTAT_SERVER_CLEARWEEKLY_ENDPOINT1" GenericType="Simple" Comment="clear_weekly:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_THERMOSTAT_SERVER_GETRELAYSTATUSLOG_ENDPOINT1" GenericType="Simple" Comment="get_relay_status_log:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclAddrInfoT *srcInfo)"/>

        <Argument Name="ZCL_THERMOSTAT_UI_CONFIGURATION_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.therm.ui.h:thermostat_ui:thermostat_ui:::ZbZclThermUi$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>

        <Argument Name="ZCL_METER_IDENTIFICATION_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.meter.id.h:meter_id:meter_id:::ZbZclMeterId$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>

        <Argument Name="ZCL_ELECTRICALMEASUREMENT_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.elec.meas.h:electricalMeasurement:electricalMeasurement:static struct ZbZclElecMeasSvrCallbacksT:ElecMeasServerCallbacks_$ENDPOINT:ZbZclElecMeas$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;ElecMeasServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_ELECTRICALMEASUREMENT_SERVER_GETPROFILEINFO_ENDPOINT1" GenericType="Simple" Comment="get_profile_info:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *src_info, void *arg)"/>
        <Argument Name="CB_ELECTRICALMEASUREMENT_SERVER_GETMEASUREPROFILE_ENDPOINT1" GenericType="Simple" Comment="get_meas_profile:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclElecMeasClientGetMeasProfileReqT *cmd_req, struct ZbZclAddrInfoT *src_info, void *arg)"/>

        <Argument Name="ZCL_FAN_CONTROL_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.fan.h:fan:fan:::ZbZclFan$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>

        <Argument Name="ZCL_PUMP_CONFIGURATION_CONTROL_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.pump.h:pump:pump:::ZbZclPump$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>
        <Argument Name="ZCL_WATER_CONTENT_MEASUREMENT_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.wcm.h:water_content::::ZbZclWaterContentMeas$ROLEAlloc:(zigbee_app_info.zb, SW1_ENDPOINT, ZCL_CLUSTER_MEAS_HUMIDITY):(zigbee_app_info.zb, SW1_ENDPOINT, ZCL_CLUSTER_MEAS_HUMIDITY, HUMIDITY_MIN_$ENDPOINT, HUMIDITY_MAX_$ENDPOINT)"/>
         <Argument Name="ZPARAM_WATER_CONTENT_MEASUREMENT_MIN_ENDPOINT1" GenericType="Simple" Comment="water_content:HUMIDITY_MIN_"/>
         <Argument Name="ZPARAM_WATER_CONTENT_MEASUREMENT_MAX_ENDPOINT1" GenericType="Simple" Comment="water_content:HUMIDITY_MAX_"/>

        <Argument Name="ZCL_ONOFF_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.onoff.h:onOff:onOff:static struct ZbZclOnOff$ROLECallbacksT:OnOff$ROLECallbacks_$ENDPOINT:ZbZclOnOff$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;OnOffServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_ONOFF_SERVER_OFF_ENDPOINT1"      GenericType="Simple" Comment="off:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_ONOFF_SERVER_ON_ENDPOINT1"       GenericType="Simple" Comment="on:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_ONOFF_SERVER_TOGGLE_ENDPOINT1"   GenericType="Simple" Comment="toggle:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
    
        <Argument Name="ZCL_COLORCONTROL_ENDPOINT1"        GenericType="Simple" 
                  Comment="zcl/general/zcl.color.h:colorControl:colorControl:static struct ZbZclColor$ROLECallbacksT:Color$ROLECallbacks_$ENDPOINT:ZbZclColor$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, zigbee_app_info.onOff_server_$ENDPOINT, NULL, 0, &amp;colorServerConfig_$ENDPOINT, NULL):struct ZbColorClusterConfig colorServerConfig_$ENDPOINT"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVETOHUE_ENDPOINT1" GenericType="Simple" Comment="move_to_hue:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveToHueReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVEHUE_ENDPOINT1" GenericType="Simple" Comment="move_hue:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveHueReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_STEPHUE_ENDPOINT1" GenericType="Simple" Comment="step_hue:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientStepHueReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVETOSAT_ENDPOINT1" GenericType="Simple" Comment="move_to_sat:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveToSatReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVESAT_ENDPOINT1" GenericType="Simple" Comment="move_sat:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveSatReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_STEPSAT_ENDPOINT1" GenericType="Simple" Comment="step_sat:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientStepSatReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVETOHUESAT_ENDPOINT1" GenericType="Simple" Comment="move_to_hue_sat:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveToHueSatReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVETOCOLORXY_ENDPOINT1" GenericType="Simple" Comment="move_to_color_xy:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveToColorXYReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVECOLORXY_ENDPOINT1" GenericType="Simple" Comment="move_color_xy:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveColorXYReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_STEPCOLORXY_ENDPOINT1" GenericType="Simple" Comment="step_color_xy:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientStepColorXYReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVETOCOLORTEMP_ENDPOINT1" GenericType="Simple" Comment="move_to_color_temp:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveToColorTempReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVETOHUEENH_ENDPOINT1" GenericType="Simple" Comment="move_to_hue_enh:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveToHueEnhReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVEHUEENH_ENDPOINT1" GenericType="Simple" Comment="move_hue_enh:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveHueEnhReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_STEPHUEENH_ENDPOINT1" GenericType="Simple" Comment="step_hue_enh:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientStepHueEnhReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVETOHUESATENH_ENDPOINT1" GenericType="Simple" Comment="move_to_hue_sat_enh:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveToHueSatEnhReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_COLORLOOPSET_ENDPOINT1" GenericType="Simple" Comment="color_loop_set:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientColorLoopSetReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_STOPMOVESTEP_ENDPOINT1" GenericType="Simple" Comment="stop_move_step:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientStopMoveStepReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_MOVECOLORTEMP_ENDPOINT1" GenericType="Simple" Comment="move_color_temp:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientMoveColorTempReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_COLORCONTROL_SERVER_STEPCOLORTEMP_ENDPOINT1" GenericType="Simple" Comment="step_color_temp:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclColorClientStepColorTempReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>

        <Argument Name="ZCL_ILLUMINANCE_LEVEL_SENSING_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.illum.level.h:illuminance_level:illuminance_level:::ZbZclIllumLevel$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>
        <Argument Name="ZCL_ILLUMINANCE_MEASUREMENT_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.illum.meas.h:illuminance_meas:illuminance_meas:::ZbZclIllumMeas$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, ILLUM_MIN_$ENDPOINT, ILLUM_MAX_$ENDPOINT)"/>
        <Argument Name="ZPARAM_ILLUMINANCE_MEASUREMENT_MIN_ENDPOINT1" GenericType="Simple" Comment="illuminance_meas:ILLUM_MIN_"/>
        <Argument Name="ZPARAM_ILLUMINANCE_MEASUREMENT_MAX_ENDPOINT1" GenericType="Simple" Comment="illuminance_meas:ILLUM_MAX_"/>
 
        
        <Argument Name="ZCL_LEVELCONTROL_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.level.h:levelControl:levelControl:static struct ZbZclLevel$ROLECallbacksT:Level$ROLECallbacks_$ENDPOINT:ZbZclLevel$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, zigbee_app_info.onOff_server_$ENDPOINT, &amp;LevelServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_LEVELCONTROL_SERVER_MOVETOLEVEL_ENDPOINT1" GenericType="Simple" Comment="move_to_level:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclLevelClientMoveToLevelReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_LEVELCONTROL_SERVER_MOVE_ENDPOINT1" GenericType="Simple" Comment="move:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclLevelClientMoveReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_LEVELCONTROL_SERVER_STEP_ENDPOINT1" GenericType="Simple" Comment="step:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclLevelClientStepReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_LEVELCONTROL_SERVER_STOP_ENDPOINT1" GenericType="Simple" Comment="stop:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclLevelClientStopReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>

        <Argument Name="ZCL_ON_OFF_SWITCH_CONFIGURATION_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.onoff.swconfig.h:onoff_swconfig:onoff_swconfig:::ZbZclOnOffSwConfig$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, SWITCH_TYPE_$ENDPOINT)"/>
        <Argument Name="ZPARAM_ON_OFF_SWITCH_CONFIGURATION_TYPE_ENDPOINT1" GenericType="Simple" Comment="onoff_swconfig:SWITCH_TYPE_"/>

        <Argument Name="ZCL_DOOR_LOCK_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.doorlock.h:doorLock:doorLock:static struct ZbZclDoorLock$ROLECallbacksT:DoorLockServerCallbacks_$ENDPOINT:ZbZclDoorLock$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;DoorLockServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_DOORLOCK_SERVER_LOCK_ENDPOINT1" GenericType="Simple" Comment="lock:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockLockDoorReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_UNLOCK_ENDPOINT1" GenericType="Simple" Comment="unlock:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockUnlockDoorReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_TOGGLE_ENDPOINT1" GenericType="Simple" Comment="toggle:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockToggleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_UNLOCKTIMEOUT_ENDPOINT1" GenericType="Simple" Comment="unlock_timeout:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockUnlockTimeoutReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_GETLOG_ENDPOINT1" GenericType="Simple" Comment="get_log:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockGetLogReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_SETPIN_ENDPOINT1" GenericType="Simple" Comment="set_pin:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockSetPinReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_GETPIN_ENDPOINT1" GenericType="Simple" Comment="get_pin:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockGetPinReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_CLRPIN_ENDPOINT1" GenericType="Simple" Comment="clr_pin:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockClrPinReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_CLRALLPINS_ENDPOINT1" GenericType="Simple" Comment="clr_all_pins:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_SETUSERSTATUS_ENDPOINT1" GenericType="Simple" Comment="set_user_status:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockSetUserStatusReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_GETUSERSTATUS_ENDPOINT1" GenericType="Simple" Comment="get_user_status:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockGetUserStatusReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_SETWDSCHED_ENDPOINT1" GenericType="Simple" Comment="set_wd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockSetWDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_GETWDSCHED_ENDPOINT1" GenericType="Simple" Comment="get_wd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockGetWDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_CLRWDSCHED_ENDPOINT1" GenericType="Simple" Comment="clr_wd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockClrWDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_SETYDSCHED_ENDPOINT1" GenericType="Simple" Comment="set_yd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockSetYDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_GETYDSCHED_ENDPOINT1" GenericType="Simple" Comment="get_yd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockGetYDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_CLRYDSCHED_ENDPOINT1" GenericType="Simple" Comment="clr_yd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockClrYDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_SETHDSCHED_ENDPOINT1" GenericType="Simple" Comment="set_hd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockSetHDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_GETHDSCHED_ENDPOINT1" GenericType="Simple" Comment="get_hd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockGetHDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_CLRHDSCHED_ENDPOINT1" GenericType="Simple" Comment="clr_hd_sched:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockClrHDScheduleReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_SETUSERTYPE_ENDPOINT1" GenericType="Simple" Comment="set_user_type:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockSetUserTypeReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_GETUSERTYPE_ENDPOINT1" GenericType="Simple" Comment="get_user_type:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockGetUserTypeReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_SETRFID_ENDPOINT1" GenericType="Simple" Comment="set_rfid:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockSetRfidReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_GETRFID_ENDPOINT1" GenericType="Simple" Comment="get_rfid:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockGetRfidReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_CLRRFID_ENDPOINT1" GenericType="Simple" Comment="clr_rfid:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclDoorLockClrRfidReqT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_DOORLOCK_SERVER_CLRALLRFIDS_ENDPOINT1" GenericType="Simple" Comment="clr_all_rfids:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>

        <Argument Name="ZCL_WINDOW_COVERING_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.window.h:window:window:static struct ZbZclWindow$ROLECallbacksT:Window$ROLECallbacks_$ENDPOINT:ZbZclWindow$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;WindowServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_WINDOW_SERVER_UPCOMMAND_ENDPOINT1" GenericType="Simple" Comment="up_command:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclHeaderT *zclHdrPtr, struct ZbApsdeDataIndT *dataIndPtr, void *arg)"/>
        <Argument Name="CB_WINDOW_SERVER_DOWNCOMMAND_ENDPOINT1" GenericType="Simple" Comment="down_command:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclHeaderT *zclHdrPtr, struct ZbApsdeDataIndT *dataIndPtr, void *arg)"/>
        <Argument Name="CB_WINDOW_SERVER_SETLIFTANDTILTCOMMAND_ENDPOINT1" GenericType="Simple" Comment="set_lift_and_tilt_command:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, uint8_t liftPercentage, uint8_t tiltPercentage)"/>
        <Argument Name="CB_WINDOW_SERVER_STOPCOMMAND_ENDPOINT1" GenericType="Simple" Comment="stop_command:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclHeaderT *zclHdrPtr, struct ZbApsdeDataIndT *dataIndPtr, void *arg)"/>

        <Argument Name="ZCL_IAS_ACE_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/security/zcl.ias_ace.h:ias_ace:iasAce:static struct ZbZclIasAce$ROLECallbacksT:IasAce$ROLECallbacks_$ENDPOINT:ZbZclIasAce$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;IasAceServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_IAS_ACE_SERVER_ARMREQ_ENDPOINT1" GenericType="Simple" Comment="arm_req:static bool:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclIasAceClientCommandArmT *arm_req, struct ZbZclIasAceServerCommandArmRspT *arm_rsp)"/>
        <Argument Name="CB_IAS_ACE_SERVER_BYPASSREQ_ENDPOINT1" GenericType="Simple" Comment="bypass_req:static void:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclIasAceClientCommandBypassT *bypass_req, struct ZbZclIasAceServerCommandBypassRspT *bypass_rsp)"/>
        <Argument Name="CB_IAS_ACE_SERVER_EMERGREQ_ENDPOINT1" GenericType="Simple" Comment="emerg_req:static uint8_t:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_IAS_ACE_SERVER_FIREREQ_ENDPOINT1" GenericType="Simple" Comment="fire_req:static uint8_t:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_IAS_ACE_SERVER_PANICREQ_ENDPOINT1" GenericType="Simple" Comment="panic_req:static uint8_t:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclAddrInfoT *srcInfo)"/>

        <Argument Name="ZCL_IAS_WD_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/security/zcl.ias_wd.h:ias_wd:iasWd:static struct ZbZclIasWd$ROLECallbacksT:IasWd$ROLECallbacks_$ENDPOINT:ZbZclIasWd$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;IasWdServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_IAS_WD_SERVER_STARTWARNING_ENDPOINT1" GenericType="Simple" Comment="start_warning:static uint8_t:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclIasWdClientStartWarningReqT *req)"/>
        <Argument Name="CB_IAS_WD_SERVER_SQUAWK_ENDPOINT1" GenericType="Simple" Comment="squawk:static uint8_t:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclIasWdClientSquawkReqT *req)"/>

        <Argument Name="ZCL_IAS_ZONE_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/security/zcl.ias_zone.h:ias_zone:iasZone:static struct ZbZclIasZone$ROLECallbacksT:IasZone$ROLECallbacks_$ENDPOINT:ZbZclIasZone$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;IasZoneClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, ZCL_IAS_ZONE_SVR_ATTR_ZONE_TYPE, 0x00, false, &amp;IasZoneServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_IAS_ZONE_SERVER_MODECHANGE_ENDPOINT1" GenericType="Simple" Comment="mode_change:static uint8_t:(struct ZbZclClusterT *cluster, void *arg, enum ZbZclIasZoneServerModeT mode, struct ZbZclIasZoneClientTestModeReqT *req)"/>
        <Argument Name="CB_IAS_ZONE_CLIENT_ZONESTATUSCHANGE_ENDPOINT1" GenericType="Simple" Comment="zone_status_change:static void:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclIasZoneServerStatusChangeNotifyT *notify, const struct ZbApsAddrT *src)"/>
        <Argument Name="CB_IAS_ZONE_CLIENT_ZONEENROLLREQ_ENDPOINT1" GenericType="Simple" Comment="zone_enroll_req:static uint8_t:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclIasZoneServerEnrollRequestT *req, uint64_t ext_src_addr, enum ZbZclIasZoneClientResponseCodeT *rsp_code, uint8_t *zone_id)"/>

        <Argument Name="ZCL_MESSAGING_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/se/zcl.message.h:messaging:messaging:static struct ZbZclMsg$ROLECallbacksT:Msg$ROLECallbacks_$ENDPOINT:ZbZclMsg$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;MsgClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;MsgServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_MESSAGING_SERVER_GETLASTMESSAGE_ENDPOINT1"          GenericType="Simple" Comment="get_last_message:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_MESSAGING_SERVER_MESSAGECONFIRMATION_ENDPOINT1"     GenericType="Simple" Comment="message_confirmation:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMsgMessageConfT *conf, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_MESSAGING_SERVER_GETMESSAGECANCELLATION_ENDPOINT1"  GenericType="Simple" Comment="get_message_cancellation:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMsgGetMsgCancellationT *req, struct ZbZclAddrInfoT *source)"/>
        <Argument Name="CB_MESSAGING_CLIENT_DISPLAYMESSAGE_ENDPOINT1"          GenericType="Simple" Comment="display_message:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMsgMessageT *msg, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_MESSAGING_CLIENT_CANCELMESSAGE_ENDPOINT1"           GenericType="Simple" Comment="cancel_message:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMsgMessageCancelT *cancel, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_MESSAGING_CLIENT_CANCELALLMESSAGE_ENDPOINT1"        GenericType="Simple" Comment="cancel_all_messages:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMsgMessageCancelAllT *cancel_all, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_MESSAGING_CLIENT_DISPLAYPROTECTEDMESSAGE_ENDPOINT1" GenericType="Simple" Comment="display_protected_message:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMsgMessageT *msg, struct ZbZclAddrInfoT *srcInfo)"/>
        
        <Argument Name="ZCL_DRLC_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/se/zcl.drlc.h:drlc:drlc:static struct ZbZclDrlc$ROLECallbacksT:Drlc$ROLECallbacks_$ENDPOINT:ZbZclDrlc$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, zigbee_app_info.time_server_$ENDPOINT, &amp;DrlcClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;DrlcServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_DRLC_SERVER_REPORTSTATUS_ENDPOINT1" GenericType="Simple" Comment="report_status:static void:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, struct ZbZclDrlcStatusT *status, void *arg)"/>
        <Argument Name="CB_DRLC_SERVER_GETEVENTS_ENDPOINT1" GenericType="Simple" Comment="get_events:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, struct ZbZclDrlcGetEventsReqT *req, void *arg)"/>
        <Argument Name="CB_DRLC_CLIENT_START_ENDPOINT1" GenericType="Simple" Comment="start:static bool:(void *arg, struct ZbZclDrlcEventT *event)"/>
        <Argument Name="CB_DRLC_CLIENT_STOP_ENDPOINT1" GenericType="Simple" Comment="stop:static void:(void *arg, struct ZbZclDrlcEventT *event)"/>
  
        <Argument Name="ZCL_METERING_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/se/zcl.meter.h:meter:metering:static struct ZbZclMeter$ROLECallbacksT:Meter$ROLECallbacks_$ENDPOINT:ZbZclMeter$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;MeterClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;MeterServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_METER_SERVER_GETPROFILE_ENDPOINT1" GenericType="Simple" Comment="get_profile:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMeterClientGetProfileReqT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_METER_SERVER_GETSAMPLEDDATA_ENDPOINT1" GenericType="Simple" Comment="get_sampled_data:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMeterClientGetSampledDataReqT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_METER_SERVER_LOCALCHANGESUPPLY_ENDPOINT1" GenericType="Simple" Comment="local_change_supply:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMeterClientLocalChangeSupplyReqT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_METER_SERVER_MIRRORREPORTATTR_ENDPOINT1" GenericType="Simple" Comment="mirror_report_attr_rsp:enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclMeterClientMirrorReportAttrRspT *notify, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_METER_SERVER_OPTIONAL_ENDPOINT1" GenericType="Simple" Comment="optional:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclHeaderT *zclHdrPtr, struct ZbApsdeDataIndT *dataIndPtr)"/>
        <Argument Name="CB_METER_CLIENT_REQUESTMIRROR_ENDPOINT1" GenericType="Simple" Comment="request_mirror:static uint16_t:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_METER_CLIENT_REMOVEMIRROR_ENDPOINT1" GenericType="Simple" Comment="remove_mirror:static uint16_t:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_METER_CLIENT_CONFIGMIRROR_ENDPOINT1" GenericType="Simple" Comment="config_mirror:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclMeterServerConfigMirrorT *req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_METER_CLIENT_OPTIONAL_ENDPOINT1" GenericType="Simple" Comment="optional:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclHeaderT *zclHdrPtr, struct ZbApsdeDataIndT *dataIndPtr)"/>

        <Argument Name="ZCL_PRICE_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/se/zcl.price.h:price:price:static struct ZbZclPrice$ROLECallbacksT:Price$ROLECallbacks_$ENDPOINT:ZbZclPrice$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;PriceClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;PriceServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_PRICE_SERVER_GETCURRENTPRICE_ENDPOINT1" GenericType="Simple" Comment="get_current_price:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclPriceClientGetCurrentPriceT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_PRICE_SERVER_PRICEACK_ENDPOINT1" GenericType="Simple" Comment="price_ack:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclPriceClientPriceAckT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_PRICE_SERVER_GETTARIFFINFO_ENDPOINT1" GenericType="Simple" Comment="get_tariff_info:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclPriceClientGetTariffInfoT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_PRICE_SERVER_GETPRICEMATRIX_ENDPOINT1" GenericType="Simple" Comment="get_price_matrix:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclPriceClientGetPriceMatrixT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_PRICE_SERVER_GETBLOCKTHRESHOLDS_ENDPOINT1" GenericType="Simple" Comment="get_block_thresholds:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclPriceClientGetBlockThresholdsT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_PRICE_SERVER_OPTIONAL_ENDPOINT1" GenericType="Simple" Comment="optional:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclHeaderT *zclHdrPtr, struct ZbApsdeDataIndT *dataIndPtr)"/>
        <Argument Name="CB_PRICE_CLIENT_PUBLISHPRICE_ENDPOINT1" GenericType="Simple" Comment="publish_price:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, void *arg, struct ZbZclPriceServerPublishPriceT *req, struct ZbZclAddrInfoT *srcInfo)"/>
        <Argument Name="CB_PRICE_CLIENT_OPTIONAL_ENDPOINT1" GenericType="Simple" Comment="optional:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclHeaderT *zclHdrPtr, struct ZbApsdeDataIndT *dataIndPtr)"/>

        <Argument Name="ZCL_TUNNELING_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/se/zcl.tunnel.h:tunneling:tunnel:static struct ZbZclTunnelProtoCbT:Tunnel$ROLECallbacks_$ENDPOINT:ZbZclTunnel$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>

        <Argument Name="ZCL_NEAREST_GATEWAY_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.nearest.gw.h:nearest_gateway:nearest_gateway:::ZbZclNearestGw$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>

        <Argument Name="ZCL_OTA_UPGRADE_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.ota.h:otaUpgrade:otaUpgrade:static struct ZbZclOta$ROLECallbacksT:Ota$ROLECallbacks_$ENDPOINT:ZbZclOta$ROLEAlloc:(zigbee_app_info.zb, &amp;otaClientConfig_$ENDPOINT, NULL):(zigbee_app_info.zb, &amp;otaServerConfig_$ENDPOINT, NULL):struct ZbZclOta$ROLEConfig ota$ROLEConfig_$ENDPOINT "/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_DISCOVERCOMPLETE_ENDPOINT1" GenericType="Simple" Comment="discover_complete:static enum ZclStatusCodeT :(struct ZbZclClusterT *cluster, void *arg)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_IMAGENOTIFY_ENDPOINT1" GenericType="Simple" Comment="image_notify:static enum ZclStatusCodeT :(struct ZbZclClusterT *cluster, uint8_t payload_type, uint8_t jitter, struct ZbZclOtaImageDefinition *image_definition, struct ZbApsdeDataIndT *data_ind, struct ZbZclHeaderT *zcl_header)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_QUERYNEXT_ENDPOINT1" GenericType="Simple" Comment="query_next:static void :(struct ZbZclClusterT *cluster, enum ZclStatusCodeT status, struct ZbZclOtaImageDefinition *image_definition, uint32_t image_size, void *arg)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_UPDATERAW_ENDPOINT1" GenericType="Simple" Comment="update_raw:static enum ZclStatusCodeT :(struct ZbZclClusterT *cluster, uint8_t length, uint8_t *data, void *arg)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_WRITETAG_ENDPOINT1" GenericType="Simple" Comment="write_tag:static enum ZclStatusCodeT :(struct ZbZclClusterT *cluster, struct ZbZclOtaHeader *header, uint16_t tag_id, uint32_t tag_length, uint8_t data_length, uint8_t *data, void *arg)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_WRITEIMAGE_ENDPOINT1" GenericType="Simple" Comment="write_image:static enum ZclStatusCodeT :(struct ZbZclClusterT *cluster, struct ZbZclOtaHeader *header, uint8_t length, uint8_t *data, void *arg)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_IMAGEVALIDATE_ENDPOINT1" GenericType="Simple" Comment="image_validate:static enum ZclStatusCodeT :(struct ZbZclClusterT *cluster, struct ZbZclOtaHeader *header, void *arg)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_UPGRADEEND_ENDPOINT1" GenericType="Simple" Comment="upgrade_end:static enum ZclStatusCodeT :(struct ZbZclClusterT *cluster, struct ZbZclOtaHeader *header, uint32_t current_time, uint32_t upgrade_time, void *arg)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_REBOOT_ENDPOINT1" GenericType="Simple" Comment="reboot:static void :(struct ZbZclClusterT *cluster, void *arg)"/>
        <Argument Name="CB_OTAUPGRADE_CLIENT_ABORTDOWNLOAD_ENDPOINT1" GenericType="Simple" Comment="abort_download:static enum ZclStatusCodeT :(struct ZbZclClusterT *cluster, enum ZbZclOtaCommandId commandId, void *arg)"/>

        <Argument Name="ZCL_DEHUMIDIFICATION_CONTROL_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.dehum.ctrl.h:dehumidification_ctrl:dehumidification_ctrl:::ZbZclDehumCtrl$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT)"/>
        <Argument Name="ZCL_BALLAST_CONFIGURATION_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.ballast.config.h:ballast_config:ballast_config:::ZbZclBallastConfig$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, BALLAST_PHY_MIN_$ENDPOINT, BALLAST_PHY_MAX_$ENDPOINT)"/>
        <Argument Name="ZPARAM_BALLAST_CONFIGURATION_PHY_MIN_ENDPOINT1" GenericType="Simple" Comment="ballast_config:BALLAST_PHY_MIN_"/>
        <Argument Name="ZPARAM_BALLAST_CONFIGURATION_PHY_MAX_ENDPOINT1" GenericType="Simple" Comment="ballast_config:BALLAST_PHY_MAX_"/>

        <Argument Name="ZCL_VOICE_OVER_ZGB_ENDPOINT1" GenericType="Simple" 
                  Comment="zcl/general/zcl.voice.h:voice:voice:static struct zcl_voice_$LOWERROLE_callbacks_t:Voice$ROLECallbacks_$ENDPOINT:ZbZclVoice$ROLEAlloc:(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;VoiceClientCallbacks_$ENDPOINT, NULL):(zigbee_app_info.zb, SW$ENDPOINT_ENDPOINT, &amp;VoiceServerCallbacks_$ENDPOINT, NULL)"/>
        <Argument Name="CB_VOICE_SERVER_GETCURRENTPRICE_ENDPOINT1" GenericType="Simple" Comment="estab_req:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct voice_estab_req_t *cmd_req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_VOICE_SERVER_PRICEACK_ENDPOINT1" GenericType="Simple" Comment="voice_tx:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct voice_voice_tx_t *cmd_req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_VOICE_SERVER_GETTARIFFINFO_ENDPOINT1" GenericType="Simple" Comment="tx_complete:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>
        <Argument Name="CB_VOICE_CLIENT_GETPRICEMATRIX_ENDPOINT1" GenericType="Simple" Comment="control:static enum ZclStatusCodeT:(struct ZbZclClusterT *cluster, struct voice_control_t *cmd_req, struct ZbZclAddrInfoT *srcInfo, void *arg)"/>

    </RefConfigFile>

    <RefConfigFile Description="" Name="ZIGBEE_APP_ZIGBEE_H" Template="stm32wba/stm32_wpan_zigbee_app_zigbee_h.ftl">
        <File Category="header" Condition="Semaphore_ZIGBEE" Name="App/app_zigbee.h" Version="1.0"/>
    </RefConfigFile>

    <!-- STM32_WPAN/app end -->

    <!-- STM32_WPAN RefConfig end -->



</IP>
