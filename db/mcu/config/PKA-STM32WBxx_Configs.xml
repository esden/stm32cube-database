<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu"
    xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance"
    CodeTemplate=""
    DBVersion="V4.0"
    Name="PKA" 
    Version=""
    ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">


    <RefConfig Name="PKA_Init">
        <CallLibMethod Name="HAL_PKA_Init"/>
        <ImplementCallBack Name="HAL_PKA_MspInit"/>
        <ImplementCallBack Name="HAL_PKA_MspDeInit"/>
    </RefConfig>

    <RefConfig Name="PKA_DeInit">
        <CallLibMethod Name="HAL_PKA_DeInit"/>
    </RefConfig>

    <!-- PKA_Exported_Functions_Group1 -->

    <LibMethod Comment="" Name="HAL_PKA_Init">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_DeInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_MspInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_MspDeInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    
    <!-- #if (USE_HAL_PKA_REGISTER_CALLBACKS == 1) -->

<!--    <LibMethod Comment="" Name="HAL_PKA_RegisterCallback">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="CallbackID" OptimizationCondition="equal" TypeName="HAL_PKA_CallbackIDTypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="pCallback" OptimizationCondition="equal" TypeName="pPKA_CallbackTypeDef"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_RegisterCallback">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
        </Argument>
        <Argument AddressOf="false" GenericType="simple" Name="CallbackID" OptimizationCondition="equal" TypeName="HAL_PKA_CallbackIDTypeDef"/>
    </LibMethod> -->
    
    <!-- PKA_Exported_Functions_Group2 -->

    <LibMethod Comment="" Name="HAL_PKA_ModExp">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModExpInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModExp_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModExpInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModExpFastMode">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModExpFastModeInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModExpFastMode_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModExpFastModeInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModExp_GetResult">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="pRes" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECDSASign">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ECDSASignInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECDSASign_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ECDSASignInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECDSASign_GetResult">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="outExt" TypeName="PKA_ECDSASignOutTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECDSAVerif">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ECDSAVerifInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECDSAVerif_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ECDSAVerifInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECDSAVerif_IsValidSignature">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_RSACRTExp">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_RSACRTExpInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_RSACRTExp_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_RSACRTExpInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_RSACRTExp_GetResult">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="pRes" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_PointCheck">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_PointCheckInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_PointCheck_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_PointCheckInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_PointCheck_IsOnCurve">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECCMul">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ECCMulInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECCMul_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ECCMulInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECCMulFastMode">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ECCMulFastModeInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECCMulFastMode_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ECCMulFastModeInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ECCMul_GetResult">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="out" TypeName="PKA_ECCMulOutTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Add">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_AddInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Add_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_AddInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Sub">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_SubInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Sub_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_SubInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Cmp">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_CmpInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Cmp_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_CmpInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Mul">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_MulInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Mul_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_MulInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModAdd">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModAddInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModAdd_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModAddInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModSub">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModSubInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModSub_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModSubInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModInv">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModInvInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModInv_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModInvInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModRed">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModRedInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ModRed_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_ModRedInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_MontgomeryMul">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_MontgomeryMulInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_MontgomeryMul_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_MontgomeryMulInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Arithmetic_GetResult">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="pRes" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_MontgomeryParam">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_MontgomeryParamInTypeDef" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="Timeout" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_MontgomeryParam_IT">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" TypeName="PKA_MontgomeryParamInTypeDef" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_MontgomeryParam_GetResult">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="pRes" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_MontgomeryParam_Set">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
        <Argument AddressOf="true" GenericType="simple" Name="in" OptimizationCondition="equal"/>
        <Argument AddressOf="false" GenericType="simple" Name="size" OptimizationCondition="equal"/>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_Abort">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_RAMReset">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_OperationCpltCallback">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_ErrorCallback">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_IRQHandler">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

        <!-- PKA_Exported_Functions_Group3 -->

    <LibMethod Comment="" Name="HAL_PKA_GetState">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <LibMethod Comment="" Name="HAL_PKA_GetError">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hpka" TypeName="PKA_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="PKA_TypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"  TypeName="HAL_PKA_StateTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
<!--            <Argument AddressOf="true" GenericType="simple" Name=" (* OperationCpltCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* ErrorCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/>
            <Argument AddressOf="true" GenericType="simple" Name=" (* MspDeInitCallback)(struct __PKA_HandleTypeDef *hpka) " TypeName="void " Context="global"/> -->
        </Argument>
    </LibMethod>

    <RefComponent Cclass="HAL" Cgroup="PKA" Cversion="">
        <File Category="header" Name="Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_pka.h"/>
        <File Category="source" Name="Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_pka.c"/>
    </RefComponent>
</IP>