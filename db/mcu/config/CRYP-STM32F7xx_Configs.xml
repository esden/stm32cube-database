<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu"
    xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance"
    CodeTemplate=""
    DBVersion="V4.0"
    Name="CRYP" 
    Version="STM32Cube_F7_FW_1.15.0RC2"
    ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">
   
    <RefConfig Name="CRYP_Init">
        <CallLibMethod Name="HAL_CRYP_Init"/>
        <ImplementCallBack Name="HAL_CRYP_MspInit"/>
        <ImplementCallBack Name="HAL_CRYP_MspDeInit"/>
    </RefConfig>
    <RefConfig Name="CRYP_DeInit">
        <CallLibMethod Name="HAL_CRYP_DeInit"/>
    </RefConfig>
    

    <LibMethod Comment="" Name="HAL_CRYP_Init">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcryp" TypeName="CRYP_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CRYP_TypeDef"/>
            <Argument AddressOf="false" GenericType="struct" Name="Init" TypeName="CRYP_InitTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="DataType" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="KeySize" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="pKey" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="pInitVect" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Algorithm" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="Header" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="HeaderSize" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="B0" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="DataWidthUnit" OptimizationCondition="equal"/>
            </Argument>
            <Argument AddressOf="false" GenericType="simple" Name="AutoKeyDerivation" OptimizationCondition="equal" TypeName="FunctionalState"/>
            <Argument AddressOf="true" GenericType="simple" Name="pCrypInBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pCrypOutBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypHeaderCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypInCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypOutCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Size" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Phase" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="struct" Name="hdmain" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hdmaout" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hmdmain" OptimizationCondition="equal" TypeName="MDMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hmdmaout" OptimizationCondition="equal" TypeName="MDMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal" TypeName="HAL_LockTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal" TypeName="HAL_CRYP_STATETypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CRYP_DeInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcryp" TypeName="CRYP_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CRYP_TypeDef"/>
            <Argument AddressOf="false" GenericType="struct" Name="Init" TypeName="CRYP_InitTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="DataType" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="KeySize" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="pKey" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="pInitVect" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Algorithm" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="Header" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="HeaderSize" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="B0" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="DataWidthUnit" OptimizationCondition="equal"/>
            </Argument>
            <Argument AddressOf="false" GenericType="simple" Name="AutoKeyDerivation" OptimizationCondition="equal" TypeName="FunctionalState"/>
            <Argument AddressOf="true" GenericType="simple" Name="pCrypInBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pCrypOutBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypHeaderCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypInCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypOutCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Size" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Phase" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="struct" Name="hdmain" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hdmaout" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hmdmain" OptimizationCondition="equal" TypeName="MDMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hmdmaout" OptimizationCondition="equal" TypeName="MDMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal" TypeName="HAL_LockTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal" TypeName="HAL_CRYP_STATETypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CRYP_MspInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcryp" TypeName="CRYP_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CRYP_TypeDef"/>
            <Argument AddressOf="false" GenericType="struct" Name="Init" TypeName="CRYP_InitTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="DataType" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="KeySize" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="pKey" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="pInitVect" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Algorithm" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="Header" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="HeaderSize" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="B0" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="DataWidthUnit" OptimizationCondition="equal"/>
            </Argument>
            <Argument AddressOf="false" GenericType="simple" Name="AutoKeyDerivation" OptimizationCondition="equal" TypeName="FunctionalState"/>
            <Argument AddressOf="true" GenericType="simple" Name="pCrypInBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pCrypOutBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypHeaderCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypInCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypOutCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Size" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Phase" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="struct" Name="hdmain" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hdmaout" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hmdmain" OptimizationCondition="equal" TypeName="MDMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hmdmaout" OptimizationCondition="equal" TypeName="MDMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal" TypeName="HAL_LockTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal" TypeName="HAL_CRYP_STATETypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CRYP_MspDeInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcryp" TypeName="CRYP_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CRYP_TypeDef"/>
            <Argument AddressOf="false" GenericType="struct" Name="Init" TypeName="CRYP_InitTypeDef">
                <Argument AddressOf="false" GenericType="simple" Name="DataType" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="KeySize" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="pKey" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="pInitVect" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="Algorithm" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="Header" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="HeaderSize" OptimizationCondition="equal"/>
                <Argument AddressOf="true" Context="globalConst" GenericType="Array" Name="B0" OptimizationCondition="equal"/>
                <Argument AddressOf="false" GenericType="simple" Name="DataWidthUnit" OptimizationCondition="equal"/>
            </Argument>
            <Argument AddressOf="false" GenericType="simple" Name="AutoKeyDerivation" OptimizationCondition="equal" TypeName="FunctionalState"/>
            <Argument AddressOf="true" GenericType="simple" Name="pCrypInBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pCrypOutBuffPtr" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypHeaderCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypInCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="CrypOutCount" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Size" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="Phase" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="struct" Name="hdmain" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hdmaout" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hmdmain" OptimizationCondition="equal" TypeName="MDMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="struct" Name="hmdmaout" OptimizationCondition="equal" TypeName="MDMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal" TypeName="HAL_LockTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal" TypeName="HAL_CRYP_STATETypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <RefComponent Cclass="HAL" Cgroup="CRYP" Cversion="1.15.0">
        <File Category="header" Name="Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cryp.h"/>
        <File Category="header" Name="Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cryp_ex.h"/>
        <File Category="source" Name="Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cryp.c"/>
        <File Category="source" Name="Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cryp_ex.c"/>
    </RefComponent>
</IP>