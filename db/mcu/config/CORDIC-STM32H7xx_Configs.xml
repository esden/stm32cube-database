<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="CORDIC" Version="STM32Cube_FW_H7_V1.8.0RC1" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">
    <RefConfig Name="Cordic_Init">
        <CallLibMethod Name="HAL_CORDIC_Init"/>
        <ImplementCallBack Name="HAL_CORDIC_MspInit"/>
        <ImplementCallBack Name="HAL_CORDIC_MspDeInit"/>
    </RefConfig>
    <RefConfig Name="Cordic_DeInit">
        <CallLibMethod Name="HAL_CORDIC_DeInit"/>
    </RefConfig>
    <LibMethod Comment="" Name="HAL_CORDIC_Init">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CORDIC_DeInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CORDIC_MspInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CORDIC_MspDeInit">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CORDIC_ErrorCallback">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CORDIC_CalculateCpltCallback">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CORDIC_IRQHandler">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CORDIC_GetState">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="HAL_CORDIC_GetError">
        <Argument AddressOf="true" Context="global" GenericType="struct" Name="hcordic" TypeName="CORDIC_HandleTypeDef">
            <Argument AddressOf="false" GenericType="baseaddress" Name="Instance" TypeName="CORDIC_TypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="pInBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="pOutBuff" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToOrder" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="NbCalcToGet" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="DMADirection" OptimizationCondition="equal"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaIn" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="true" GenericType="simple" Name="hdmaOut" OptimizationCondition="equal" TypeName="DMA_HandleTypeDef"/>
            <Argument AddressOf="false" GenericType="simple" Name="Lock" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="State" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="ErrorCode" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <RefComponent Cclass="HAL" Cgroup="CORDIC" Cversion="1.8.0">
        <File Category="header" Name="Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cordic.h"/>
        <File Category="source" Name="Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cordic.c"/>
        <File Category="header" Name="Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_cordic.h"/>
    </RefComponent>
</IP>
