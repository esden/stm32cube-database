<?xml version="1.0" encoding="UTF-8"?>
<!--
 File Name          : SecurityFunction.xml
 Description        : Contextual documentation of the SecurityFunction
                      for all MCU series

 COPYRIGHT(c) 2016 STMicroelectronics

====================================================================
| version 0.1  |  A.Morin          | Creation                      |
====================================================================
| version 0.2  |  A.Morin          | BZ36828 correction            |
====================================================================

Contextual help database for SecurityFunction peripheral, it contains:
    - peripheral generic information under <peripheral> node
    - information about peripheral mode under <mode> node
    - details about the peripheral configuration under <config> node

-->
<ctx_periph_help xsi:noNamespaceSchemaLocation="../../../../../../../doc/V4/Development/Specifications/contextualDocumentation/peripherals.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <!-- serie "ref" is the MCU series you want to document e.g. STM32F0, STM32F1... -->
    <serie ref="Default">
        <peripheral>
            <!-- Title of the contextual widget -->
            <title>Security Function</title>
            <!-- Generic description displayed in the first panel of the tooltip -->
            <extract filter="VL:Abnormal Situation Handling$">Abnormal Situation Handling</extract>
            <extract filter="VL:Application Lifecycle$">Application Lifecycle</extract>
            <extract filter="VL:Audit/Log$">Audit/Log</extract>
            <extract filter="VL:Crypto Engine$">Crypto Engine</extract>
            <extract filter="VL:Identification / Authentication / Attestation$">Identification / Authentication / Attestation</extract>
            <extract filter="VL:Isolation Dual Core$">Isolation Dual Core</extract>
            <extract filter="VL:Isolation Firewall$">Isolation Firewall</extract>
            <extract filter="VL:Isolation TrustZone$">Isolation TrustZone</extract>
            <extract filter="VL:Secure Boot$">Secure Boot</extract>
			<extract filter="VL:Secure Install/Update$">Secure Install/Update</extract>
			<extract filter="VL:Secure Manufacturing$">Secure Manufacturing</extract>
			<extract filter="VL:Secure Storage$">Secure Storage</extract>
			<extract filter="VL:Silicon Device Lifecycle$">Silicon Device Lifecycle</extract>
			<extract filter="VL:Software IP Protection$">Software IP Protection</extract>
            <!-- Detailed information displayed in the expandable panel when no Board has been selected -->
            <help_text filter="VL:Abnormal Situation Handling$">Ability to detect abnormal situations (both hardware and software) and to&lt;br/&gt;
                                                                take adapted decisions like the removal of secret data.
            </help_text>
            <help_text filter="VL:Application Lifecycle$">Application Lifecycle define unchangeable incremental states to securely protect&lt;br/&gt;
                                                          application states and assets.
            </help_text>
            <help_text filter="VL:Audit/Log$">The Audit/Log security function help us to keep trace of security events in an unchangeable way.
            </help_text>
            <help_text filter="VL:Crypto Engine$">The Crypto Engine algorithms are essential to secure an embedded system. The cryptography&lt;br/&gt;
     			                                  ensures confidentiality, integrity and authentication of data or code. For efficiently &lt;br/&gt;
     			                                  supporting these functions, most STM32 series offer microcontroller options with embedded&lt;br/&gt;
     			                                  hardware cryptography peripherals.
            </help_text>
            <help_text filter="VL:Identification / Authentication / Attestation$">Unique identification of a device and/or software package,&lt;br/&gt;
                                                                                  and ability to detect its authenticity, from inside the &lt;br/&gt;
                                                                                  device or externally.
            </help_text>
            <help_text filter="VL:Isolation Dual Core$">The software isolation refers to a runtime mechanism protecting different processes&lt;br/&gt;
       			                                        from each other (inter-process protection) which is an isolation between trusted &lt;br/&gt;
       			                                        and non-trusted parts of an application.The Isolation Dual Core is one of the static&lt;br/&gt;
       			                                        isolation mechanism in which the isolation is done by core ID.
			</help_text>
            <help_text filter="VL:Isolation Firewall$">The Isolation Firewall is used to protect some parts of code or data inside the Flash&lt;br/&gt;
                                                       or the SRAM memories from any attack intended to dump the code or to get visibility &lt;br/&gt;
                                                       of the associated sensitive data. Each illegal access to these protected areas is &lt;br/&gt;
                                                       detected by the FIREWALL which generates consequently a reset, kicking off any intrusion.
            </help_text>
            <help_text filter="VL:Isolation TrustZone$">The software isolation refers to a runtime mechanism protecting different processes&lt;br/&gt;
       			                                        from each other (inter-process protection) which is an isolation between trusted &lt;br/&gt;
       			                                        and non-trusted parts of an application.The Isolation TrustZone is one of the isolation &lt;br/&gt;
       			                                        mechanism which have as type static and dynamic and the isolation is done by secure &lt;br/&gt;
       			                                        attribute propagated from the core to all resources.
            </help_text>
            <help_text filter="VL:Secure Boot$">The Secure boot is executed at reset before the user application. It provides first stages&lt;br/&gt;
    			                                of security and is then responsible for ensuring the global chain of trust of the system.
            </help_text>
			<help_text filter="VL:Secure Install/Update$">Installation or update of firmware with initial checks of integrity and authenticity&lt;br/&gt;
			                                              before programming.
            </help_text>
			<help_text filter="VL:Secure Manufacturing$">The Secure Manufacturing is the initial device provisioning in unsecured environment&lt;br/&gt;
			                                             with over production control. Potential secured personalization.
            </help_text>
			<help_text filter="VL:Secure Storage$">The Secure Storage is the ability to securely store secrets like data or keys (and to access&lt;br/&gt;
			                                       them without them being visible externally).
            </help_text>
			<help_text filter="VL:Silicon Device Lifecycle$">The Silicon Device Lifecycle control states to securely protect silicon-device&lt;br/&gt;
			                                                 assets through a constrained path.
            </help_text>
			<help_text filter="VL:Software IP Protection$">The Software IP Protection is the ability to protect a section or the whole software&lt;br/&gt;
			                                               package against external or internal reading. Can be multi-tenant.
            </help_text>
            <!-- Links that will be displayed on the help widgets:
            - filter: In case a selection needs to be made, use it as regexp on mcu name (STM32F042T6x)
            - display: string that will be displayed in front of the hyperlink
            - type: the type of file you want to display ("txt" "pdf", "chm", "html", "dynamic")
            dynamic stands for the document that have to be retrieved from the JSON database
            - reference: path to the document to be displayed (http or local path)
              If the file is dynamic, indicate the kind of file you want to display:
                * dataSheet => for datasheet document type
                * appNote => for application note document type
                * refMan => for reference manual document type
                * usrMan => for user Manual document type
                * prgMan => for Programming Manual document type
                * errSheet => for Errata Sheet document type
            - index: for pdf,html and chm type it specifies the chapter where the viewer will point
            for dynamic file it can specify a chapter except for application notes where it specifies
            the document display name (e.g. AN1015). This field may be left blank, then the full document
            is displayed -->
            <link display="STM32Trust" type="html" reference="https://www.st.com/content/st_com/en/ecosystems/stm32trust.html" index="">
            </link>
        </peripheral>
        <mode>
            <!-- @TODO Describe the mode TBD for CubeMX -->
        </mode>
        <config>
            <!-- @TODO configuration panel TBD for CubeMX -->
        </config>
    </serie>
</ctx_periph_help>
